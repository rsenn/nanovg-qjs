{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyFunctionList"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"JS_Get",
				"JS_GetPropertyUint32"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"JS_",
				"JS_ThrowTypeError"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"JS_New",
				"JS_NewCFunctionData"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_SetP",
				"JS_SetPropertyStr"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			],
			[
				"js_misc_glob_",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"JS_VALUE_",
				"JS_VALUE_GET_OBJ"
			],
			[
				"js_io_Read",
				"js_io_readhandler_fn"
			],
			[
				"JS_NewS",
				"JS_NewStringLen"
			],
			[
				"target_link",
				"target_link_directories"
			],
			[
				"brea",
				"breakLength"
			],
			[
				"WIF",
				"WIFSIGNALED"
			],
			[
				"JS_VALUE",
				"JS_VALUE_GET_PTR"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"JS_Throw",
				"JS_ThrowOutOfMemory"
			],
			[
				"module_",
				"module_func"
			],
			[
				"initiali",
				"initialization"
			],
			[
				"qjsm_sock",
				"qjsm_socklen_t_size"
			],
			[
				"getCas",
				"getClassConstructor"
			],
			[
				"js_syscall",
				"js_syscallerror_proto_funcs"
			],
			[
				"syscal",
				"syscallerror_proto"
			],
			[
				"JS_SetProper",
				"JS_SetPropertyStr"
			],
			[
				"JS_CGET",
				"JS_CGETSET_ENUMERABLE_DEF"
			],
			[
				"sys",
				"syscallerror_ctor"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"JS_CGETSET",
				"JS_CGETSET_MAGIC_DEF"
			],
			[
				"JS_T",
				"JS_ThrowTypeError"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"js_",
				"js_sockaddr_class_id"
			],
			[
				"STRING",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDECODER_EN",
				"STRINGDECODER_ENCODING"
			],
			[
				"STRINGDE",
				"STRINGDECODER_END"
			],
			[
				"ringbuffer_",
				"ringbuffer_continuous_length"
			],
			[
				"string",
				"stringdecoder_proto"
			],
			[
				"get",
				"getOwnPropertyNames"
			],
			[
				"JS_Thr",
				"JS_ThrowInternalError"
			],
			[
				"ringbuffer_res",
				"ringbuffer_resize"
			],
			[
				"ringb",
				"ringbuffer_normalize"
			],
			[
				"ringbuffer",
				"ringbuffer_length"
			],
			[
				"ring",
				"ringbuffer_full"
			],
			[
				"STRINGDEC",
				"STRINGDECODER_END"
			],
			[
				"Ar",
				"ArchiveEntryRef"
			],
			[
				"js_archive",
				"js_archiveentry_data"
			],
			[
				"ARC",
				"ARCHIVE_METHOD_READ"
			],
			[
				"CMAKE_CURREN",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"getCommand",
				"getCommandExecutable"
			],
			[
				"SYS",
				"SYSCALLERROR_ERRNO"
			],
			[
				"SYSCALL",
				"SYSCALLERROR_SYSCALL"
			],
			[
				"FUNC_",
				"FUNC_GETUID"
			],
			[
				"predi",
				"predicates"
			],
			[
				"int64_t",
				"uint64_t"
			],
			[
				"PRECEDENCE_LOG",
				"PRECEDENCE_LOGICAL_NOT"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_set_to",
				"js_set_tostringtag_value"
			],
			[
				"Predicate",
				"PredicateOperatorSet"
			],
			[
				"Predi",
				"PredicateOperatorSet"
			],
			[
				"JS_P",
				"JS_PROP_CONFIGURABLE"
			],
			[
				"operat",
				"operators_set"
			],
			[
				"break",
				"stringBreakNewline"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"Event",
				"EventEmitter"
			],
			[
				"sy",
				"syntaxerror_ctor"
			],
			[
				"child_pr",
				"child_process_proto"
			],
			[
				"targtet_",
				"target_compile_definitions"
			],
			[
				"jsm_module",
				"jsm_module_loader_so"
			],
			[
				"base",
				"base_name"
			],
			[
				"ATOM",
				"ATOM_TO_VALUE"
			],
			[
				"prop",
				"propenum_tab"
			],
			[
				"loca",
				"location_proto"
			],
			[
				"HAVE_QUI",
				"HAVE_QUICKJS_LIBRARY"
			],
			[
				"jsm_load",
				"jsm_load_packages_json"
			],
			[
				"js_sy",
				"js_syntaxerror_class_id"
			],
			[
				"synta",
				"syntaxerror_proto"
			],
			[
				"property_",
				"property_enumeration_key"
			],
			[
				"jsm_mo",
				"jsm_module_loader_path"
			],
			[
				"inspe",
				"inspect_custom_node"
			],
			[
				"inspect",
				"inspect_custom_node"
			],
			[
				"property",
				"property_enumeration_circular"
			],
			[
				"Reg",
				"RegExpCompare"
			],
			[
				"property_enum",
				"property_enumeration_length"
			],
			[
				"Opera",
				"OperatorsObjects"
			],
			[
				"else",
				"elseif"
			],
			[
				"ABC",
				"ABCDEF"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					421,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								528
							],
							[
								531,
								559
							],
							[
								563,
								579
							],
							[
								810,
								842
							],
							[
								956,
								984
							],
							[
								987,
								997
							],
							[
								1179,
								1201
							],
							[
								2091,
								2096
							],
							[
								2211,
								2236
							],
							[
								2299,
								2317
							],
							[
								2550,
								2563
							],
							[
								2583,
								2591
							],
							[
								2659,
								2685
							],
							[
								2752,
								2791
							],
							[
								2871,
								2892
							],
							[
								3974,
								3984
							],
							[
								4125,
								4204
							],
							[
								4296,
								4307
							],
							[
								4358,
								4374
							],
							[
								4430,
								4444
							],
							[
								4508,
								4514
							],
							[
								5001,
								5011
							],
							[
								5220,
								5233
							],
							[
								5248,
								5261
							],
							[
								5277,
								5289
							],
							[
								5416,
								5429
							],
							[
								5438,
								5451
							],
							[
								5468,
								5480
							],
							[
								5610,
								5623
							],
							[
								5638,
								5651
							],
							[
								5667,
								5679
							],
							[
								5729,
								5738
							],
							[
								6433,
								6448
							],
							[
								6607,
								6623
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle(/*pos, */ radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AwAAAAAAAAAAAAAAdgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHYCAABEcmF3SW1hZ2UoaW1hZ2UsIHBvcykKRHJhd0NpcmNsZSgvKnBvcywgKi8gcmFkaXVzLCBzdHJva2UgPSBudmcuCigyNTUsIDI1NSwgMjU1KSwgZmlsbCA9IG52Zy4KKDI1NSwgMCwgMCwgOTYpKQpSb3RhdGVQb2ludCh4LHksIGFuZ2xlKQpDbGVhcihjb2xvciA9IG52Zy4KKDAsIDAsIDApKQogIG1haW4oLi4uYXJncykKICBlbmQoKQogIGhhbmRsZVNpemUod2lkdGgsIGhlaWdodCkKICBoYW5kbGVLZXkoa2V5Q29kZSkKJ1x4MDAnOiAoKSA9PgpROiAoKSA9PgogIGhhbmRsZUNoYXJNb2RzKGNoYXIsIG1vZHMpCiAgaGFuZGxlTW91c2VCdXR0b24oYnV0dG9uLCBhY3Rpb24sIG1vZHMpCiAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpCiAgcGhpID0gYSA9PgpQbGFuZXQocmFkaXVzLCBzdHJva2UsIGZpbGwsIGdldEFuZ2xlLCBnZXRQcmVjZXNzaW9uLCBnZXRQb3NpdGlvbikKICBnZXQgYW5nbGUoKQogIGdldCBwcmVjZXNzaW9uKCkKICBnZXQgcG9zaXRpb24oKQogIGRyYXcoKQogIGdldCB6cG9zKCkKICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAHYCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					422,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								528
							],
							[
								531,
								559
							],
							[
								563,
								579
							],
							[
								810,
								842
							],
							[
								949,
								977
							],
							[
								980,
								990
							],
							[
								1172,
								1194
							],
							[
								2084,
								2089
							],
							[
								2204,
								2229
							],
							[
								2292,
								2310
							],
							[
								2543,
								2556
							],
							[
								2576,
								2584
							],
							[
								2652,
								2678
							],
							[
								2745,
								2784
							],
							[
								2864,
								2885
							],
							[
								3967,
								3977
							],
							[
								4118,
								4197
							],
							[
								4289,
								4300
							],
							[
								4351,
								4367
							],
							[
								4423,
								4437
							],
							[
								4501,
								4507
							],
							[
								4994,
								5004
							],
							[
								5213,
								5226
							],
							[
								5241,
								5254
							],
							[
								5270,
								5282
							],
							[
								5409,
								5422
							],
							[
								5431,
								5444
							],
							[
								5461,
								5473
							],
							[
								5603,
								5616
							],
							[
								5631,
								5644
							],
							[
								5660,
								5672
							],
							[
								5722,
								5731
							],
							[
								6426,
								6441
							],
							[
								6600,
								6616
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle(/*pos, */ radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB2AgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoLypwb3MsICovIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAAB2AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdgIAAERyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKC8qcG9zLCAqLyByYWRpdXMsIHN0cm9rZSA9IG52Zy4KKDI1NSwgMjU1LCAyNTUpLCBmaWxsID0gbnZnLgooMjU1LCAwLCAwLCA5NikpClJvdGF0ZVBvaW50KHgseSwgYW5nbGUpCkNsZWFyKGNvbG9yID0gbnZnLgooMCwgMCwgMCkpCiAgbWFpbiguLi5hcmdzKQogIGVuZCgpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUtleShrZXlDb2RlKQonXHgwMCc6ICgpID0+ClE6ICgpID0+CiAgaGFuZGxlQ2hhck1vZHMoY2hhciwgbW9kcykKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKICBwaGkgPSBhID0+ClBsYW5ldChyYWRpdXMsIHN0cm9rZSwgZmlsbCwgZ2V0QW5nbGUsIGdldFByZWNlc3Npb24sIGdldFBvc2l0aW9uKQogIGdldCBhbmdsZSgpCiAgZ2V0IHByZWNlc3Npb24oKQogIGdldCBwb3NpdGlvbigpCiAgZHJhdygpCiAgZ2V0IHpwb3MoKQogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgooYSwgYikgPT4KICBydW5NYWluID0gKCkgPT4KKHsgQ29uc29sZSB9KSA9PgAAAAAAAAAAdgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					423,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB2AgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoLypwb3MsICovIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					424,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								528
							],
							[
								531,
								559
							],
							[
								563,
								579
							],
							[
								810,
								842
							],
							[
								949,
								977
							],
							[
								980,
								990
							],
							[
								1172,
								1194
							],
							[
								2084,
								2089
							],
							[
								2204,
								2229
							],
							[
								2292,
								2310
							],
							[
								2543,
								2556
							],
							[
								2576,
								2584
							],
							[
								2652,
								2678
							],
							[
								2745,
								2784
							],
							[
								2864,
								2885
							],
							[
								3967,
								3977
							],
							[
								4118,
								4197
							],
							[
								4289,
								4300
							],
							[
								4351,
								4367
							],
							[
								4423,
								4437
							],
							[
								4501,
								4507
							],
							[
								4994,
								5004
							],
							[
								5213,
								5226
							],
							[
								5241,
								5254
							],
							[
								5270,
								5282
							],
							[
								5409,
								5422
							],
							[
								5431,
								5444
							],
							[
								5461,
								5473
							],
							[
								5603,
								5616
							],
							[
								5631,
								5644
							],
							[
								5660,
								5672
							],
							[
								5722,
								5731
							],
							[
								6426,
								6441
							],
							[
								6600,
								6616
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle(/*pos, */ radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AQAAAAAAAAAAAAAAdgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					425,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								528
							],
							[
								531,
								559
							],
							[
								563,
								579
							],
							[
								810,
								842
							],
							[
								949,
								977
							],
							[
								980,
								990
							],
							[
								1172,
								1194
							],
							[
								2084,
								2089
							],
							[
								2204,
								2229
							],
							[
								2292,
								2310
							],
							[
								2543,
								2556
							],
							[
								2576,
								2584
							],
							[
								2652,
								2678
							],
							[
								2745,
								2784
							],
							[
								2864,
								2885
							],
							[
								3967,
								3977
							],
							[
								4118,
								4197
							],
							[
								4289,
								4300
							],
							[
								4351,
								4367
							],
							[
								4423,
								4437
							],
							[
								4534,
								4540
							],
							[
								5027,
								5037
							],
							[
								5246,
								5259
							],
							[
								5274,
								5287
							],
							[
								5303,
								5315
							],
							[
								5442,
								5455
							],
							[
								5464,
								5477
							],
							[
								5494,
								5506
							],
							[
								5636,
								5649
							],
							[
								5664,
								5677
							],
							[
								5693,
								5705
							],
							[
								5755,
								5764
							],
							[
								6459,
								6474
							],
							[
								6633,
								6649
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle(/*pos, */ radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB2AgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoLypwb3MsICovIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAAB2AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdgIAAERyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKC8qcG9zLCAqLyByYWRpdXMsIHN0cm9rZSA9IG52Zy4KKDI1NSwgMjU1LCAyNTUpLCBmaWxsID0gbnZnLgooMjU1LCAwLCAwLCA5NikpClJvdGF0ZVBvaW50KHgseSwgYW5nbGUpCkNsZWFyKGNvbG9yID0gbnZnLgooMCwgMCwgMCkpCiAgbWFpbiguLi5hcmdzKQogIGVuZCgpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUtleShrZXlDb2RlKQonXHgwMCc6ICgpID0+ClE6ICgpID0+CiAgaGFuZGxlQ2hhck1vZHMoY2hhciwgbW9kcykKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKICBwaGkgPSBhID0+ClBsYW5ldChyYWRpdXMsIHN0cm9rZSwgZmlsbCwgZ2V0QW5nbGUsIGdldFByZWNlc3Npb24sIGdldFBvc2l0aW9uKQogIGdldCBhbmdsZSgpCiAgZ2V0IHByZWNlc3Npb24oKQogIGdldCBwb3NpdGlvbigpCiAgZHJhdygpCiAgZ2V0IHpwb3MoKQogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgooYSwgYikgPT4KICBydW5NYWluID0gKCkgPT4KKHsgQ29uc29sZSB9KSA9PgAAAAAAAAAAdgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					426,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								528
							],
							[
								531,
								559
							],
							[
								563,
								579
							],
							[
								810,
								842
							],
							[
								949,
								977
							],
							[
								980,
								990
							],
							[
								1172,
								1194
							],
							[
								2084,
								2089
							],
							[
								2204,
								2229
							],
							[
								2292,
								2310
							],
							[
								2543,
								2556
							],
							[
								2576,
								2584
							],
							[
								2652,
								2678
							],
							[
								2745,
								2784
							],
							[
								2864,
								2885
							],
							[
								3967,
								3977
							],
							[
								4118,
								4197
							],
							[
								4289,
								4300
							],
							[
								4351,
								4367
							],
							[
								4423,
								4437
							],
							[
								4534,
								4540
							],
							[
								5031,
								5041
							],
							[
								5250,
								5263
							],
							[
								5278,
								5291
							],
							[
								5307,
								5319
							],
							[
								5446,
								5459
							],
							[
								5468,
								5481
							],
							[
								5498,
								5510
							],
							[
								5640,
								5653
							],
							[
								5668,
								5681
							],
							[
								5697,
								5709
							],
							[
								5759,
								5768
							],
							[
								6463,
								6478
							],
							[
								6637,
								6653
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle(/*pos, */ radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB2AgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoLypwb3MsICovIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAAB2AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdgIAAERyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKC8qcG9zLCAqLyByYWRpdXMsIHN0cm9rZSA9IG52Zy4KKDI1NSwgMjU1LCAyNTUpLCBmaWxsID0gbnZnLgooMjU1LCAwLCAwLCA5NikpClJvdGF0ZVBvaW50KHgseSwgYW5nbGUpCkNsZWFyKGNvbG9yID0gbnZnLgooMCwgMCwgMCkpCiAgbWFpbiguLi5hcmdzKQogIGVuZCgpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUtleShrZXlDb2RlKQonXHgwMCc6ICgpID0+ClE6ICgpID0+CiAgaGFuZGxlQ2hhck1vZHMoY2hhciwgbW9kcykKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKICBwaGkgPSBhID0+ClBsYW5ldChyYWRpdXMsIHN0cm9rZSwgZmlsbCwgZ2V0QW5nbGUsIGdldFByZWNlc3Npb24sIGdldFBvc2l0aW9uKQogIGdldCBhbmdsZSgpCiAgZ2V0IHByZWNlc3Npb24oKQogIGdldCBwb3NpdGlvbigpCiAgZHJhdygpCiAgZ2V0IHpwb3MoKQogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgooYSwgYikgPT4KICBydW5NYWluID0gKCkgPT4KKHsgQ29uc29sZSB9KSA9PgAAAAAAAAAAdgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					427,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								776,
								808
							],
							[
								915,
								943
							],
							[
								946,
								956
							],
							[
								1138,
								1160
							],
							[
								2050,
								2055
							],
							[
								2170,
								2195
							],
							[
								2258,
								2276
							],
							[
								2509,
								2522
							],
							[
								2542,
								2550
							],
							[
								2618,
								2644
							],
							[
								2711,
								2750
							],
							[
								2830,
								2851
							],
							[
								3933,
								3943
							],
							[
								4084,
								4163
							],
							[
								4255,
								4266
							],
							[
								4317,
								4333
							],
							[
								4389,
								4403
							],
							[
								4500,
								4506
							],
							[
								4997,
								5007
							],
							[
								5216,
								5229
							],
							[
								5244,
								5257
							],
							[
								5273,
								5285
							],
							[
								5412,
								5425
							],
							[
								5434,
								5447
							],
							[
								5464,
								5476
							],
							[
								5606,
								5619
							],
							[
								5634,
								5647
							],
							[
								5663,
								5675
							],
							[
								5725,
								5734
							],
							[
								6429,
								6444
							],
							[
								6603,
								6619
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB2AgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoLypwb3MsICovIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAABtAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbQIAAERyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKCByYWRpdXMsIHN0cm9rZSA9IG52Zy4KKDI1NSwgMjU1LCAyNTUpLCBmaWxsID0gbnZnLgooMjU1LCAwLCAwLCA5NikpClJvdGF0ZVBvaW50KHgseSwgYW5nbGUpCkNsZWFyKGNvbG9yID0gbnZnLgooMCwgMCwgMCkpCiAgbWFpbiguLi5hcmdzKQogIGVuZCgpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUtleShrZXlDb2RlKQonXHgwMCc6ICgpID0+ClE6ICgpID0+CiAgaGFuZGxlQ2hhck1vZHMoY2hhciwgbW9kcykKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKICBwaGkgPSBhID0+ClBsYW5ldChyYWRpdXMsIHN0cm9rZSwgZmlsbCwgZ2V0QW5nbGUsIGdldFByZWNlc3Npb24sIGdldFBvc2l0aW9uKQogIGdldCBhbmdsZSgpCiAgZ2V0IHByZWNlc3Npb24oKQogIGdldCBwb3NpdGlvbigpCiAgZHJhdygpCiAgZ2V0IHpwb3MoKQogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgooYSwgYikgPT4KICBydW5NYWluID0gKCkgPT4KKHsgQ29uc29sZSB9KSA9PgAAAAAAAAAAbQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					428,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4966,
								4976
							],
							[
								5185,
								5198
							],
							[
								5213,
								5226
							],
							[
								5242,
								5254
							],
							[
								5381,
								5394
							],
							[
								5403,
								5416
							],
							[
								5433,
								5445
							],
							[
								5575,
								5588
							],
							[
								5603,
								5616
							],
							[
								5632,
								5644
							],
							[
								5694,
								5703
							],
							[
								6398,
								6413
							],
							[
								6572,
								6588
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABtAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAABtAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbQIAAERyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKCByYWRpdXMsIHN0cm9rZSA9IG52Zy4KKDI1NSwgMjU1LCAyNTUpLCBmaWxsID0gbnZnLgooMjU1LCAwLCAwLCA5NikpClJvdGF0ZVBvaW50KHgseSwgYW5nbGUpCkNsZWFyKGNvbG9yID0gbnZnLgooMCwgMCwgMCkpCiAgbWFpbiguLi5hcmdzKQogIGVuZCgpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUtleShrZXlDb2RlKQonXHgwMCc6ICgpID0+ClE6ICgpID0+CiAgaGFuZGxlQ2hhck1vZHMoY2hhciwgbW9kcykKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKICBwaGkgPSBhID0+ClBsYW5ldChyYWRpdXMsIHN0cm9rZSwgZmlsbCwgZ2V0QW5nbGUsIGdldFByZWNlc3Npb24sIGdldFBvc2l0aW9uKQogIGdldCBhbmdsZSgpCiAgZ2V0IHByZWNlc3Npb24oKQogIGdldCBwb3NpdGlvbigpCiAgZHJhdygpCiAgZ2V0IHpwb3MoKQogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgooYSwgYikgPT4KICBydW5NYWluID0gKCkgPT4KKHsgQ29uc29sZSB9KSA9PgAAAAAAAAAAbQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					429,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4966,
								4976
							],
							[
								5185,
								5198
							],
							[
								5213,
								5226
							],
							[
								5242,
								5254
							],
							[
								5381,
								5394
							],
							[
								5403,
								5416
							],
							[
								5433,
								5445
							],
							[
								5575,
								5588
							],
							[
								5603,
								5616
							],
							[
								5632,
								5644
							],
							[
								5694,
								5703
							],
							[
								6398,
								6413
							],
							[
								6572,
								6588
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABtAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAABtAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbQIAAERyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKCByYWRpdXMsIHN0cm9rZSA9IG52Zy4KKDI1NSwgMjU1LCAyNTUpLCBmaWxsID0gbnZnLgooMjU1LCAwLCAwLCA5NikpClJvdGF0ZVBvaW50KHgseSwgYW5nbGUpCkNsZWFyKGNvbG9yID0gbnZnLgooMCwgMCwgMCkpCiAgbWFpbiguLi5hcmdzKQogIGVuZCgpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUtleShrZXlDb2RlKQonXHgwMCc6ICgpID0+ClE6ICgpID0+CiAgaGFuZGxlQ2hhck1vZHMoY2hhciwgbW9kcykKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKICBwaGkgPSBhID0+ClBsYW5ldChyYWRpdXMsIHN0cm9rZSwgZmlsbCwgZ2V0QW5nbGUsIGdldFByZWNlc3Npb24sIGdldFBvc2l0aW9uKQogIGdldCBhbmdsZSgpCiAgZ2V0IHByZWNlc3Npb24oKQogIGdldCBwb3NpdGlvbigpCiAgZHJhdygpCiAgZ2V0IHpwb3MoKQogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgooYSwgYikgPT4KICBydW5NYWluID0gKCkgPT4KKHsgQ29uc29sZSB9KSA9PgAAAAAAAAAAbQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					430,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4966,
								4976
							],
							[
								5185,
								5198
							],
							[
								5213,
								5226
							],
							[
								5242,
								5254
							],
							[
								5381,
								5394
							],
							[
								5403,
								5416
							],
							[
								5433,
								5445
							],
							[
								5575,
								5588
							],
							[
								5603,
								5616
							],
							[
								5632,
								5644
							],
							[
								5694,
								5703
							],
							[
								6398,
								6413
							],
							[
								6572,
								6588
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAABtAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					431,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5410,
								5419
							],
							[
								6114,
								6129
							],
							[
								6288,
								6304
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABtAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAABtAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbQIAAERyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKCByYWRpdXMsIHN0cm9rZSA9IG52Zy4KKDI1NSwgMjU1LCAyNTUpLCBmaWxsID0gbnZnLgooMjU1LCAwLCAwLCA5NikpClJvdGF0ZVBvaW50KHgseSwgYW5nbGUpCkNsZWFyKGNvbG9yID0gbnZnLgooMCwgMCwgMCkpCiAgbWFpbiguLi5hcmdzKQogIGVuZCgpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUtleShrZXlDb2RlKQonXHgwMCc6ICgpID0+ClE6ICgpID0+CiAgaGFuZGxlQ2hhck1vZHMoY2hhciwgbW9kcykKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKICBwaGkgPSBhID0+ClBsYW5ldChyYWRpdXMsIHN0cm9rZSwgZmlsbCwgZ2V0QW5nbGUsIGdldFByZWNlc3Npb24sIGdldFBvc2l0aW9uKQogIGdldCBhbmdsZSgpCiAgZ2V0IHByZWNlc3Npb24oKQogIGdldCBwb3NpdGlvbigpCiAgZHJhdygpCiAgZ2V0IHpwb3MoKQogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgooYSwgYikgPT4KICBydW5NYWluID0gKCkgPT4KKHsgQ29uc29sZSB9KSA9PgAAAAAAAAAAbQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					432,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5410,
								5419
							],
							[
								5540,
								5555
							],
							[
								5714,
								5730
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAABtAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					433,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5410,
								5419
							],
							[
								5540,
								5555
							],
							[
								5714,
								5730
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAABtAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					434,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5410,
								5419
							],
							[
								5540,
								5555
							],
							[
								5714,
								5730
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAABtAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					435,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5410,
								5419
							],
							[
								5540,
								5555
							],
							[
								5714,
								5730
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAABtAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					436,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5410,
								5419
							],
							[
								5540,
								5555
							],
							[
								5714,
								5730
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABtAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAABtAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					437,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5490,
								5503
							],
							[
								5518,
								5531
							],
							[
								5547,
								5559
							],
							[
								5610,
								5619
							],
							[
								5740,
								5755
							],
							[
								5914,
								5930
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABtAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAACHAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhwIAAERyYXdJbWFnZShpbWFnZSwgcG9zKQpEcmF3Q2lyY2xlKCByYWRpdXMsIHN0cm9rZSA9IG52Zy4KKDI1NSwgMjU1LCAyNTUpLCBmaWxsID0gbnZnLgooMjU1LCAwLCAwLCA5NikpClJvdGF0ZVBvaW50KHgseSwgYW5nbGUpCkNsZWFyKGNvbG9yID0gbnZnLgooMCwgMCwgMCkpCiAgbWFpbiguLi5hcmdzKQogIGVuZCgpCiAgaGFuZGxlU2l6ZSh3aWR0aCwgaGVpZ2h0KQogIGhhbmRsZUtleShrZXlDb2RlKQonXHgwMCc6ICgpID0+ClE6ICgpID0+CiAgaGFuZGxlQ2hhck1vZHMoY2hhciwgbW9kcykKICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykKICBoYW5kbGVDdXJzb3JQb3MoeCwgeSkKICBwaGkgPSBhID0+ClBsYW5ldChyYWRpdXMsIHN0cm9rZSwgZmlsbCwgZ2V0QW5nbGUsIGdldFByZWNlc3Npb24sIGdldFBvc2l0aW9uKQogIGdldCBhbmdsZSgpCiAgZ2V0IHByZWNlc3Npb24oKQogIGdldCBwb3NpdGlvbigpCiAgZHJhdygpCiAgZ2V0IHpwb3MoKQogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CihhLCBiKSA9PgogIHJ1bk1haW4gPSAoKSA9PgooeyBDb25zb2xlIH0pID0+AAAAAAAAAACHAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					438,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5490,
								5503
							],
							[
								5518,
								5531
							],
							[
								5547,
								5559
							],
							[
								5610,
								5619
							],
							[
								5740,
								5755
							],
							[
								5914,
								5930
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					439,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5490,
								5503
							],
							[
								5518,
								5531
							],
							[
								5547,
								5559
							],
							[
								5610,
								5619
							],
							[
								5740,
								5755
							],
							[
								5914,
								5930
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					440,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5490,
								5503
							],
							[
								5518,
								5531
							],
							[
								5547,
								5559
							],
							[
								5610,
								5619
							],
							[
								5740,
								5755
							],
							[
								5914,
								5930
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					441,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5490,
								5503
							],
							[
								5518,
								5531
							],
							[
								5547,
								5559
							],
							[
								5610,
								5619
							],
							[
								5740,
								5755
							],
							[
								5914,
								5930
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					442,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5490,
								5503
							],
							[
								5518,
								5531
							],
							[
								5548,
								5560
							],
							[
								5611,
								5620
							],
							[
								5741,
								5756
							],
							[
								5915,
								5931
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					443,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5490,
								5503
							],
							[
								5522,
								5535
							],
							[
								5552,
								5564
							],
							[
								5615,
								5624
							],
							[
								5745,
								5760
							],
							[
								5919,
								5935
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					444,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5291,
								5304
							],
							[
								5319,
								5332
							],
							[
								5348,
								5360
							],
							[
								5490,
								5503
							],
							[
								5522,
								5535
							],
							[
								5552,
								5564
							],
							[
								5615,
								5624
							],
							[
								5745,
								5760
							],
							[
								5919,
								5935
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					445,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5292,
								5305
							],
							[
								5320,
								5333
							],
							[
								5349,
								5361
							],
							[
								5491,
								5504
							],
							[
								5523,
								5536
							],
							[
								5553,
								5565
							],
							[
								5616,
								5625
							],
							[
								5746,
								5761
							],
							[
								5920,
								5936
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					446,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5292,
								5305
							],
							[
								5320,
								5333
							],
							[
								5349,
								5361
							],
							[
								5491,
								5504
							],
							[
								5523,
								5536
							],
							[
								5553,
								5565
							],
							[
								5616,
								5625
							],
							[
								5746,
								5761
							],
							[
								5920,
								5936
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					447,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5292,
								5305
							],
							[
								5320,
								5333
							],
							[
								5349,
								5361
							],
							[
								5491,
								5504
							],
							[
								5523,
								5536
							],
							[
								5553,
								5565
							],
							[
								5616,
								5625
							],
							[
								5746,
								5761
							],
							[
								5920,
								5936
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					448,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5292,
								5305
							],
							[
								5320,
								5333
							],
							[
								5349,
								5361
							],
							[
								5491,
								5504
							],
							[
								5523,
								5536
							],
							[
								5553,
								5565
							],
							[
								5616,
								5625
							],
							[
								5746,
								5761
							],
							[
								5920,
								5936
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					449,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5292,
								5305
							],
							[
								5320,
								5333
							],
							[
								5349,
								5361
							],
							[
								5491,
								5504
							],
							[
								5523,
								5536
							],
							[
								5553,
								5565
							],
							[
								5616,
								5625
							],
							[
								5746,
								5761
							],
							[
								5920,
								5936
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					450,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5292,
								5305
							],
							[
								5320,
								5333
							],
							[
								5349,
								5361
							],
							[
								5491,
								5504
							],
							[
								5523,
								5536
							],
							[
								5553,
								5565
							],
							[
								5616,
								5625
							],
							[
								5746,
								5761
							],
							[
								5920,
								5936
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					451,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3902,
								3912
							],
							[
								4053,
								4132
							],
							[
								4224,
								4235
							],
							[
								4286,
								4302
							],
							[
								4358,
								4372
							],
							[
								4469,
								4475
							],
							[
								4682,
								4692
							],
							[
								4901,
								4914
							],
							[
								4929,
								4942
							],
							[
								4958,
								4970
							],
							[
								5097,
								5110
							],
							[
								5119,
								5132
							],
							[
								5149,
								5161
							],
							[
								5292,
								5305
							],
							[
								5324,
								5337
							],
							[
								5353,
								5365
							],
							[
								5495,
								5508
							],
							[
								5527,
								5540
							],
							[
								5557,
								5569
							],
							[
								5620,
								5629
							],
							[
								5750,
								5765
							],
							[
								5924,
								5940
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					452,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								2019,
								2024
							],
							[
								2139,
								2164
							],
							[
								2227,
								2245
							],
							[
								2478,
								2491
							],
							[
								2511,
								2519
							],
							[
								2587,
								2613
							],
							[
								2680,
								2719
							],
							[
								2799,
								2820
							],
							[
								3833,
								3843
							],
							[
								3984,
								4063
							],
							[
								4155,
								4166
							],
							[
								4217,
								4233
							],
							[
								4289,
								4303
							],
							[
								4400,
								4406
							],
							[
								4613,
								4623
							],
							[
								4832,
								4845
							],
							[
								4860,
								4873
							],
							[
								4889,
								4901
							],
							[
								5028,
								5041
							],
							[
								5050,
								5063
							],
							[
								5080,
								5092
							],
							[
								5223,
								5236
							],
							[
								5255,
								5268
							],
							[
								5284,
								5296
							],
							[
								5426,
								5439
							],
							[
								5458,
								5471
							],
							[
								5488,
								5500
							],
							[
								5551,
								5560
							],
							[
								5681,
								5696
							],
							[
								5855,
								5871
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					453,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/test-nanovg.js",
						"symkeys":
						[
							[
								209,
								240
							],
							[
								476,
								520
							],
							[
								523,
								551
							],
							[
								555,
								571
							],
							[
								745,
								777
							],
							[
								884,
								912
							],
							[
								915,
								925
							],
							[
								1107,
								1129
							],
							[
								1984,
								1989
							],
							[
								2104,
								2129
							],
							[
								2192,
								2210
							],
							[
								2443,
								2456
							],
							[
								2476,
								2484
							],
							[
								2552,
								2578
							],
							[
								2645,
								2684
							],
							[
								2764,
								2785
							],
							[
								3798,
								3808
							],
							[
								3949,
								4028
							],
							[
								4120,
								4131
							],
							[
								4182,
								4198
							],
							[
								4254,
								4268
							],
							[
								4365,
								4371
							],
							[
								4578,
								4588
							],
							[
								4797,
								4810
							],
							[
								4825,
								4838
							],
							[
								4854,
								4866
							],
							[
								4993,
								5006
							],
							[
								5015,
								5028
							],
							[
								5045,
								5057
							],
							[
								5188,
								5201
							],
							[
								5220,
								5233
							],
							[
								5249,
								5261
							],
							[
								5391,
								5404
							],
							[
								5423,
								5436
							],
							[
								5453,
								5465
							],
							[
								5516,
								5525
							],
							[
								5646,
								5661
							],
							[
								5820,
								5836
							]
						],
						"symlist":
						[
							" function DrawImage(image, pos)",
							" function DrawCircle( radius, stroke = nvg.",
							"(255, 255, 255), fill = nvg.",
							"(255, 0, 0, 96))",
							"function RotatePoint(x,y, angle)",
							" function Clear(color = nvg.",
							"(0, 0, 0))",
							"function main(...args)",
							"end()",
							"handleSize(width, height)",
							"handleKey(keyCode)",
							"'\\x00': () =>",
							"Q: () =>",
							"handleCharMods(char, mods)",
							"handleMouseButton(button, action, mods)",
							"handleCursorPos(x, y)",
							"phi = a =>",
							" function Planet(radius, stroke, fill, getAngle, getPrecession, getPosition)",
							"get angle()",
							"get precession()",
							"get position()",
							"draw()",
							"get zpos()",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							" () =>",
							" () =>",
							" a =>",
							"(a, b) =>",
							"runMain = () =>",
							"({ Console }) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAIcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/a.out",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACHAgAARHJhd0ltYWdlKGltYWdlLCBwb3MpCkRyYXdDaXJjbGUoIHJhZGl1cywgc3Ryb2tlID0gbnZnLgooMjU1LCAyNTUsIDI1NSksIGZpbGwgPSBudmcuCigyNTUsIDAsIDAsIDk2KSkKUm90YXRlUG9pbnQoeCx5LCBhbmdsZSkKQ2xlYXIoY29sb3IgPSBudmcuCigwLCAwLCAwKSkKICBtYWluKC4uLmFyZ3MpCiAgZW5kKCkKICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpCiAgaGFuZGxlS2V5KGtleUNvZGUpCidceDAwJzogKCkgPT4KUTogKCkgPT4KICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKQogIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKQogIGhhbmRsZUN1cnNvclBvcyh4LCB5KQogIHBoaSA9IGEgPT4KUGxhbmV0KHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXRBbmdsZSwgZ2V0UHJlY2Vzc2lvbiwgZ2V0UG9zaXRpb24pCiAgZ2V0IGFuZ2xlKCkKICBnZXQgcHJlY2Vzc2lvbigpCiAgZ2V0IHBvc2l0aW9uKCkKICBkcmF3KCkKICBnZXQgenBvcygpCiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KICAgKCkgPT4KICAgKCkgPT4KICAgYSA9PgogICAoKSA9PgogICAoKSA9PgogICBhID0+CiAgICgpID0+CiAgICgpID0+CiAgIGEgPT4KKGEsIGIpID0+CiAgcnVuTWFpbiA9ICgpID0+Cih7IENvbnNvbGUgfSkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR"
						]
					},
					"AQAAAAAAAAAAAAAAMgIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					5,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2077,
								2093
							],
							[
								2097,
								2108
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"nanovg_LIBRARIES",
							"nanovg_DEPS"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAyAgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgAAAAAAAAAAUwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMCAABQUk9KRUNUX05BTUUKUEtHX0NPTkZJR19VU0VfQ01BS0VfUFJFRklYX1BBVEgKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1PRFVMRV9DT01QSUxFX0ZMQUdTCk1PRFVMRV9DT01QSUxFX0ZMQUdTCkdMRVdfSU5DTFVERV9ESVIKR0xGV19JTkNMVURFX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSCkdMRVdfTElCUkFSWV9ESVIKR0xGV19MSUJSQVJZX0RJUgpRVUlDS0pTX0xJQlJBUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1PRFVMRV9DT01QSUxFX0ZMQUdTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSCkdMRldfTElCUkFSWQpHTEVXX0xJQlJBUlkKUVVJQ0tKU19MSUJSQVJZCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSCiAgbmFub3ZnX0xJQlJBUklFUwogIG5hbm92Z19ERVBTAAAAAAAAAABTAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgIAAAAAAAAyAgAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2039,
								2063
							],
							[
								2087,
								2111
							],
							[
								2165,
								2189
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABTAgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgogIG5hbm92Z19MSUJSQVJJRVMKICBuYW5vdmdfREVQUwAAAAAAAAAAfQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH0CAABQUk9KRUNUX05BTUUKUEtHX0NPTkZJR19VU0VfQ01BS0VfUFJFRklYX1BBVEgKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1PRFVMRV9DT01QSUxFX0ZMQUdTCk1PRFVMRV9DT01QSUxFX0ZMQUdTCkdMRVdfSU5DTFVERV9ESVIKR0xGV19JTkNMVURFX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSCkdMRVdfTElCUkFSWV9ESVIKR0xGV19MSUJSQVJZX0RJUgpRVUlDS0pTX0xJQlJBUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1PRFVMRV9DT01QSUxFX0ZMQUdTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSCkdMRldfTElCUkFSWQpHTEVXX0xJQlJBUlkKUVVJQ0tKU19MSUJSQVJZCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSAAAAAAAAAAB9AgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2070,
								2094
							],
							[
								2118,
								2142
							],
							[
								2196,
								2220
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgAAAAAAAAAAfQIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2070,
								2094
							],
							[
								2118,
								2142
							],
							[
								2196,
								2220
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgAAAAAAAAAAfQIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2070,
								2094
							],
							[
								2118,
								2142
							],
							[
								2196,
								2220
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgAAAAAAAAAAfQIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB9AgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2070,
								2094
							],
							[
								2118,
								2142
							],
							[
								2196,
								2220
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR"
						]
					},
					"AQAAAAAAAAAAAAAAfQIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					12,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2070,
								2094
							],
							[
								2118,
								2142
							],
							[
								2196,
								2220
							],
							[
								2287,
								2299
							],
							[
								2303,
								2315
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAB9AgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgAAAAAAAAAAlwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJcCAABQUk9KRUNUX05BTUUKUEtHX0NPTkZJR19VU0VfQ01BS0VfUFJFRklYX1BBVEgKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1PRFVMRV9DT01QSUxFX0ZMQUdTCk1PRFVMRV9DT01QSUxFX0ZMQUdTCkdMRVdfSU5DTFVERV9ESVIKR0xGV19JTkNMVURFX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSCkdMRVdfTElCUkFSWV9ESVIKR0xGV19MSUJSQVJZX0RJUgpRVUlDS0pTX0xJQlJBUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1PRFVMRV9DT01QSUxFX0ZMQUdTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSCkdMRldfTElCUkFSWQpHTEVXX0xJQlJBUlkKUVVJQ0tKU19MSUJSQVJZCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkdMRldfTElCUkFSWQpHTEVXX0xJQlJBUlkAAAAAAAAAAJcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2092,
								2116
							],
							[
								2140,
								2164
							],
							[
								2218,
								2242
							],
							[
								2309,
								2321
							],
							[
								2325,
								2337
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXAgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZAAAAAAAAAACXAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2114,
								2138
							],
							[
								2162,
								2186
							],
							[
								2240,
								2264
							],
							[
								2331,
								2343
							],
							[
								2347,
								2359
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXAgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZAAAAAAAAAACXAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2114,
								2138
							],
							[
								2162,
								2186
							],
							[
								2240,
								2264
							],
							[
								2331,
								2343
							],
							[
								2347,
								2359
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXAgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZAAAAAAAAAACXAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2114,
								2138
							],
							[
								2162,
								2186
							],
							[
								2240,
								2264
							],
							[
								2331,
								2343
							],
							[
								2347,
								2359
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACXAgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZAAAAAAAAAACXAgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					17,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2114,
								2138
							],
							[
								2162,
								2186
							],
							[
								2240,
								2264
							],
							[
								2331,
								2343
							],
							[
								2347,
								2359
							],
							[
								2452,
								2476
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"CMAKE_CURRENT_SORUCE_DIR"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACXAgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZAAAAAAAAAACwAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAIAAFBST0pFQ1RfTkFNRQpQS0dfQ09ORklHX1VTRV9DTUFLRV9QUkVGSVhfUEFUSApDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKTU9EVUxFX0NPTVBJTEVfRkxBR1MKTU9EVUxFX0NPTVBJTEVfRkxBR1MKR0xFV19JTkNMVURFX0RJUgpHTEZXX0lOQ0xVREVfRElSClFVSUNLSlNfSU5DTFVERV9ESVIKR0xFV19MSUJSQVJZX0RJUgpHTEZXX0xJQlJBUllfRElSClFVSUNLSlNfTElCUkFSWV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKTU9EVUxFX0NPTVBJTEVfRkxBR1MKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSClFVSUNLSlNfSU5DTFVERV9ESVIKR0xGV19MSUJSQVJZCkdMRVdfTElCUkFSWQpRVUlDS0pTX0xJQlJBUlkKQ01BS0VfSU5TVEFMTF9MSUJESVIKUVVJQ0tKU19DX01PRFVMRV9ESVIKQ01BS0VfSU5TVEFMTF9MSUJESVIKUVVJQ0tKU19DX01PRFVMRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKR0xGV19MSUJSQVJZCkdMRVdfTElCUkFSWQpDTUFLRV9DVVJSRU5UX1NPUlVDRV9ESVIAAAAAAAAAALACAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2114,
								2138
							],
							[
								2162,
								2186
							],
							[
								2240,
								2264
							],
							[
								2331,
								2343
							],
							[
								2347,
								2359
							],
							[
								2452,
								2476
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"CMAKE_CURRENT_SOURCE_DIR"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACwAgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZCkNNQUtFX0NVUlJFTlRfU09SVUNFX0RJUgAAAAAAAAAAsAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					19,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
						"symkeys":
						[
							[
								58,
								70
							],
							[
								83,
								115
							],
							[
								259,
								283
							],
							[
								320,
								344
							],
							[
								378,
								402
							],
							[
								436,
								460
							],
							[
								580,
								600
							],
							[
								603,
								623
							],
							[
								757,
								773
							],
							[
								777,
								793
							],
							[
								797,
								816
							],
							[
								838,
								854
							],
							[
								858,
								874
							],
							[
								878,
								897
							],
							[
								959,
								983
							],
							[
								1007,
								1031
							],
							[
								1085,
								1109
							],
							[
								1226,
								1246
							],
							[
								1319,
								1343
							],
							[
								1358,
								1377
							],
							[
								1423,
								1435
							],
							[
								1439,
								1451
							],
							[
								1466,
								1481
							],
							[
								1629,
								1649
							],
							[
								1722,
								1742
							],
							[
								1746,
								1766
							],
							[
								1853,
								1873
							],
							[
								2114,
								2138
							],
							[
								2162,
								2186
							],
							[
								2240,
								2264
							],
							[
								2331,
								2343
							],
							[
								2347,
								2359
							],
							[
								2414,
								2438
							],
							[
								2478,
								2502
							]
						],
						"symlist":
						[
							"PROJECT_NAME",
							"PKG_CONFIG_USE_CMAKE_PREFIX_PATH",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"MODULE_COMPILE_FLAGS",
							"GLEW_INCLUDE_DIR",
							"GLFW_INCLUDE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLEW_LIBRARY_DIR",
							"GLFW_LIBRARY_DIR",
							"QUICKJS_LIBRARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"MODULE_COMPILE_FLAGS",
							"CMAKE_CURRENT_SOURCE_DIR",
							"QUICKJS_INCLUDE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"QUICKJS_LIBRARY",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_INSTALL_LIBDIR",
							"QUICKJS_C_MODULE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"CMAKE_CURRENT_SOURCE_DIR",
							"GLFW_LIBRARY",
							"GLEW_LIBRARY",
							"CMAKE_CURRENT_BINARY_DIR",
							"CMAKE_CURRENT_SOURCE_DIR"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACwAgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgAAAAAAAAAAyQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMkCAABQUk9KRUNUX05BTUUKUEtHX0NPTkZJR19VU0VfQ01BS0VfUFJFRklYX1BBVEgKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1PRFVMRV9DT01QSUxFX0ZMQUdTCk1PRFVMRV9DT01QSUxFX0ZMQUdTCkdMRVdfSU5DTFVERV9ESVIKR0xGV19JTkNMVURFX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSCkdMRVdfTElCUkFSWV9ESVIKR0xGV19MSUJSQVJZX0RJUgpRVUlDS0pTX0xJQlJBUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCk1PRFVMRV9DT01QSUxFX0ZMQUdTCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpRVUlDS0pTX0lOQ0xVREVfRElSCkdMRldfTElCUkFSWQpHTEVXX0xJQlJBUlkKUVVJQ0tKU19MSUJSQVJZCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSCkNNQUtFX0lOU1RBTExfTElCRElSClFVSUNLSlNfQ19NT0RVTEVfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkdMRldfTElCUkFSWQpHTEVXX0xJQlJBUlkKQ01BS0VfQ1VSUkVOVF9CSU5BUllfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgAAAAAAAAAAyQIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADJAgAAUFJPSkVDVF9OQU1FClBLR19DT05GSUdfVVNFX0NNQUtFX1BSRUZJWF9QQVRICkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpNT0RVTEVfQ09NUElMRV9GTEFHUwpHTEVXX0lOQ0xVREVfRElSCkdMRldfSU5DTFVERV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEVXX0xJQlJBUllfRElSCkdMRldfTElCUkFSWV9ESVIKUVVJQ0tKU19MSUJSQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpNT0RVTEVfQ09NUElMRV9GTEFHUwpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKUVVJQ0tKU19JTkNMVURFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZClFVSUNLSlNfTElCUkFSWQpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9JTlNUQUxMX0xJQkRJUgpRVUlDS0pTX0NfTU9EVUxFX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIKQ01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSCkNNQUtFX0NVUlJFTlRfU09VUkNFX0RJUgpHTEZXX0xJQlJBUlkKR0xFV19MSUJSQVJZCkNNQUtFX0NVUlJFTlRfQklOQVJZX0RJUgpDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVIAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "qjs-nanovg.sublime-project",
			"settings":
			{
				"buffer_size": 47,
				"line_ending": "Unix"
			}
		},
		{
			"file": "nanovg-qjs.c",
			"settings":
			{
				"buffer_size": 25525,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AgAAAJFhAAAAAAAAn2EAAAAAAAAAAAAAn2EAAAAAAACfYQAAAAAAABUAAABqc19pbml0X21vZHVsZV9uYW5vdmc",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRYQAAAAAAAKZhAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "VISIBLE"
					},
					"BwAAAIRhAAAAAAAAhWEAAAAAAAAAAAAAhWEAAAAAAACGYQAAAAAAAAAAAACGYQAAAAAAAIdhAAAAAAAAAAAAAIdhAAAAAAAAiGEAAAAAAAAAAAAAiGEAAAAAAACJYQAAAAAAAAAAAACJYQAAAAAAAIphAAAAAAAAAAAAAIphAAAAAAAAi2EAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEYQAAAAAAAIRhAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIthAAAAAAAAjGEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLYQAAAAAAAIthAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					1,
					"paste",
					null,
					"AQAAALhiAAAAAAAACGMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuGIAAAAAAAC4YgAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAAhjAAAAAAAACWMAAAAAAAAAAAAACWMAAAAAAAALYwAAAAAAAAAAAAALYwAAAAAAAAxjAAAAAAAAAAAAAAljAAAAAAAACWMAAAAAAAACAAAAICAJYwAAAAAAAAljAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACGMAAAAAAAAIYwAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAApjAAAAAAAAC2MAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACmMAAAAAAAAKYwAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"paste",
					null,
					"AgAAAM9iAAAAAAAA5GIAAAAAAAAAAAAA5GIAAAAAAADkYgAAAAAAAA4AAABKU19JTklUX01PRFVMRQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAz2IAAAAAAADdYgAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"left_delete",
					null,
					"AQAAAN1iAAAAAAAA3WIAAAAAAAAHAAAAX25hbm92Zw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5GIAAAAAAADdYgAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "stat"
					},
					"BQAAAIRhAAAAAAAAhWEAAAAAAAAAAAAAhWEAAAAAAACFYQAAAAAAAAcAAABWSVNJQkxFhWEAAAAAAACGYQAAAAAAAAAAAACGYQAAAAAAAIdhAAAAAAAAAAAAAIdhAAAAAAAAiGEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAi2EAAAAAAACEYQAAAAAAAAAAAAAAAAAA"
				],
				[
					129,
					1,
					"left_delete",
					null,
					"AQAAAIdhAAAAAAAAh2EAAAAAAAABAAAAdA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiGEAAAAAAACIYQAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "tic"
					},
					"AwAAAIdhAAAAAAAAiGEAAAAAAAAAAAAAiGEAAAAAAACJYQAAAAAAAAAAAACJYQAAAAAAAIphAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAh2EAAAAAAACHYQAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"paste",
					null,
					"AgAAAJhhAAAAAAAArWEAAAAAAAAAAAAArWEAAAAAAACtYQAAAAAAAA4AAABKU19JTklUX01PRFVMRQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmGEAAAAAAACmYQAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAA5jAAAAAAAAD2MAAAAAAAAAAAAAD2MAAAAAAAARYwAAAAAAAAAAAAARYwAAAAAAABJjAAAAAAAAAAAAABJjAAAAAAAAFGMAAAAAAAAAAAAAD2MAAAAAAAAPYwAAAAAAAAIAAAAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADmMAAAAAAAAOYwAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					2,
					"left_delete",
					null,
					"AgAAABBjAAAAAAAAEGMAAAAAAAACAAAAICAPYwAAAAAAAA9jAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEmMAAAAAAAASYwAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "  retzur"
					},
					"CAAAAA9jAAAAAAAAEGMAAAAAAAAAAAAAEGMAAAAAAAARYwAAAAAAAAAAAAARYwAAAAAAABJjAAAAAAAAAAAAABJjAAAAAAAAE2MAAAAAAAAAAAAAE2MAAAAAAAAUYwAAAAAAAAAAAAAUYwAAAAAAABVjAAAAAAAAAAAAABVjAAAAAAAAFmMAAAAAAAAAAAAAFmMAAAAAAAAXYwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAD2MAAAAAAAAPYwAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					3,
					"left_delete",
					null,
					"AwAAABZjAAAAAAAAFmMAAAAAAAABAAAAchVjAAAAAAAAFWMAAAAAAAABAAAAdRRjAAAAAAAAFGMAAAAAAAABAAAAeg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAF2MAAAAAAAAXYwAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "urn"
					},
					"AwAAABRjAAAAAAAAFWMAAAAAAAAAAAAAFWMAAAAAAAAWYwAAAAAAAAAAAAAWYwAAAAAAABdjAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFGMAAAAAAAAUYwAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABdjAAAAAAAAGGMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAF2MAAAAAAAAXYwAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"paste",
					null,
					"AQAAABhjAAAAAAAALWMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGGMAAAAAAAAYYwAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAC1jAAAAAAAALmMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALWMAAAAAAAAtYwAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"paste",
					null,
					"AQAAAMBiAAAAAAAA2WIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwGIAAAAAAADAYgAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEpjAAAAAAAAS2MAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASmMAAAAAAABKYwAAAAAAAAAAAAAAAAAA"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "#endif"
					},
					"BgAAAEpjAAAAAAAAS2MAAAAAAAAAAAAAS2MAAAAAAABMYwAAAAAAAAAAAABMYwAAAAAAAE1jAAAAAAAAAAAAAE1jAAAAAAAATmMAAAAAAAAAAAAATmMAAAAAAABPYwAAAAAAAAAAAABPYwAAAAAAAFBjAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASmMAAAAAAABKYwAAAAAAAAAAAAAAAAAA"
				],
				[
					190,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEZjAAAAAAAASGMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARmMAAAAAAABGYwAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAAEdjAAAAAAAASGMAAAAAAAAAAAAASGMAAAAAAABJYwAAAAAAAAAAAABJYwAAAAAAAEpjAAAAAAAAAAAAAEpjAAAAAAAAS2MAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAR2MAAAAAAABHYwAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": " nmo"
					},
					"BAAAAEtjAAAAAAAATGMAAAAAAAAAAAAATGMAAAAAAABNYwAAAAAAAAAAAABNYwAAAAAAAE5jAAAAAAAAAAAAAE5jAAAAAAAAT2MAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAS2MAAAAAAABLYwAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					3,
					"left_delete",
					null,
					"AwAAAE5jAAAAAAAATmMAAAAAAAABAAAAb01jAAAAAAAATWMAAAAAAAABAAAAbUxjAAAAAAAATGMAAAAAAAABAAAAbg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAT2MAAAAAAABPYwAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "module_name"
					},
					"CwAAAExjAAAAAAAATWMAAAAAAAAAAAAATWMAAAAAAABOYwAAAAAAAAAAAABOYwAAAAAAAE9jAAAAAAAAAAAAAE9jAAAAAAAAUGMAAAAAAAAAAAAAUGMAAAAAAABRYwAAAAAAAAAAAABRYwAAAAAAAFJjAAAAAAAAAAAAAFJjAAAAAAAAU2MAAAAAAAAAAAAAU2MAAAAAAABUYwAAAAAAAAAAAABUYwAAAAAAAFVjAAAAAAAAAAAAAFVjAAAAAAAAVmMAAAAAAAAAAAAAVmMAAAAAAABXYwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATGMAAAAAAABMYwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "test-nanovg.js",
			"settings":
			{
				"buffer_size": 6045,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2762,
					2,
					"left_delete",
					null,
					"AgAAAEoRAAAAAAAAShEAAAAAAAABAAAAMEkRAAAAAAAASREAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLEQAAAAAAAEsRAAAAAAAAAAAAAAAA8L8"
				],
				[
					2763,
					1,
					"insert",
					{
						"characters": "18"
					},
					"AgAAAEkRAAAAAAAAShEAAAAAAAAAAAAAShEAAAAAAABLEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJEQAAAAAAAEkRAAAAAAAAAAAAAAAA8L8"
				],
				[
					2767,
					1,
					"right_delete",
					null,
					"AQAAAE4RAAAAAAAAThEAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOEQAAAAAAAE4RAAAAAAAAAAAAAAAA8L8"
				],
				[
					2768,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAE4RAAAAAAAATxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOEQAAAAAAAE4RAAAAAAAAAAAAAAAA8L8"
				],
				[
					2778,
					1,
					"right_delete",
					null,
					"AQAAAJoQAAAAAAAAmhAAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaEAAAAAAAAJoQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2779,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAJoQAAAAAAAAmxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaEAAAAAAAAJoQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2780,
					1,
					"left_delete",
					null,
					"AQAAAJoQAAAAAAAAmhAAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbEAAAAAAAAJsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2781,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAJoQAAAAAAAAmxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaEAAAAAAAAJoQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2791,
					1,
					"right_delete",
					null,
					"AQAAAN0PAAAAAAAA3Q8AAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdDwAAAAAAAN0PAAAAAAAAAAAAAADgcEA"
				],
				[
					2795,
					1,
					"left_delete",
					null,
					"AQAAANgPAAAAAAAA2A8AAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZDwAAAAAAANkPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2796,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAANgPAAAAAAAA2Q8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYDwAAAAAAANgPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2814,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAJAPAAAAAAAAkQ8AAAAAAAAAAAAAkQ8AAAAAAACSDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQDwAAAAAAAJAPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2816,
					1,
					"insert",
					{
						"characters": "function"
					},
					"CAAAAJEPAAAAAAAAkg8AAAAAAAAAAAAAkg8AAAAAAACTDwAAAAAAAAAAAACTDwAAAAAAAJQPAAAAAAAAAAAAAJQPAAAAAAAAlQ8AAAAAAAAAAAAAlQ8AAAAAAACWDwAAAAAAAAAAAACWDwAAAAAAAJcPAAAAAAAAAAAAAJcPAAAAAAAAmA8AAAAAAAAAAAAAmA8AAAAAAACZDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRDwAAAAAAAJEPAAAAAAAAAAAAAAAAAAA"
				],
				[
					2817,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJkPAAAAAAAAmg8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZDwAAAAAAAJkPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2818,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJoPAAAAAAAAnA8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaDwAAAAAAAJoPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2819,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAJoPAAAAAAAAmg8AAAAAAAABAAAAKJoPAAAAAAAAmg8AAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbDwAAAAAAAJsPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2820,
					1,
					"insert",
					{
						"characters": "pla"
					},
					"AwAAAJoPAAAAAAAAmw8AAAAAAAAAAAAAmw8AAAAAAACcDwAAAAAAAAAAAACcDwAAAAAAAJ0PAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaDwAAAAAAAJoPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2821,
					3,
					"left_delete",
					null,
					"AwAAAJwPAAAAAAAAnA8AAAAAAAABAAAAYZsPAAAAAAAAmw8AAAAAAAABAAAAbJoPAAAAAAAAmg8AAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdDwAAAAAAAJ0PAAAAAAAAAAAAAAAA8L8"
				],
				[
					2822,
					1,
					"insert",
					{
						"characters": "Planet/"
					},
					"BwAAAJoPAAAAAAAAmw8AAAAAAAAAAAAAmw8AAAAAAACcDwAAAAAAAAAAAACcDwAAAAAAAJ0PAAAAAAAAAAAAAJ0PAAAAAAAAng8AAAAAAAAAAAAAng8AAAAAAACfDwAAAAAAAAAAAACfDwAAAAAAAKAPAAAAAAAAAAAAAKAPAAAAAAAAoQ8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaDwAAAAAAAJoPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2823,
					1,
					"left_delete",
					null,
					"AQAAAKAPAAAAAAAAoA8AAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChDwAAAAAAAKEPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2824,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKAPAAAAAAAAog8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgDwAAAAAAAKAPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2825,
					1,
					"insert",
					{
						"characters": "stroke,fill"
					},
					"CwAAAKEPAAAAAAAAog8AAAAAAAAAAAAAog8AAAAAAACjDwAAAAAAAAAAAACjDwAAAAAAAKQPAAAAAAAAAAAAAKQPAAAAAAAApQ8AAAAAAAAAAAAApQ8AAAAAAACmDwAAAAAAAAAAAACmDwAAAAAAAKcPAAAAAAAAAAAAAKcPAAAAAAAAqA8AAAAAAAAAAAAAqA8AAAAAAACpDwAAAAAAAAAAAACpDwAAAAAAAKoPAAAAAAAAAAAAAKoPAAAAAAAAqw8AAAAAAAAAAAAAqw8AAAAAAACsDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChDwAAAAAAAKEPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2826,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKwPAAAAAAAArQ8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsDwAAAAAAAKwPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2827,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK0PAAAAAAAArg8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtDwAAAAAAAK0PAAAAAAAAAAAAAAAA8L8"
				],
				[
					2828,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"AwAAAK4PAAAAAAAArw8AAAAAAAAAAAAArw8AAAAAAACwDwAAAAAAAAAAAACwDwAAAAAAALEPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuDwAAAAAAAK4PAAAAAAAAAAAAAAAA8L8"
				],
				[
					2830,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALIPAAAAAAAAsw8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyDwAAAAAAALIPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2831,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALMPAAAAAAAAtQ8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzDwAAAAAAALMPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2832,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAALQPAAAAAAAAtQ8AAAAAAAAAAAAAtQ8AAAAAAAC2DwAAAAAAAAAAAAC1DwAAAAAAALcPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0DwAAAAAAALQPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2837,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAALcPAAAAAAAAuA8AAAAAAAAAAAAAuA8AAAAAAAC5DwAAAAAAAAAAAAC5DwAAAAAAALoPAAAAAAAAAAAAALoPAAAAAAAAuw8AAAAAAAAAAAAAuw8AAAAAAAC8DwAAAAAAAAAAAAC8DwAAAAAAAL0PAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3DwAAAAAAALcPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2838,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL0PAAAAAAAAvg8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9DwAAAAAAAL0PAAAAAAAAAAAAAAAA8L8"
				],
				[
					2839,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAL4PAAAAAAAAwA8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+DwAAAAAAAL4PAAAAAAAAAAAAAAAA8L8"
				],
				[
					2840,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAL8PAAAAAAAAwA8AAAAAAAAAAAAAwA8AAAAAAADCDwAAAAAAAAAAAADCDwAAAAAAAMMPAAAAAAAAAAAAAMMPAAAAAAAAxQ8AAAAAAAAAAAAAwA8AAAAAAADADwAAAAAAAAIAAAAgIMAPAAAAAAAAxA8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/DwAAAAAAAL8PAAAAAAAAAAAAAAAA8L8"
				],
				[
					2841,
					1,
					"insert",
					{
						"characters": "stroke,fill,"
					},
					"DAAAAMQPAAAAAAAAxQ8AAAAAAAAAAAAAxQ8AAAAAAADGDwAAAAAAAAAAAADGDwAAAAAAAMcPAAAAAAAAAAAAAMcPAAAAAAAAyA8AAAAAAAAAAAAAyA8AAAAAAADJDwAAAAAAAAAAAADJDwAAAAAAAMoPAAAAAAAAAAAAAMoPAAAAAAAAyw8AAAAAAAAAAAAAyw8AAAAAAADMDwAAAAAAAAAAAADMDwAAAAAAAM0PAAAAAAAAAAAAAM0PAAAAAAAAzg8AAAAAAAAAAAAAzg8AAAAAAADPDwAAAAAAAAAAAADPDwAAAAAAANAPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEDwAAAAAAAMQPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2844,
					3,
					"right_delete",
					null,
					"AwAAAK4PAAAAAAAArg8AAAAAAAABAAAAcK4PAAAAAAAArg8AAAAAAAABAAAAb64PAAAAAAAArg8AAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuDwAAAAAAAK4PAAAAAAAAAAAAAAAA8L8"
				],
				[
					2845,
					1,
					"insert",
					{
						"characters": "position"
					},
					"CAAAAK4PAAAAAAAArw8AAAAAAAAAAAAArw8AAAAAAACwDwAAAAAAAAAAAACwDwAAAAAAALEPAAAAAAAAAAAAALEPAAAAAAAAsg8AAAAAAAAAAAAAsg8AAAAAAACzDwAAAAAAAAAAAACzDwAAAAAAALQPAAAAAAAAAAAAALQPAAAAAAAAtQ8AAAAAAAAAAAAAtQ8AAAAAAAC2DwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuDwAAAAAAAK4PAAAAAAAAAAAAAAAA8L8"
				],
				[
					2847,
					1,
					"insert",
					{
						"characters": " posit"
					},
					"BgAAANUPAAAAAAAA1g8AAAAAAAAAAAAA1g8AAAAAAADXDwAAAAAAAAAAAADXDwAAAAAAANgPAAAAAAAAAAAAANgPAAAAAAAA2Q8AAAAAAAAAAAAA2Q8AAAAAAADaDwAAAAAAAAAAAADaDwAAAAAAANsPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVDwAAAAAAANUPAAAAAAAAAAAAAADQdEA"
				],
				[
					2848,
					1,
					"insert",
					{
						"characters": "on"
					},
					"AgAAANsPAAAAAAAA3A8AAAAAAAAAAAAA3A8AAAAAAADdDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbDwAAAAAAANsPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2849,
					2,
					"left_delete",
					null,
					"AgAAANwPAAAAAAAA3A8AAAAAAAABAAAAbtsPAAAAAAAA2w8AAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdDwAAAAAAAN0PAAAAAAAAAAAAAAAA8L8"
				],
				[
					2850,
					1,
					"insert",
					{
						"characters": "ion"
					},
					"AwAAANsPAAAAAAAA3A8AAAAAAAAAAAAA3A8AAAAAAADdDwAAAAAAAAAAAADdDwAAAAAAAN4PAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbDwAAAAAAANsPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2865,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOIPAAAAAAAA4w8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiDwAAAAAAAOIPAAAAAAAA////////738"
				],
				[
					2867,
					1,
					"insert",
					{
						"characters": "\n\nnew"
					},
					"BQAAAOUPAAAAAAAA5g8AAAAAAAAAAAAA5g8AAAAAAADnDwAAAAAAAAAAAADnDwAAAAAAAOgPAAAAAAAAAAAAAOgPAAAAAAAA6Q8AAAAAAAAAAAAA6Q8AAAAAAADqDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlDwAAAAAAAOUPAAAAAAAAAAAAAAAAQkA"
				],
				[
					2868,
					1,
					"insert",
					{
						"characters": " Plaet"
					},
					"BgAAAOoPAAAAAAAA6w8AAAAAAAAAAAAA6w8AAAAAAADsDwAAAAAAAAAAAADsDwAAAAAAAO0PAAAAAAAAAAAAAO0PAAAAAAAA7g8AAAAAAAAAAAAA7g8AAAAAAADvDwAAAAAAAAAAAADvDwAAAAAAAPAPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqDwAAAAAAAOoPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2869,
					2,
					"left_delete",
					null,
					"AgAAAO8PAAAAAAAA7w8AAAAAAAABAAAAdO4PAAAAAAAA7g8AAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwDwAAAAAAAPAPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2870,
					1,
					"insert",
					{
						"characters": "net"
					},
					"AwAAAO4PAAAAAAAA7w8AAAAAAAAAAAAA7w8AAAAAAADwDwAAAAAAAAAAAADwDwAAAAAAAPEPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuDwAAAAAAAO4PAAAAAAAAAAAAAAAA8L8"
				],
				[
					2871,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPEPAAAAAAAA8w8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxDwAAAAAAAPEPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2877,
					1,
					"paste",
					null,
					"AgAAAPIPAAAAAAAAJhAAAAAAAAAAAAAAJhAAAAAAAAAmEAAAAAAAAAEAAAAp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyDwAAAAAAAPMPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2881,
					1,
					"insert",
					{
						"characters": "radius,"
					},
					"BwAAAKEPAAAAAAAAog8AAAAAAAAAAAAAog8AAAAAAACjDwAAAAAAAAAAAACjDwAAAAAAAKQPAAAAAAAAAAAAAKQPAAAAAAAApQ8AAAAAAAAAAAAApQ8AAAAAAACmDwAAAAAAAAAAAACmDwAAAAAAAKcPAAAAAAAAAAAAAKcPAAAAAAAAqA8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChDwAAAAAAAKEPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2883,
					1,
					"insert",
					{
						"characters": "radius,"
					},
					"BwAAAMsPAAAAAAAAzA8AAAAAAAAAAAAAzA8AAAAAAADNDwAAAAAAAAAAAADNDwAAAAAAAM4PAAAAAAAAAAAAAM4PAAAAAAAAzw8AAAAAAAAAAAAAzw8AAAAAAADQDwAAAAAAAAAAAADQDwAAAAAAANEPAAAAAAAAAAAAANEPAAAAAAAA0g8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLDwAAAAAAAMsPAAAAAAAAAAAAAADgaUA"
				],
				[
					2891,
					1,
					"insert",
					{
						"characters": "50,"
					},
					"AwAAAAAQAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAACEAAAAAAAAAAAAAACEAAAAAAAAAMQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2892,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMQAAAAAAAABBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2894,
					2,
					"left_delete",
					null,
					"AgAAADcQAAAAAAAANxAAAAAAAAABAAAAOzYQAAAAAAAANhAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4EAAAAAAAADgQAAAAAAAA////////738"
				],
				[
					2895,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADYQAAAAAAAANxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2EAAAAAAAADYQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2896,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADcQAAAAAAAAOBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3EAAAAAAAADcQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2904,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADgQAAAAAAAAORAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4EAAAAAAAADgQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2905,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAADkQAAAAAAAAOxAAAAAAAAAAAAAAOhAAAAAAAAA8EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5EAAAAAAAADkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2906,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADsQAAAAAAAAPBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7EAAAAAAAADsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2907,
					2,
					"left_delete",
					null,
					"AgAAADsQAAAAAAAAOxAAAAAAAAABAAAAIDoQAAAAAAAAOhAAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8EAAAAAAAADwQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2908,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADoQAAAAAAAAPBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6EAAAAAAAADoQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2909,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADsQAAAAAAAAPBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7EAAAAAAAADsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2910,
					1,
					"left_delete",
					null,
					"AQAAADsQAAAAAAAAOxAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8EAAAAAAAADwQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2911,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAADoQAAAAAAAAOhAAAAAAAAABAAAAKDoQAAAAAAAAOhAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7EAAAAAAAADsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2913,
					1,
					"insert",
					{
						"characters": "=>"
					},
					"AgAAADsQAAAAAAAAPBAAAAAAAAAAAAAAPBAAAAAAAAA9EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7EAAAAAAAADsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2914,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD0QAAAAAAAAPhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9EAAAAAAAAD0QAAAAAAAAAAAAAAAA8L8"
				],
				[
					2915,
					1,
					"paste",
					null,
					"AQAAAD4QAAAAAAAAWRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+EAAAAAAAAD4QAAAAAAAAAAAAAAAA8L8"
				],
				[
					2916,
					1,
					"right_delete",
					null,
					"AQAAAFkQAAAAAAAAWRAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZEAAAAAAAAFkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2917,
					2,
					"left_delete",
					null,
					"AgAAAFgQAAAAAAAAWBAAAAAAAAABAAAAO1cQAAAAAAAAVxAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZEAAAAAAAAFkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2918,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAFcQAAAAAAAAWBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXEAAAAAAAAFcQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2919,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFgQAAAAAAAAWRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYEAAAAAAAAFgQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2920,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFkQAAAAAAAAWhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZEAAAAAAAAFkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2923,
					1,
					"cut",
					null,
					"AQAAAPUPAAAAAAAA9Q8AAAAAAABlAAAAbmV3IFBsYW5ldCg1MCwgbnZnLlJHQigyNTUsIDI1NSwgMjI0KSwgbnZnLlJHQkEoMjU1LCAxOTIsIDAsIDI1NSksICAoKT0+IHZlYygyMCwgMTAsIHBoaShpICsgMjQwKSkpOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1DwAAAAAAAFoQAAAAAAAAAAAAAAAAAAA"
				],
				[
					2924,
					3,
					"paste",
					null,
					"AwAAAPUPAAAAAAAAWhAAAAAAAAAAAAAAWhAAAAAAAAC/EAAAAAAAAAAAAAC/EAAAAAAAACQRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1DwAAAAAAAPUPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2935,
					1,
					"paste",
					null,
					"AgAAAGUQAAAAAAAAnxAAAAAAAAAAAAAAnxAAAAAAAACfEAAAAAAAADYAAAA1MCwgbnZnLlJHQigyNTUsIDI1NSwgMjI0KSwgbnZnLlJHQkEoMjU1LCAxOTIsIDAsIDI1NSk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlEAAAAAAAAJsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2941,
					1,
					"paste",
					null,
					"AgAAAKcQAAAAAAAAshAAAAAAAAAAAAAAshAAAAAAAACyEAAAAAAAABgAAAB2ZWMoMjAsIDEwLCBwaGkoaSArIDI0MCk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnEAAAAAAAAL8QAAAAAAAAAAAAAAAA8L8"
				],
				[
					2951,
					1,
					"paste",
					null,
					"AgAAAMEQAAAAAAAA/RAAAAAAAAAAAAAA/RAAAAAAAAD9EAAAAAAAADYAAAA1MCwgbnZnLlJHQigyNTUsIDI1NSwgMjI0KSwgbnZnLlJHQkEoMjU1LCAxOTIsIDAsIDI1NSk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBEAAAAAAAAPcQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2959,
					1,
					"paste",
					null,
					"AgAAAAQRAAAAAAAAHhEAAAAAAAAAAAAAHhEAAAAAAAAeEQAAAAAAABoAAAAgdmVjKDIwLCAxMCwgcGhpKGkgKyAyNDApKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEEQAAAAAAAB4RAAAAAAAAAAAAAAAA8L8"
				],
				[
					2960,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB4RAAAAAAAAHxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeEQAAAAAAAB4RAAAAAAAAAAAAAAAA8L8"
				],
				[
					2961,
					1,
					"left_delete",
					null,
					"AQAAAB4RAAAAAAAAHhEAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfEQAAAAAAAB8RAAAAAAAAAAAAAAAA8L8"
				],
				[
					2963,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BAAAAPQPAAAAAAAA9Q8AAAAAAAAAAAAA9Q8AAAAAAAD2DwAAAAAAAAAAAAD2DwAAAAAAAPcPAAAAAAAAAAAAAPcPAAAAAAAA+A8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0DwAAAAAAAPQPAAAAAAAAAAAAAABAjUA"
				],
				[
					2964,
					1,
					"insert",
					{
						"characters": " planets"
					},
					"CAAAAPgPAAAAAAAA+Q8AAAAAAAAAAAAA+Q8AAAAAAAD6DwAAAAAAAAAAAAD6DwAAAAAAAPsPAAAAAAAAAAAAAPsPAAAAAAAA/A8AAAAAAAAAAAAA/A8AAAAAAAD9DwAAAAAAAAAAAAD9DwAAAAAAAP4PAAAAAAAAAAAAAP4PAAAAAAAA/w8AAAAAAAAAAAAA/w8AAAAAAAAAEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4DwAAAAAAAPgPAAAAAAAAAAAAAAAA8L8"
				],
				[
					2965,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAAQAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAACEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2966,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAIQAAAAAAAAAxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACEAAAAAAAAAIQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2967,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAAMQAAAAAAAABRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADEAAAAAAAAAMQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2968,
					1,
					"right_delete",
					null,
					"AQAAAAQQAAAAAAAABBAAAAAAAAABAAAAXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEEAAAAAAAAAQQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2977,
					1,
					"left_delete",
					null,
					"AQAAAGgQAAAAAAAAaBAAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpEAAAAAAAAGkQAAAAAAAA////////738"
				],
				[
					2978,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGgQAAAAAAAAaRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoEAAAAAAAAGgQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2980,
					1,
					"left_delete",
					null,
					"AQAAAMQQAAAAAAAAxBAAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFEAAAAAAAAMUQAAAAAAAAAAAAAAAgjEA"
				],
				[
					2981,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMQQAAAAAAAAxRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEEAAAAAAAAMQQAAAAAAAAAAAAAAAA8L8"
				],
				[
					2989,
					1,
					"left_delete",
					null,
					"AQAAAC8RAAAAAAAALxEAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwEQAAAAAAADARAAAAAAAA////////738"
				],
				[
					2990,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAC8RAAAAAAAAMBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvEQAAAAAAAC8RAAAAAAAAAAAAAAAA8L8"
				],
				[
					2991,
					1,
					"left_delete",
					null,
					"AQAAAC8RAAAAAAAALxEAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwEQAAAAAAADARAAAAAAAAAAAAAAAA8L8"
				],
				[
					2992,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAC8RAAAAAAAAMBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvEQAAAAAAAC8RAAAAAAAAAAAAAAAA8L8"
				],
				[
					2993,
					1,
					"insert",
					{
						"characters": "\n];"
					},
					"AwAAADARAAAAAAAAMREAAAAAAAAAAAAAMREAAAAAAAAyEQAAAAAAAAAAAAAyEQAAAAAAADMRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwEQAAAAAAADARAAAAAAAAAAAAAAAA8L8"
				],
				[
					3023,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AgAAAEkQAAAAAAAAShAAAAAAAAAAAAAAShAAAAAAAABKEAAAAAAAAAIAAAAoKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJEAAAAAAAAEsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3025,
					1,
					"insert",
					{
						"characters": "a)"
					},
					"AgAAAFkQAAAAAAAAWhAAAAAAAAAAAAAAWhAAAAAAAABbEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZEAAAAAAAAFkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3028,
					1,
					"cut",
					null,
					"AQAAAFsQAAAAAAAAWxAAAAAAAAAMAAAAcGhpKGkgKyAyNDAp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbEAAAAAAAAGcQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3030,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAEgQAAAAAAAASRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIEAAAAAAAAEgQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3031,
					1,
					"left_delete",
					null,
					"AQAAAEgQAAAAAAAASBAAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJEAAAAAAAAEkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3032,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAEgQAAAAAAAASRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIEAAAAAAAAEgQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3033,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAEkQAAAAAAAAShAAAAAAAAAAAAAAShAAAAAAAABLEAAAAAAAAAAAAABLEAAAAAAAAEwQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJEAAAAAAAAEkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3034,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEwQAAAAAAAATRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMEAAAAAAAAEwQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3035,
					1,
					"paste",
					null,
					"AQAAAE0QAAAAAAAAWRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNEAAAAAAAAE0QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3036,
					1,
					"insert",
					{
						"characters": ",m"
					},
					"AgAAAFkQAAAAAAAAWhAAAAAAAAAAAAAAWhAAAAAAAABbEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZEAAAAAAAAFkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3037,
					1,
					"left_delete",
					null,
					"AQAAAFoQAAAAAAAAWhAAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbEAAAAAAAAFsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3039,
					1,
					"left_delete",
					null,
					"AQAAAEgQAAAAAAAASBAAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJEAAAAAAAAEkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3040,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEgQAAAAAAAAShAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIEAAAAAAAAEgQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3044,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALkQAAAAAAAAuxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5EAAAAAAAALkQAAAAAAAAAAAAAAD4g0A"
				],
				[
					3046,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAALsQAAAAAAAAvBAAAAAAAAAAAAAAvBAAAAAAAAC9EAAAAAAAAAAAAAC9EAAAAAAAAL4QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7EAAAAAAAALsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3047,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL4QAAAAAAAAvxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+EAAAAAAAAL4QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3048,
					1,
					"paste",
					null,
					"AQAAAL8QAAAAAAAAyxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/EAAAAAAAAL8QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3049,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMsQAAAAAAAAzBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLEAAAAAAAAMsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3051,
					2,
					"left_delete",
					null,
					"AgAAAMgQAAAAAAAAyBAAAAAAAAABAAAANMcQAAAAAAAAxxAAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJEAAAAAAAAMkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3052,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAMcQAAAAAAAAyBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHEAAAAAAAAMcQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3053,
					4,
					"left_delete",
					null,
					"BAAAAMcQAAAAAAAAxxAAAAAAAAABAAAAMcYQAAAAAAAAxhAAAAAAAAABAAAAIMUQAAAAAAAAxRAAAAAAAAABAAAAK8QQAAAAAAAAxBAAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIEAAAAAAAAMgQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3054,
					1,
					"right_delete",
					null,
					"AQAAAMQQAAAAAAAAxBAAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEEAAAAAAAAMQQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3058,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACQRAAAAAAAAJhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkEQAAAAAAACQRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3059,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACURAAAAAAAAJhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlEQAAAAAAACURAAAAAAAAAAAAAAAA8L8"
				],
				[
					3060,
					1,
					"left_delete",
					null,
					"AQAAACURAAAAAAAAJREAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmEQAAAAAAACYRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3062,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAACYRAAAAAAAAJxEAAAAAAAAAAAAAJxEAAAAAAAAoEQAAAAAAAAAAAAAoEQAAAAAAACkRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmEQAAAAAAACYRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3063,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACkRAAAAAAAAKhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApEQAAAAAAACkRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3064,
					1,
					"paste",
					null,
					"AQAAACoRAAAAAAAANhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqEQAAAAAAACoRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3066,
					3,
					"left_delete",
					null,
					"AwAAADQRAAAAAAAANBEAAAAAAAABAAAAMDMRAAAAAAAAMxEAAAAAAAABAAAANDIRAAAAAAAAMhEAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1EQAAAAAAADURAAAAAAAAAAAAAAAA8L8"
				],
				[
					3067,
					1,
					"insert",
					{
						"characters": "120"
					},
					"AwAAADIRAAAAAAAAMxEAAAAAAAAAAAAAMxEAAAAAAAA0EQAAAAAAAAAAAAA0EQAAAAAAADURAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyEQAAAAAAADIRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3069,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADYRAAAAAAAANxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2EQAAAAAAADYRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3071,
					2,
					"left_delete",
					null,
					"AgAAADkRAAAAAAAAOREAAAAAAAABAAAAKTgRAAAAAAAAOBEAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6EQAAAAAAADoRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3072,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAADgRAAAAAAAAOREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4EQAAAAAAADgRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3074,
					1,
					"insert",
					{
						"characters": "a)"
					},
					"AgAAAEgRAAAAAAAASREAAAAAAAAAAAAASREAAAAAAABKEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIEQAAAAAAAEgRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3077,
					1,
					"left_delete",
					null,
					"AQAAAEoRAAAAAAAAShEAAAAAAAANAAAAcGhpKGkgKyAxMjApKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKEQAAAAAAAFcRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3080,
					2,
					"left_delete",
					null,
					"AgAAANcQAAAAAAAA1xAAAAAAAAABAAAAKdYQAAAAAAAA1hAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYEAAAAAAAANgQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3081,
					1,
					"insert",
					{
						"characters": ",a"
					},
					"AgAAANYQAAAAAAAA1xAAAAAAAAAAAAAA1xAAAAAAAADYEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWEAAAAAAAANYQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3083,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAANkQAAAAAAAA2hAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZEAAAAAAAANkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3085,
					1,
					"right_delete",
					null,
					"AQAAAG0QAAAAAAAAbRAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtEAAAAAAAAG0QAAAAAAAAAAAAAABAjUA"
				],
				[
					3089,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAG8QAAAAAAAAcBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvEAAAAAAAAG8QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3092,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAANoQAAAAAAAA2xAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaEAAAAAAAANoQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3096,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAE0RAAAAAAAAThEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNEQAAAAAAAE0RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3101,
					1,
					"left_delete",
					null,
					"AQAAAG8QAAAAAAAAbxAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwEAAAAAAAAHAQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3103,
					2,
					"left_delete",
					null,
					"AgAAANoQAAAAAAAA2hAAAAAAAAABAAAALNkQAAAAAAAA2RAAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbEAAAAAAAANsQAAAAAAAAAAAAAADQjUA"
				],
				[
					3104,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANkQAAAAAAAA2hAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZEAAAAAAAANkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3108,
					1,
					"left_delete",
					null,
					"AQAAAEsRAAAAAAAASxEAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMEQAAAAAAAEwRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3111,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA7FQAAaW1wb3J0ICogYXMgZ2xmdyBmcm9tICdnbGZ3JzsKLy9pbXBvcnQgeyBnbENsZWFyLCBnbENsZWFyQ29sb3IsIGdsVmlld3BvcnQsIEdMX0NPTE9SX0JVRkZFUl9CSVQsIEdMX0RFUFRIX0JVRkZFUl9CSVQsIEdMX1NURU5DSUxfQlVGRkVSX0JJVCB9IGZyb20gJy4vZ2wuanMnOwppbXBvcnQgKiBhcyBudmcgZnJvbSAnbmFub3ZnJzsKCmxldCB3aW5kb3c7CgpleHBvcnQgZnVuY3Rpb24gRHJhd0ltYWdlKGltYWdlLCBwb3MpIHsKICBjb25zdCBzaXplID0gbnZnLkltYWdlU2l6ZShpbWFnZSk7CiAgbnZnLlNhdmUoKTsKICBpZihwb3MpIG52Zy5UcmFuc2xhdGUoLi4ucG9zKTsKICBudmcuQmVnaW5QYXRoKCk7CiAgbnZnLlJlY3QoMCwgMCwgLi4uc2l6ZSk7CiAgbnZnLkZpbGxQYWludChudmcuSW1hZ2VQYXR0ZXJuKDAsIDAsIC4uLnNpemUsIDAsIGltYWdlLCAxKSk7CiAgbnZnLkZpbGwoKTsKICBudmcuUmVzdG9yZSgpOwp9CgpleHBvcnQgZnVuY3Rpb24gRHJhd0NpcmNsZSgvKnBvcywgKi8gcmFkaXVzLCBzdHJva2UgPSBudmcuUkdCKDI1NSwgMjU1LCAyNTUpLCBmaWxsID0gbnZnLlJHQkEoMjU1LCAwLCAwLCA5NikpIHsKICBudmcuU2F2ZSgpOwogIC8vbnZnLlRyYW5zbGF0ZSguLi5wb3MpOwogIG52Zy5CZWdpblBhdGgoKTsKICBudmcuU3Ryb2tlQ29sb3Ioc3Ryb2tlKTsKICBudmcuU3Ryb2tlV2lkdGgoNSk7CiAgaWYoZmlsbCkgbnZnLkZpbGxDb2xvcihmaWxsKTsKICBudmcuQ2lyY2xlKDAsIDAsIHJhZGl1cyk7CiAgaWYoZmlsbCkgbnZnLkZpbGwoKTsKICBudmcuU3Ryb2tlKCk7CiAgbnZnLlJlc3RvcmUoKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIENsZWFyKGNvbG9yID0gbnZnLlJHQigwLCAwLCAwKSkgewogIGNvbnN0IHsgc2l6ZSB9ID0gd2luZG93OwogIC8vY29uc29sZS5sb2coJ3NpemUnLCAuLi5zaXplKTsKICBudmcuU2F2ZSgpOwogIG52Zy5CZWdpblBhdGgoKTsKICBudmcuUmVjdCgwLCAwLCAuLi5zaXplKTsKICBudmcuRmlsbENvbG9yKGNvbG9yKTsKICBudmcuRmlsbCgpOwogIG52Zy5SZXN0b3JlKCk7Cn0KCmZ1bmN0aW9uIG1haW4oLi4uYXJncykgewogIC8qIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIG1heFN0cmluZ0xlbmd0aDogMjAwLAogICAgICBtYXhBcnJheUxlbmd0aDogMTAsCiAgICAgIGJyZWFrTGVuZ3RoOiBJbmZpbml0eSwKICAgICAgY29tcGFjdDogMiwKICAgICAgZGVwdGg6IDEwCiAgICB9CiAgfSk7Ki8KCiAgbGV0IGkgPSAwOwogIGxldCBydW5uaW5nID0gdHJ1ZTsKCiAgZ2xmdy5XaW5kb3cuaGludChnbGZ3LkNPTlRFWFRfVkVSU0lPTl9NQUpPUiwgMyk7CiAgZ2xmdy5XaW5kb3cuaGludChnbGZ3LkNPTlRFWFRfVkVSU0lPTl9NSU5PUiwgMik7CiAgZ2xmdy5XaW5kb3cuaGludChnbGZ3Lk9QRU5HTF9QUk9GSUxFLCBnbGZ3Lk9QRU5HTF9DT1JFX1BST0ZJTEUpOwogIGdsZncuV2luZG93LmhpbnQoZ2xmdy5PUEVOR0xfRk9SV0FSRF9DT01QQVQsIHRydWUpOwogIGdsZncuV2luZG93LmhpbnQoZ2xmdy5SRVNJWkFCTEUsIGZhbHNlKTsKICBnbGZ3LldpbmRvdy5oaW50KGdsZncuU0FNUExFUywgNCk7CgogIHdpbmRvdyA9IGdsZncuY29udGV4dC5jdXJyZW50ID0gbmV3IGdsZncuV2luZG93KDEwMjQsIDc2OCwgc2NyaXB0QXJnc1swXSk7CgogIGxldCBjb250ZXh0ID0gZ2xmdy5jb250ZXh0OwogIGNvbnNvbGUubG9nKCdjb250ZXh0JywgY29udGV4dCk7CgogIGNvbnN0IHsgcG9zaXRpb24sIHNpemUgfSA9IHdpbmRvdzsKCiAgT2JqZWN0LmFzc2lnbihjb250ZXh0LCB7CiAgICBiZWdpbihjb2xvciA9IG52Zy5SR0IoMjU1LCAyNTUsIDI1NSkpIHsKICAgICAgY29uc29sZS5sb2coJ2JlZ2luJywgY29sb3IpOwogICAgICBDbGVhcihjb2xvcik7CiAgICAgIG52Zy5CZWdpbkZyYW1lKC4uLnNpemUsIDEpOwogICAgfSwKICAgIGVuZCgpIHsKICAgICAgbnZnLkVuZEZyYW1lKCk7CiAgICAgIHdpbmRvdy5zd2FwQnVmZmVycygpOwogICAgICBnbGZ3LnBvbGwoKTsKICAgIH0KICB9KTsKCiAgT2JqZWN0LmFzc2lnbih3aW5kb3csIHsKICAgIGhhbmRsZVNpemUod2lkdGgsIGhlaWdodCkgewogICAgICBjb25zb2xlLmxvZygncmVzaXplZCcsIHsgd2lkdGgsIGhlaWdodCB9KTsKICAgIH0sCiAgICBoYW5kbGVLZXkoa2V5Q29kZSkgewogICAgICBsZXQgY2hhckNvZGUgPSBrZXlDb2RlICYgMHhmZjsKICAgICAgY29uc29sZS5sb2coYGhhbmRsZUtleWAsIHsga2V5Q29kZTogJzB4JyArIGtleUNvZGUudG9TdHJpbmcoMTYpLCBjaGFyQ29kZSwgY2hhcjogU3RyaW5nLmZyb21DaGFyQ29kZShjaGFyQ29kZSkgfSk7CiAgICAgIGxldCBjaGFyID0gU3RyaW5nLmZyb21Db2RlUG9pbnQoY2hhckNvZGUpOwoKICAgICAgbGV0IGhhbmRsZXIgPSB7ICdceDAwJzogKCkgPT4gKHJ1bm5pbmcgPSBmYWxzZSksIFE6ICgpID0+IChydW5uaW5nID0gZmFsc2UpIH1bY2hhcl07CiAgICAgIGlmKGhhbmRsZXIpIGhhbmRsZXIoKTsKICAgIH0sCiAgICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKSB7CiAgICAgIGNvbnNvbGUubG9nKGBoYW5kbGVDaGFyTW9kc2AsIHsgY2hhciwgbW9kcyB9KTsKICAgIH0sCiAgICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykgewogICAgICBjb25zb2xlLmxvZyhgaGFuZGxlTW91c2VCdXR0b25gLCB7IGJ1dHRvbiwgYWN0aW9uLCBtb2RzIH0pOwogICAgfSwKICAgIGhhbmRsZUN1cnNvclBvcyh4LCB5KSB7CiAgICAgIC8vY29uc29sZS5sb2coYGhhbmRsZUN1cnNvclBvc2AsIHsgeCwgeSB9KTsKICAgIH0KICB9KTsKCiAgbnZnLkNyZWF0ZUdMMyhudmcuU1RFTkNJTF9TVFJPS0VTIHwgbnZnLkFOVElBTElBUyB8IG52Zy5ERUJVRyk7CgogIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gc2l6ZTsKICBjb25zdCB7IHgsIHkgfSA9IHBvc2l0aW9uOwoKICBsZXQgcGl4ZWxzOwogIGxldCBpbWdJZCA9IG52Zy5DcmVhdGVJbWFnZSgnQXJjaGl0ZWt0dXIucG5nJywgMCk7CiAgbGV0IGltZzJJZCA9IG52Zy5DcmVhdGVJbWFnZSgnTXVlaGxlYmVyZy5wbmcnLCAwKTsKCiAgbGV0IGltZzJTeiA9IG52Zy5JbWFnZVNpemUoaW1nMklkKTsKICBsZXQgaW1nU3ogPSBudmcuSW1hZ2VTaXplKGltZ0lkKTsKCiAgd2hpbGUoKHJ1bm5pbmcgJiY9ICF3aW5kb3cuc2hvdWxkQ2xvc2UpKSB7CiAgICBsZXQgdGltZSA9ICtuZXcgRGF0ZSgpIC8gMTAwMDsKICAgIGxldCBpbmRleCA9IE1hdGguZmxvb3IoKHRpbWUgKiAzNjApIC8gMzApOwogICAgbGV0IGNvbG9yID0gbnZnLlJHQigzMCwgMzAsIDMwKTsKCiAgICBjb250ZXh0LmJlZ2luKGNvbG9yKTsKCiAgICBsZXQgbSA9IG52Zy5DdXJyZW50VHJhbnNmb3JtKCk7CiAgICBsZXQgdCA9IG52Zy5UcmFuc2Zvcm1UcmFuc2xhdGUoW10sIDEwLCAyMCk7CiAgICBsZXQgcyA9IG52Zy5UcmFuc2Zvcm1TY2FsZShbXSwgMywgMyk7CgogICAgbGV0IHAgPSBudmcuVHJhbnNmb3JtTXVsdGlwbHkobnZnLlRyYW5zZm9ybU11bHRpcGx5KG0sIHQpLCBzKTsKCiAgICAvLyBsZXQgcGF0dGVybiA9IG52Zy5JbWFnZVBhdHRlcm4oMCwgMCwgLi4uaW1nMlN6LCAwLCBpbWcySWQsIDEpOwoKICAgIGxldCBjZW50ZXIgPSBuZXcgZ2xmdy5Qb3NpdGlvbihzaXplLndpZHRoIC8gMiwgc2l6ZS5oZWlnaHQgLyAyKTsKICAgIGxldCBpbWdTeiA9IG5ldyBnbGZ3LlBvc2l0aW9uKGltZzJTei53aWR0aCAqIC0xLCBpbWcyU3ouaGVpZ2h0ICogLTEpOwogICAgbGV0IGltZ1N6XzIgPSBuZXcgZ2xmdy5Qb3NpdGlvbihpbWcyU3oud2lkdGggKiAtMC41LCBpbWcyU3ouaGVpZ2h0ICogLTAuNSk7CiAgICBsZXQgcGhpID0gYSA9PiAoKGEgJSAzNjApIC8gMTgwKSAqIE1hdGguUEk7CiAgICBsZXQgdmVjID0gKHcsIGgsIGFuZ2xlID0gcGhpKGkpKSA9PiBbTWF0aC5jb3MoYW5nbGUpICogdywgTWF0aC5zaW4oYW5nbGUpICogaF07IC8qLm1hcChuID0+IG4gKiByYWRpdXMpKi8KCmZ1bmN0aW9uIFBsYW5ldChyYWRpdXMsc3Ryb2tlLGZpbGwsIHBvc2l0aW9uKSB7CiAgcmV0dXJuIHtyYWRpdXMsCiAgICBzdHJva2UsZmlsbCwgcG9zaXRpb24KICB9Owp9CgpsZXQgcGxhbmV0cyA9IFsKbmV3IFBsYW5ldCg1MCwgbnZnLlJHQigyNTUsIDI1NSwgMjI0KSwgbnZnLlJHQkEoMjU1LCAxOTIsIDAsIDI1NSksICgpID0+IHBoaShpICsgMjQwKSwgYT0+IHZlYygyMCwgMTAsIGEpKSwKbmV3IFBsYW5ldCgyMCwgbnZnLlJHQigyNTUsIDE4MCwgMTgwKSwgbnZnLlJHQkEoMjU1LCAwLCAwLCAwLjggKiAyNTUpLCAoKSA9PiBwaGkoaSksICgpPT4gdmVjKDQwLCA2MCxhKSksCm5ldyBQbGFuZXQoMzAsIG52Zy5SR0IoMTYwLCAyMjAsIDI1NSksIG52Zy5SR0JBKDAsIDEyMCwgMjU1LCAwLjggKiAyNTUpLCAoKSA9PiBwaGkoaSArIDEyMCksIGE9PnZlYygxODAsIDQwLCBhKSksCl07CgoKICAgIG52Zy5TYXZlKCk7CiAgICBudmcuVHJhbnNsYXRlKC4uLmNlbnRlcik7CiAgICBudmcuVHJhbnNsYXRlKC4uLnZlYygyMCwgMTAsIHBoaShpICsgMjQwKSkpOwoKICAgIERyYXdDaXJjbGUoNTAsIG52Zy5SR0IoMjU1LCAyNTUsIDIyNCksIG52Zy5SR0JBKDI1NSwgMTkyLCAwLCAyNTUpKTsKCiAgICBudmcuUmVzdG9yZSgpOwogICAgbnZnLlNhdmUoKTsKCiAgICBudmcuVHJhbnNsYXRlKC4uLmNlbnRlcik7CiAgICBudmcuVHJhbnNsYXRlKC4uLnZlYyg0MCwgNjApKTsKCiAgICBEcmF3Q2lyY2xlKDIwLCBudmcuUkdCKDI1NSwgMTgwLCAxODApLCBudmcuUkdCQSgyNTUsIDAsIDAsIDAuOCAqIDI1NSkpOwoKICAgIG52Zy5SZXN0b3JlKCk7CiAgICBudmcuU2F2ZSgpOwoKICAgIG52Zy5UcmFuc2xhdGUoLi4uY2VudGVyKTsKICAgIG52Zy5UcmFuc2xhdGUoLi4udmVjKDE4MCwgNDAsIHBoaShpICsgMTIwKSkpOwoKICAgIERyYXdDaXJjbGUoMzAsIG52Zy5SR0IoMTYwLCAyMjAsIDI1NSksIG52Zy5SR0JBKDAsIDEyMCwgMjU1LCAwLjggKiAyNTUpKTsKCiAgICBudmcuUmVzdG9yZSgpOwoKICAgIGNvbnRleHQuZW5kKCk7CiAgICBpKys7CiAgfQp9Cgpjb25zdCBydW5NYWluID0gKCkgPT4gewogIHRyeSB7CiAgICBtYWluKHNjcmlwdEFyZ3Muc2xpY2UoMSkpOwogICAgc3RkLmV4aXQoMCk7CiAgfSBjYXRjaChlcnJvcikgewogICAgY29uc29sZS5sb2coJ0VSUk9SOicsIGVycm9yKTsKICB9Cn07CmltcG9ydCgnY29uc29sZScpIC5jYXRjaChydW5NYWluKSAudGhlbigoeyBDb25zb2xlIH0pID0+ICgoZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoeyBpbnNwZWN0T3B0aW9uczoge30gfSkpLCBydW5NYWluKCkpKTsKLyoKdHJ5IHsKICBtYWluKC4uLnNjcmlwdEFyZ3Muc2xpY2UoMSkpOwp9IGNhdGNoKGVycm9yKSB7CiAgY29uc29sZS5sb2coJ0VSUk9SOicsZXJyb3IubWVzc2FnZSk7CiAgIHN0ZC5leGl0KDEpOwp9IGZpbmFsbHkgewogfQoqLwoAAAAAAAAAAPIVAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLEQAAAAAAAEsRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3139,
					1,
					"insert",
					{
						"characters": "Object.assign(thi"
					},
					"EQAAANQPAAAAAAAA1Q8AAAAAAAAAAAAA1Q8AAAAAAADWDwAAAAAAAAAAAADWDwAAAAAAANcPAAAAAAAAAAAAANcPAAAAAAAA2A8AAAAAAAAAAAAA2A8AAAAAAADZDwAAAAAAAAAAAADZDwAAAAAAANoPAAAAAAAAAAAAANoPAAAAAAAA2w8AAAAAAAAAAAAA2w8AAAAAAADcDwAAAAAAAAAAAADcDwAAAAAAAN0PAAAAAAAAAAAAAN0PAAAAAAAA3g8AAAAAAAAAAAAA3g8AAAAAAADfDwAAAAAAAAAAAADfDwAAAAAAAOAPAAAAAAAAAAAAAOAPAAAAAAAA4Q8AAAAAAAAAAAAA4Q8AAAAAAADiDwAAAAAAAAAAAADiDwAAAAAAAOMPAAAAAAAAAAAAAOMPAAAAAAAA5A8AAAAAAAAAAAAA5A8AAAAAAADlDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUDwAAAAAAANQPAAAAAAAAAAAAAAAA8L8"
				],
				[
					3140,
					1,
					"insert",
					{
						"characters": "s,"
					},
					"AgAAAOUPAAAAAAAA5g8AAAAAAAAAAAAA5g8AAAAAAADnDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlDwAAAAAAAOUPAAAAAAAAAAAAAAAA8L8"
				],
				[
					3141,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOcPAAAAAAAA6A8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnDwAAAAAAAOcPAAAAAAAAAAAAAAAA8L8"
				],
				[
					3148,
					1,
					"insert",
					{
						"characters": "angle"
					},
					"BQAAALsPAAAAAAAAvA8AAAAAAAAAAAAAvA8AAAAAAAC9DwAAAAAAAAAAAAC9DwAAAAAAAL4PAAAAAAAAAAAAAL4PAAAAAAAAvw8AAAAAAAAAAAAAvw8AAAAAAADADwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7DwAAAAAAALsPAAAAAAAAAAAAAAAA8L8"
				],
				[
					3149,
					5,
					"left_delete",
					null,
					"BQAAAL8PAAAAAAAAvw8AAAAAAAABAAAAZb4PAAAAAAAAvg8AAAAAAAABAAAAbL0PAAAAAAAAvQ8AAAAAAAABAAAAZ7wPAAAAAAAAvA8AAAAAAAABAAAAbrsPAAAAAAAAuw8AAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADADwAAAAAAAMAPAAAAAAAAAAAAAAAA8L8"
				],
				[
					3150,
					1,
					"insert",
					{
						"characters": "getAngle,"
					},
					"CQAAALsPAAAAAAAAvA8AAAAAAAAAAAAAvA8AAAAAAAC9DwAAAAAAAAAAAAC9DwAAAAAAAL4PAAAAAAAAAAAAAL4PAAAAAAAAvw8AAAAAAAAAAAAAvw8AAAAAAADADwAAAAAAAAAAAADADwAAAAAAAMEPAAAAAAAAAAAAAMEPAAAAAAAAwg8AAAAAAAAAAAAAwg8AAAAAAADDDwAAAAAAAAAAAADDDwAAAAAAAMQPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7DwAAAAAAALsPAAAAAAAAAAAAAAAA8L8"
				],
				[
					3151,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMQPAAAAAAAAxQ8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEDwAAAAAAAMQPAAAAAAAAAAAAAAAA8L8"
				],
				[
					3156,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAAAoQAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAAMEAAAAAAAAAAAAAAMEAAAAAAAAA0QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKEAAAAAAAAAoQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3157,
					1,
					"insert",
					{
						"characters": " angle()"
					},
					"CAAAAA0QAAAAAAAADhAAAAAAAAAAAAAADhAAAAAAAAAPEAAAAAAAAAAAAAAPEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAERAAAAAAAAAAAAAAERAAAAAAAAASEAAAAAAAAAAAAAASEAAAAAAAABMQAAAAAAAAAAAAABMQAAAAAAAAFBAAAAAAAAAAAAAAFBAAAAAAAAAVEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANEAAAAAAAAA0QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3158,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAABUQAAAAAAAAFhAAAAAAAAAAAAAAFhAAAAAAAAAXEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVEAAAAAAAABUQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3159,
					1,
					"insert",
					{
						"characters": " return"
					},
					"BwAAABcQAAAAAAAAGBAAAAAAAAAAAAAAGBAAAAAAAAAZEAAAAAAAAAAAAAAZEAAAAAAAABoQAAAAAAAAAAAAABoQAAAAAAAAGxAAAAAAAAAAAAAAGxAAAAAAAAAcEAAAAAAAAAAAAAAcEAAAAAAAAB0QAAAAAAAAAAAAAB0QAAAAAAAAHhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXEAAAAAAAABcQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3160,
					1,
					"insert",
					{
						"characters": " getAg"
					},
					"BgAAAB4QAAAAAAAAHxAAAAAAAAAAAAAAHxAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAACEQAAAAAAAAAAAAACEQAAAAAAAAIhAAAAAAAAAAAAAAIhAAAAAAAAAjEAAAAAAAAAAAAAAjEAAAAAAAACQQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeEAAAAAAAAB4QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3161,
					1,
					"left_delete",
					null,
					"AQAAACMQAAAAAAAAIxAAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkEAAAAAAAACQQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3162,
					1,
					"insert",
					{
						"characters": "ngle();"
					},
					"BwAAACMQAAAAAAAAJBAAAAAAAAAAAAAAJBAAAAAAAAAlEAAAAAAAAAAAAAAlEAAAAAAAACYQAAAAAAAAAAAAACYQAAAAAAAAJxAAAAAAAAAAAAAAJxAAAAAAAAAoEAAAAAAAAAAAAAAoEAAAAAAAACkQAAAAAAAAAAAAACkQAAAAAAAAKhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjEAAAAAAAACMQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3163,
					1,
					"insert",
					{
						"characters": " },"
					},
					"AwAAACoQAAAAAAAAKxAAAAAAAAAAAAAAKxAAAAAAAAAsEAAAAAAAAAAAAAAsEAAAAAAAAC0QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqEAAAAAAAACoQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3164,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC0QAAAAAAAALhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtEAAAAAAAAC0QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3167,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AgAAAHwRAAAAAAAAfREAAAAAAAAAAAAAfREAAAAAAAB9EQAAAAAAAAIAAAAoKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8EQAAAAAAAH4RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3176,
					1,
					"insert",
					{
						"characters": "get"
					},
					"AwAAAC4QAAAAAAAALxAAAAAAAAAAAAAALxAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAADEQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuEAAAAAAAAC4QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3177,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADEQAAAAAAAAMhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxEAAAAAAAADEQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3180,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADoQAAAAAAAAPBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6EAAAAAAAADoQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3182,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwQAAAAAAAAPRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8EAAAAAAAADwQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3183,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAD0QAAAAAAAAPxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9EAAAAAAAAD0QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3184,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD4QAAAAAAAAPxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+EAAAAAAAAD4QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3185,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAD8QAAAAAAAAQBAAAAAAAAAAAAAAQBAAAAAAAABGEAAAAAAAAAAAAABGEAAAAAAAAEcQAAAAAAAAAAAAAEcQAAAAAAAATRAAAAAAAAAAAAAAQBAAAAAAAABAEAAAAAAAAAYAAAAgICAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/EAAAAAAAAD8QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3187,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAEAQAAAAAAAAQRAAAAAAAAAAAAAAQRAAAAAAAABCEAAAAAAAAAAAAABCEAAAAAAAAEMQAAAAAAAAAAAAAEMQAAAAAAAARBAAAAAAAAAAAAAARBAAAAAAAABFEAAAAAAAAAAAAABFEAAAAAAAAEYQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAAS0A"
				],
				[
					3188,
					1,
					"insert",
					{
						"characters": " thi"
					},
					"BAAAAEYQAAAAAAAARxAAAAAAAAAAAAAARxAAAAAAAABIEAAAAAAAAAAAAABIEAAAAAAAAEkQAAAAAAAAAAAAAEkQAAAAAAAAShAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGEAAAAAAAAEYQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3189,
					1,
					"insert",
					{
						"characters": "s.g"
					},
					"AwAAAEoQAAAAAAAASxAAAAAAAAAAAAAASxAAAAAAAABMEAAAAAAAAAAAAABMEAAAAAAAAE0QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKEAAAAAAAAEoQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3190,
					1,
					"left_delete",
					null,
					"AQAAAEwQAAAAAAAATBAAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNEAAAAAAAAE0QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3191,
					1,
					"insert",
					{
						"characters": "angle"
					},
					"BQAAAEwQAAAAAAAATRAAAAAAAAAAAAAATRAAAAAAAABOEAAAAAAAAAAAAABOEAAAAAAAAE8QAAAAAAAAAAAAAE8QAAAAAAAAUBAAAAAAAAAAAAAAUBAAAAAAAABREAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMEAAAAAAAAEwQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3195,
					1,
					"insert",
					{
						"characters": "po"
					},
					"AgAAAEcQAAAAAAAASBAAAAAAAAAAAAAASBAAAAAAAABJEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHEAAAAAAAAEcQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3196,
					2,
					"left_delete",
					null,
					"AgAAAEgQAAAAAAAASBAAAAAAAAABAAAAb0cQAAAAAAAARxAAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJEAAAAAAAAEkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3197,
					1,
					"insert",
					{
						"characters": "getPosition"
					},
					"CwAAAEcQAAAAAAAASBAAAAAAAAAAAAAASBAAAAAAAABJEAAAAAAAAAAAAABJEAAAAAAAAEoQAAAAAAAAAAAAAEoQAAAAAAAASxAAAAAAAAAAAAAASxAAAAAAAABMEAAAAAAAAAAAAABMEAAAAAAAAE0QAAAAAAAAAAAAAE0QAAAAAAAAThAAAAAAAAAAAAAAThAAAAAAAABPEAAAAAAAAAAAAABPEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAURAAAAAAAAAAAAAAURAAAAAAAABSEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHEAAAAAAAAEcQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3198,
					5,
					"left_delete",
					null,
					"BQAAAFEQAAAAAAAAURAAAAAAAAABAAAAblAQAAAAAAAAUBAAAAAAAAABAAAAb08QAAAAAAAATxAAAAAAAAABAAAAaU4QAAAAAAAAThAAAAAAAAABAAAAdE0QAAAAAAAATRAAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSEAAAAAAAAFIQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3199,
					1,
					"insert",
					{
						"characters": "ition("
					},
					"BgAAAE0QAAAAAAAAThAAAAAAAAAAAAAAThAAAAAAAABPEAAAAAAAAAAAAABPEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAURAAAAAAAAAAAAAAURAAAAAAAABSEAAAAAAAAAAAAABSEAAAAAAAAFMQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNEAAAAAAAAE0QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3204,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAF0QAAAAAAAAXhAAAAAAAAAAAAAAXhAAAAAAAABfEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdEAAAAAAAAF0QAAAAAAAA////////738"
				],
				[
					3216,
					1,
					"paste",
					null,
					"AgAAAMUPAAAAAAAA0A8AAAAAAAAAAAAA0A8AAAAAAADQDwAAAAAAAAgAAABwb3NpdGlvbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFDwAAAAAAAM0PAAAAAAAAAAAAAAAA8L8"
				],
				[
					3222,
					1,
					"insert",
					{
						"characters": ");:"
					},
					"AwAAAGwQAAAAAAAAbRAAAAAAAAAAAAAAbRAAAAAAAABuEAAAAAAAAAAAAABuEAAAAAAAAG8QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsEAAAAAAAAGwQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3223,
					2,
					"left_delete",
					null,
					"AgAAAG4QAAAAAAAAbhAAAAAAAAABAAAAOm0QAAAAAAAAbRAAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvEAAAAAAAAG8QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3227,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG4QAAAAAAAAbxAAAAAAAAAAAAAAbxAAAAAAAAB1EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuEAAAAAAAAG4QAAAAAAAA////////738"
				],
				[
					3230,
					4,
					"left_delete",
					null,
					"BAAAAHMQAAAAAAAAcxAAAAAAAAACAAAAICBxEAAAAAAAAHEQAAAAAAAAAgAAACAgbxAAAAAAAABvEAAAAAAAAAIAAAAgIG4QAAAAAAAAbhAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1EAAAAAAAAHUQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3245,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABoFgAAaW1wb3J0ICogYXMgZ2xmdyBmcm9tICdnbGZ3JzsKLy9pbXBvcnQgeyBnbENsZWFyLCBnbENsZWFyQ29sb3IsIGdsVmlld3BvcnQsIEdMX0NPTE9SX0JVRkZFUl9CSVQsIEdMX0RFUFRIX0JVRkZFUl9CSVQsIEdMX1NURU5DSUxfQlVGRkVSX0JJVCB9IGZyb20gJy4vZ2wuanMnOwppbXBvcnQgKiBhcyBudmcgZnJvbSAnbmFub3ZnJzsKCmxldCB3aW5kb3c7CgpleHBvcnQgZnVuY3Rpb24gRHJhd0ltYWdlKGltYWdlLCBwb3MpIHsKICBjb25zdCBzaXplID0gbnZnLkltYWdlU2l6ZShpbWFnZSk7CiAgbnZnLlNhdmUoKTsKICBpZihwb3MpIG52Zy5UcmFuc2xhdGUoLi4ucG9zKTsKICBudmcuQmVnaW5QYXRoKCk7CiAgbnZnLlJlY3QoMCwgMCwgLi4uc2l6ZSk7CiAgbnZnLkZpbGxQYWludChudmcuSW1hZ2VQYXR0ZXJuKDAsIDAsIC4uLnNpemUsIDAsIGltYWdlLCAxKSk7CiAgbnZnLkZpbGwoKTsKICBudmcuUmVzdG9yZSgpOwp9CgpleHBvcnQgZnVuY3Rpb24gRHJhd0NpcmNsZSgvKnBvcywgKi8gcmFkaXVzLCBzdHJva2UgPSBudmcuUkdCKDI1NSwgMjU1LCAyNTUpLCBmaWxsID0gbnZnLlJHQkEoMjU1LCAwLCAwLCA5NikpIHsKICBudmcuU2F2ZSgpOwogIC8vbnZnLlRyYW5zbGF0ZSguLi5wb3MpOwogIG52Zy5CZWdpblBhdGgoKTsKICBudmcuU3Ryb2tlQ29sb3Ioc3Ryb2tlKTsKICBudmcuU3Ryb2tlV2lkdGgoNSk7CiAgaWYoZmlsbCkgbnZnLkZpbGxDb2xvcihmaWxsKTsKICBudmcuQ2lyY2xlKDAsIDAsIHJhZGl1cyk7CiAgaWYoZmlsbCkgbnZnLkZpbGwoKTsKICBudmcuU3Ryb2tlKCk7CiAgbnZnLlJlc3RvcmUoKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIENsZWFyKGNvbG9yID0gbnZnLlJHQigwLCAwLCAwKSkgewogIGNvbnN0IHsgc2l6ZSB9ID0gd2luZG93OwogIC8vY29uc29sZS5sb2coJ3NpemUnLCAuLi5zaXplKTsKICBudmcuU2F2ZSgpOwogIG52Zy5CZWdpblBhdGgoKTsKICBudmcuUmVjdCgwLCAwLCAuLi5zaXplKTsKICBudmcuRmlsbENvbG9yKGNvbG9yKTsKICBudmcuRmlsbCgpOwogIG52Zy5SZXN0b3JlKCk7Cn0KCmZ1bmN0aW9uIG1haW4oLi4uYXJncykgewogIC8qIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsKICAgIGluc3BlY3RPcHRpb25zOiB7CiAgICAgIG1heFN0cmluZ0xlbmd0aDogMjAwLAogICAgICBtYXhBcnJheUxlbmd0aDogMTAsCiAgICAgIGJyZWFrTGVuZ3RoOiBJbmZpbml0eSwKICAgICAgY29tcGFjdDogMiwKICAgICAgZGVwdGg6IDEwCiAgICB9CiAgfSk7Ki8KCiAgbGV0IGkgPSAwOwogIGxldCBydW5uaW5nID0gdHJ1ZTsKCiAgZ2xmdy5XaW5kb3cuaGludChnbGZ3LkNPTlRFWFRfVkVSU0lPTl9NQUpPUiwgMyk7CiAgZ2xmdy5XaW5kb3cuaGludChnbGZ3LkNPTlRFWFRfVkVSU0lPTl9NSU5PUiwgMik7CiAgZ2xmdy5XaW5kb3cuaGludChnbGZ3Lk9QRU5HTF9QUk9GSUxFLCBnbGZ3Lk9QRU5HTF9DT1JFX1BST0ZJTEUpOwogIGdsZncuV2luZG93LmhpbnQoZ2xmdy5PUEVOR0xfRk9SV0FSRF9DT01QQVQsIHRydWUpOwogIGdsZncuV2luZG93LmhpbnQoZ2xmdy5SRVNJWkFCTEUsIGZhbHNlKTsKICBnbGZ3LldpbmRvdy5oaW50KGdsZncuU0FNUExFUywgNCk7CgogIHdpbmRvdyA9IGdsZncuY29udGV4dC5jdXJyZW50ID0gbmV3IGdsZncuV2luZG93KDEwMjQsIDc2OCwgc2NyaXB0QXJnc1swXSk7CgogIGxldCBjb250ZXh0ID0gZ2xmdy5jb250ZXh0OwogIGNvbnNvbGUubG9nKCdjb250ZXh0JywgY29udGV4dCk7CgogIGNvbnN0IHsgcG9zaXRpb24sIHNpemUgfSA9IHdpbmRvdzsKCiAgT2JqZWN0LmFzc2lnbihjb250ZXh0LCB7CiAgICBiZWdpbihjb2xvciA9IG52Zy5SR0IoMjU1LCAyNTUsIDI1NSkpIHsKICAgICAgY29uc29sZS5sb2coJ2JlZ2luJywgY29sb3IpOwogICAgICBDbGVhcihjb2xvcik7CiAgICAgIG52Zy5CZWdpbkZyYW1lKC4uLnNpemUsIDEpOwogICAgfSwKICAgIGVuZCgpIHsKICAgICAgbnZnLkVuZEZyYW1lKCk7CiAgICAgIHdpbmRvdy5zd2FwQnVmZmVycygpOwogICAgICBnbGZ3LnBvbGwoKTsKICAgIH0KICB9KTsKCiAgT2JqZWN0LmFzc2lnbih3aW5kb3csIHsKICAgIGhhbmRsZVNpemUod2lkdGgsIGhlaWdodCkgewogICAgICBjb25zb2xlLmxvZygncmVzaXplZCcsIHsgd2lkdGgsIGhlaWdodCB9KTsKICAgIH0sCiAgICBoYW5kbGVLZXkoa2V5Q29kZSkgewogICAgICBsZXQgY2hhckNvZGUgPSBrZXlDb2RlICYgMHhmZjsKICAgICAgY29uc29sZS5sb2coYGhhbmRsZUtleWAsIHsga2V5Q29kZTogJzB4JyArIGtleUNvZGUudG9TdHJpbmcoMTYpLCBjaGFyQ29kZSwgY2hhcjogU3RyaW5nLmZyb21DaGFyQ29kZShjaGFyQ29kZSkgfSk7CiAgICAgIGxldCBjaGFyID0gU3RyaW5nLmZyb21Db2RlUG9pbnQoY2hhckNvZGUpOwoKICAgICAgbGV0IGhhbmRsZXIgPSB7ICdceDAwJzogKCkgPT4gKHJ1bm5pbmcgPSBmYWxzZSksIFE6ICgpID0+IChydW5uaW5nID0gZmFsc2UpIH1bY2hhcl07CiAgICAgIGlmKGhhbmRsZXIpIGhhbmRsZXIoKTsKICAgIH0sCiAgICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKSB7CiAgICAgIGNvbnNvbGUubG9nKGBoYW5kbGVDaGFyTW9kc2AsIHsgY2hhciwgbW9kcyB9KTsKICAgIH0sCiAgICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykgewogICAgICBjb25zb2xlLmxvZyhgaGFuZGxlTW91c2VCdXR0b25gLCB7IGJ1dHRvbiwgYWN0aW9uLCBtb2RzIH0pOwogICAgfSwKICAgIGhhbmRsZUN1cnNvclBvcyh4LCB5KSB7CiAgICAgIC8vY29uc29sZS5sb2coYGhhbmRsZUN1cnNvclBvc2AsIHsgeCwgeSB9KTsKICAgIH0KICB9KTsKCiAgbnZnLkNyZWF0ZUdMMyhudmcuU1RFTkNJTF9TVFJPS0VTIHwgbnZnLkFOVElBTElBUyB8IG52Zy5ERUJVRyk7CgogIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gc2l6ZTsKICBjb25zdCB7IHgsIHkgfSA9IHBvc2l0aW9uOwoKICBsZXQgcGl4ZWxzOwogIGxldCBpbWdJZCA9IG52Zy5DcmVhdGVJbWFnZSgnQXJjaGl0ZWt0dXIucG5nJywgMCk7CiAgbGV0IGltZzJJZCA9IG52Zy5DcmVhdGVJbWFnZSgnTXVlaGxlYmVyZy5wbmcnLCAwKTsKCiAgbGV0IGltZzJTeiA9IG52Zy5JbWFnZVNpemUoaW1nMklkKTsKICBsZXQgaW1nU3ogPSBudmcuSW1hZ2VTaXplKGltZ0lkKTsKCiAgd2hpbGUoKHJ1bm5pbmcgJiY9ICF3aW5kb3cuc2hvdWxkQ2xvc2UpKSB7CiAgICBsZXQgdGltZSA9ICtuZXcgRGF0ZSgpIC8gMTAwMDsKICAgIGxldCBpbmRleCA9IE1hdGguZmxvb3IoKHRpbWUgKiAzNjApIC8gMzApOwogICAgbGV0IGNvbG9yID0gbnZnLlJHQigzMCwgMzAsIDMwKTsKCiAgICBjb250ZXh0LmJlZ2luKGNvbG9yKTsKCiAgICBsZXQgbSA9IG52Zy5DdXJyZW50VHJhbnNmb3JtKCk7CiAgICBsZXQgdCA9IG52Zy5UcmFuc2Zvcm1UcmFuc2xhdGUoW10sIDEwLCAyMCk7CiAgICBsZXQgcyA9IG52Zy5UcmFuc2Zvcm1TY2FsZShbXSwgMywgMyk7CgogICAgbGV0IHAgPSBudmcuVHJhbnNmb3JtTXVsdGlwbHkobnZnLlRyYW5zZm9ybU11bHRpcGx5KG0sIHQpLCBzKTsKCiAgICAvLyBsZXQgcGF0dGVybiA9IG52Zy5JbWFnZVBhdHRlcm4oMCwgMCwgLi4uaW1nMlN6LCAwLCBpbWcySWQsIDEpOwoKICAgIGxldCBjZW50ZXIgPSBuZXcgZ2xmdy5Qb3NpdGlvbihzaXplLndpZHRoIC8gMiwgc2l6ZS5oZWlnaHQgLyAyKTsKICAgIGxldCBpbWdTeiA9IG5ldyBnbGZ3LlBvc2l0aW9uKGltZzJTei53aWR0aCAqIC0xLCBpbWcyU3ouaGVpZ2h0ICogLTEpOwogICAgbGV0IGltZ1N6XzIgPSBuZXcgZ2xmdy5Qb3NpdGlvbihpbWcyU3oud2lkdGggKiAtMC41LCBpbWcyU3ouaGVpZ2h0ICogLTAuNSk7CiAgICBsZXQgcGhpID0gYSA9PiAoKGEgJSAzNjApIC8gMTgwKSAqIE1hdGguUEk7CiAgICBsZXQgdmVjID0gKHcsIGgsIGFuZ2xlID0gcGhpKGkpKSA9PiBbTWF0aC5jb3MoYW5nbGUpICogdywgTWF0aC5zaW4oYW5nbGUpICogaF07IC8qLm1hcChuID0+IG4gKiByYWRpdXMpKi8KCiAgICBmdW5jdGlvbiBQbGFuZXQocmFkaXVzLCBzdHJva2UsIGZpbGwsIGdldEFuZ2xlLCBnZXRQb3NpdGlvbikgewogICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih0aGlzLCB7IHJhZGl1cywgc3Ryb2tlLCBmaWxsLCBnZXQgYW5nbGUoKSB7IHJldHVybiBnZXRBbmdsZSgpOyB9LCBnZXQgcG9zaXRpb24oKSB7IApyZXR1cm4gZ2V0UG9zaXRpb24odGhpcy5hbmdsZSk7CiAgICAgIH0gfSk7CiAgICB9CgogICAgbGV0IHBsYW5ldHMgPSBbCiAgICAgIG5ldyBQbGFuZXQoCiAgICAgICAgNTAsCiAgICAgICAgbnZnLlJHQigyNTUsIDI1NSwgMjI0KSwKICAgICAgICBudmcuUkdCQSgyNTUsIDE5MiwgMCwgMjU1KSwKICAgICAgICAoKSA9PiBwaGkoaSArIDI0MCksCiAgICAgICAgYSA9PiB2ZWMoMjAsIDEwLCBhKQogICAgICApLAogICAgICBuZXcgUGxhbmV0KAogICAgICAgIDIwLAogICAgICAgIG52Zy5SR0IoMjU1LCAxODAsIDE4MCksCiAgICAgICAgbnZnLlJHQkEoMjU1LCAwLCAwLCAwLjggKiAyNTUpLAogICAgICAgICgpID0+IHBoaShpKSwKICAgICAgICBhID0+IHZlYyg0MCwgNjAsIGEpCiAgICAgICksCiAgICAgIG5ldyBQbGFuZXQoCiAgICAgICAgMzAsCiAgICAgICAgbnZnLlJHQigxNjAsIDIyMCwgMjU1KSwKICAgICAgICBudmcuUkdCQSgwLCAxMjAsIDI1NSwgMC44ICogMjU1KSwKICAgICAgICAoKSA9PiBwaGkoaSArIDEyMCksCiAgICAgICAgYSA9PiB2ZWMoMTgwLCA0MCwgYSkKICAgICAgKQogICAgXTsKCiAgICBudmcuU2F2ZSgpOwogICAgbnZnLlRyYW5zbGF0ZSguLi5jZW50ZXIpOwogICAgbnZnLlRyYW5zbGF0ZSguLi52ZWMoMjAsIDEwLCBwaGkoaSArIDI0MCkpKTsKCiAgICBEcmF3Q2lyY2xlKDUwLCBudmcuUkdCKDI1NSwgMjU1LCAyMjQpLCBudmcuUkdCQSgyNTUsIDE5MiwgMCwgMjU1KSk7CgogICAgbnZnLlJlc3RvcmUoKTsKICAgIG52Zy5TYXZlKCk7CgogICAgbnZnLlRyYW5zbGF0ZSguLi5jZW50ZXIpOwogICAgbnZnLlRyYW5zbGF0ZSguLi52ZWMoNDAsIDYwKSk7CgogICAgRHJhd0NpcmNsZSgyMCwgbnZnLlJHQigyNTUsIDE4MCwgMTgwKSwgbnZnLlJHQkEoMjU1LCAwLCAwLCAwLjggKiAyNTUpKTsKCiAgICBudmcuUmVzdG9yZSgpOwogICAgbnZnLlNhdmUoKTsKCiAgICBudmcuVHJhbnNsYXRlKC4uLmNlbnRlcik7CiAgICBudmcuVHJhbnNsYXRlKC4uLnZlYygxODAsIDQwLCBwaGkoaSArIDEyMCkpKTsKCiAgICBEcmF3Q2lyY2xlKDMwLCBudmcuUkdCKDE2MCwgMjIwLCAyNTUpLCBudmcuUkdCQSgwLCAxMjAsIDI1NSwgMC44ICogMjU1KSk7CgogICAgbnZnLlJlc3RvcmUoKTsKCiAgICBjb250ZXh0LmVuZCgpOwogICAgaSsrOwogIH0KfQoKY29uc3QgcnVuTWFpbiA9ICgpID0+IHsKICB0cnkgewogICAgbWFpbihzY3JpcHRBcmdzLnNsaWNlKDEpKTsKICAgIHN0ZC5leGl0KDApOwogIH0gY2F0Y2goZXJyb3IpIHsKICAgIGNvbnNvbGUubG9nKCdFUlJPUjonLCBlcnJvcik7CiAgfQp9OwppbXBvcnQoJ2NvbnNvbGUnKSAuY2F0Y2gocnVuTWFpbikgLnRoZW4oKHsgQ29uc29sZSB9KSA9PiAoKGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsgaW5zcGVjdE9wdGlvbnM6IHt9IH0pKSwgcnVuTWFpbigpKSk7Ci8qCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIGNvbnNvbGUubG9nKCdFUlJPUjonLGVycm9yLm1lc3NhZ2UpOwogICBzdGQuZXhpdCgxKTsKfSBmaW5hbGx5IHsKIH0KKi8KAAAAAAAAAACzFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9EgAAAAAAAH0SAAAAAAAAAAAAAAAA8L8"
				],
				[
					3252,
					1,
					"insert",
					{
						"characters": ",l"
					},
					"AgAAAK8QAAAAAAAAsBAAAAAAAAAAAAAAsBAAAAAAAACxEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvEAAAAAAAAK8QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3253,
					1,
					"left_delete",
					null,
					"AQAAALAQAAAAAAAAsBAAAAAAAAABAAAAbA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxEAAAAAAAALEQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3254,
					1,
					"insert",
					{
						"characters": "\ndraw"
					},
					"BgAAALAQAAAAAAAAsRAAAAAAAAAAAAAAsRAAAAAAAAC5EAAAAAAAAAAAAAC5EAAAAAAAALoQAAAAAAAAAAAAALoQAAAAAAAAuxAAAAAAAAAAAAAAuxAAAAAAAAC8EAAAAAAAAAAAAAC8EAAAAAAAAL0QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwEAAAAAAAALAQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3255,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAL0QAAAAAAAAvxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9EAAAAAAAAL0QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3257,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL8QAAAAAAAAwBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/EAAAAAAAAL8QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3258,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAMAQAAAAAAAAwhAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAEAAAAAAAAMAQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3259,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAMEQAAAAAAAAwhAAAAAAAAAAAAAAwhAAAAAAAADKEAAAAAAAAAAAAADKEAAAAAAAAMsQAAAAAAAAAAAAAMsQAAAAAAAA0xAAAAAAAAAAAAAAwhAAAAAAAADCEAAAAAAAAAgAAAAgICAgICAgIMIQAAAAAAAAzBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBEAAAAAAAAMEQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3260,
					1,
					"insert",
					{
						"characters": "nvg.Sa"
					},
					"BgAAAMwQAAAAAAAAzRAAAAAAAAAAAAAAzRAAAAAAAADOEAAAAAAAAAAAAADOEAAAAAAAAM8QAAAAAAAAAAAAAM8QAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADREAAAAAAAAAAAAADREAAAAAAAANIQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMEAAAAAAAAMwQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3272,
					1,
					"paste",
					null,
					"AgAAAMsQAAAAAAAA+BAAAAAAAAAAAAAA+BAAAAAAAAD4EAAAAAAAAAcAAAAgbnZnLlNh",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLEAAAAAAAANIQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3279,
					1,
					"cut",
					null,
					"AQAAANsQAAAAAAAA2xAAAAAAAAAeAAAAICAgIG52Zy5UcmFuc2xhdGUoLi4uY2VudGVyKTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbEAAAAAAAAPkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3280,
					2,
					"paste",
					null,
					"AgAAANsQAAAAAAAA+RAAAAAAAAAAAAAA+RAAAAAAAAAXEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbEAAAAAAAANsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3285,
					1,
					"insert",
					{
						"characters": "this.position"
					},
					"DgAAAA4RAAAAAAAADxEAAAAAAAAAAAAADxEAAAAAAAAPEQAAAAAAAAYAAABjZW50ZXIPEQAAAAAAABARAAAAAAAAAAAAABARAAAAAAAAEREAAAAAAAAAAAAAEREAAAAAAAASEQAAAAAAAAAAAAASEQAAAAAAABMRAAAAAAAAAAAAABMRAAAAAAAAFBEAAAAAAAAAAAAAFBEAAAAAAAAVEQAAAAAAAAAAAAAVEQAAAAAAABYRAAAAAAAAAAAAABYRAAAAAAAAFxEAAAAAAAAAAAAAFxEAAAAAAAAYEQAAAAAAAAAAAAAYEQAAAAAAABkRAAAAAAAAAAAAABkRAAAAAAAAGhEAAAAAAAAAAAAAGhEAAAAAAAAbEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOEQAAAAAAABQRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3291,
					1,
					"cut",
					null,
					"AQAAAPkQAAAAAAAA+RAAAAAAAAAlAAAAICAgIG52Zy5UcmFuc2xhdGUoLi4udGhpcy5wb3NpdGlvbik7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5EAAAAAAAAB4RAAAAAAAAAAAAAAAAAAA"
				],
				[
					3292,
					2,
					"paste",
					null,
					"AgAAAPkQAAAAAAAAHhEAAAAAAAAAAAAAHhEAAAAAAABDEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5EAAAAAAAAPkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3295,
					1,
					"insert",
					{
						"characters": "DrawCircle"
					},
					"CwAAAB4RAAAAAAAAHxEAAAAAAAAAAAAAHxEAAAAAAAAfEQAAAAAAACQAAAAgICAgbnZnLlRyYW5zbGF0ZSguLi50aGlzLnBvc2l0aW9uKTsfEQAAAAAAACARAAAAAAAAAAAAACARAAAAAAAAIREAAAAAAAAAAAAAIREAAAAAAAAiEQAAAAAAAAAAAAAiEQAAAAAAACMRAAAAAAAAAAAAACMRAAAAAAAAJBEAAAAAAAAAAAAAJBEAAAAAAAAlEQAAAAAAAAAAAAAlEQAAAAAAACYRAAAAAAAAAAAAACYRAAAAAAAAJxEAAAAAAAAAAAAAJxEAAAAAAAAoEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAeEQAAAAAAAEIRAAAAAAAA////////738"
				],
				[
					3296,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACgRAAAAAAAAKhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoEQAAAAAAACgRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3297,
					1,
					"insert",
					{
						"characters": "this.radius,"
					},
					"DAAAACkRAAAAAAAAKhEAAAAAAAAAAAAAKhEAAAAAAAArEQAAAAAAAAAAAAArEQAAAAAAACwRAAAAAAAAAAAAACwRAAAAAAAALREAAAAAAAAAAAAALREAAAAAAAAuEQAAAAAAAAAAAAAuEQAAAAAAAC8RAAAAAAAAAAAAAC8RAAAAAAAAMBEAAAAAAAAAAAAAMBEAAAAAAAAxEQAAAAAAAAAAAAAxEQAAAAAAADIRAAAAAAAAAAAAADIRAAAAAAAAMxEAAAAAAAAAAAAAMxEAAAAAAAA0EQAAAAAAAAAAAAA0EQAAAAAAADURAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApEQAAAAAAACkRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3298,
					1,
					"insert",
					{
						"characters": " this.tr"
					},
					"CAAAADURAAAAAAAANhEAAAAAAAAAAAAANhEAAAAAAAA3EQAAAAAAAAAAAAA3EQAAAAAAADgRAAAAAAAAAAAAADgRAAAAAAAAOREAAAAAAAAAAAAAOREAAAAAAAA6EQAAAAAAAAAAAAA6EQAAAAAAADsRAAAAAAAAAAAAADsRAAAAAAAAPBEAAAAAAAAAAAAAPBEAAAAAAAA9EQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1EQAAAAAAADURAAAAAAAAAAAAAAAA8L8"
				],
				[
					3299,
					2,
					"left_delete",
					null,
					"AgAAADwRAAAAAAAAPBEAAAAAAAABAAAAcjsRAAAAAAAAOxEAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9EQAAAAAAAD0RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3300,
					1,
					"insert",
					{
						"characters": "stroke,this.fil"
					},
					"DwAAADsRAAAAAAAAPBEAAAAAAAAAAAAAPBEAAAAAAAA9EQAAAAAAAAAAAAA9EQAAAAAAAD4RAAAAAAAAAAAAAD4RAAAAAAAAPxEAAAAAAAAAAAAAPxEAAAAAAABAEQAAAAAAAAAAAABAEQAAAAAAAEERAAAAAAAAAAAAAEERAAAAAAAAQhEAAAAAAAAAAAAAQhEAAAAAAABDEQAAAAAAAAAAAABDEQAAAAAAAEQRAAAAAAAAAAAAAEQRAAAAAAAARREAAAAAAAAAAAAARREAAAAAAABGEQAAAAAAAAAAAABGEQAAAAAAAEcRAAAAAAAAAAAAAEcRAAAAAAAASBEAAAAAAAAAAAAASBEAAAAAAABJEQAAAAAAAAAAAABJEQAAAAAAAEoRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7EQAAAAAAADsRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3301,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAEoRAAAAAAAASxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKEQAAAAAAAEoRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3303,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEwRAAAAAAAATREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMEQAAAAAAAEwRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3306,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAE0RAAAAAAAAThEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNEQAAAAAAAE0RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3307,
					1,
					"insert",
					{
						"characters": "nvg.Resot"
					},
					"CQAAAE4RAAAAAAAATxEAAAAAAAAAAAAATxEAAAAAAABQEQAAAAAAAAAAAABQEQAAAAAAAFERAAAAAAAAAAAAAFERAAAAAAAAUhEAAAAAAAAAAAAAUhEAAAAAAABTEQAAAAAAAAAAAABTEQAAAAAAAFQRAAAAAAAAAAAAAFQRAAAAAAAAVREAAAAAAAAAAAAAVREAAAAAAABWEQAAAAAAAAAAAABWEQAAAAAAAFcRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOEQAAAAAAAE4RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3308,
					2,
					"left_delete",
					null,
					"AgAAAFYRAAAAAAAAVhEAAAAAAAABAAAAdFURAAAAAAAAVREAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXEQAAAAAAAFcRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3309,
					1,
					"insert",
					{
						"characters": "tore"
					},
					"BAAAAFURAAAAAAAAVhEAAAAAAAAAAAAAVhEAAAAAAABXEQAAAAAAAAAAAABXEQAAAAAAAFgRAAAAAAAAAAAAAFgRAAAAAAAAWREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVEQAAAAAAAFURAAAAAAAAAAAAAAAA8L8"
				],
				[
					3310,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFkRAAAAAAAAWxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZEQAAAAAAAFkRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3312,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFsRAAAAAAAAXBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbEQAAAAAAAFsRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3318,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAH8TAAAAAAAAgBMAAAAAAAAAAAAAgBMAAAAAAACEEwAAAAAAAAAAAACEEwAAAAAAAIUTAAAAAAAAAAAAAIUTAAAAAAAAiRMAAAAAAAAAAAAAgBMAAAAAAACAEwAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/EwAAAAAAAH8TAAAAAAAAAAAAAACAX0A"
				],
				[
					3321,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAALkVAAAAAAAAuxUAAAAAAAAAAAAAhRMAAAAAAACHEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFEwAAAAAAALkVAAAAAAAAAAAAAAAA8L8"
				],
				[
					3324,
					1,
					"insert",
					{
						"characters": "\nfor"
					},
					"BAAAAIATAAAAAAAAgRMAAAAAAAAAAAAAgRMAAAAAAACCEwAAAAAAAAAAAACCEwAAAAAAAIMTAAAAAAAAAAAAAIMTAAAAAAAAhBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAEwAAAAAAAIATAAAAAAAAAAAAAAAAAAA"
				],
				[
					3325,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIQTAAAAAAAAhhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEEwAAAAAAAIQTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3326,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAIUTAAAAAAAAhhMAAAAAAAAAAAAAhhMAAAAAAACHEwAAAAAAAAAAAACHEwAAAAAAAIgTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFEwAAAAAAAIUTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3327,
					1,
					"insert",
					{
						"characters": " planet"
					},
					"BwAAAIgTAAAAAAAAiRMAAAAAAAAAAAAAiRMAAAAAAACKEwAAAAAAAAAAAACKEwAAAAAAAIsTAAAAAAAAAAAAAIsTAAAAAAAAjBMAAAAAAAAAAAAAjBMAAAAAAACNEwAAAAAAAAAAAACNEwAAAAAAAI4TAAAAAAAAAAAAAI4TAAAAAAAAjxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIEwAAAAAAAIgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3328,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAI8TAAAAAAAAkBMAAAAAAAAAAAAAkBMAAAAAAACREwAAAAAAAAAAAACREwAAAAAAAJITAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPEwAAAAAAAI8TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3329,
					1,
					"insert",
					{
						"characters": " planets"
					},
					"CAAAAJITAAAAAAAAkxMAAAAAAAAAAAAAkxMAAAAAAACUEwAAAAAAAAAAAACUEwAAAAAAAJUTAAAAAAAAAAAAAJUTAAAAAAAAlhMAAAAAAAAAAAAAlhMAAAAAAACXEwAAAAAAAAAAAACXEwAAAAAAAJgTAAAAAAAAAAAAAJgTAAAAAAAAmRMAAAAAAAAAAAAAmRMAAAAAAACaEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSEwAAAAAAAJITAAAAAAAAAAAAAAAA8L8"
				],
				[
					3330,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJoTAAAAAAAAnBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaEwAAAAAAAJoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3332,
					1,
					"left_delete",
					null,
					"AQAAAJsTAAAAAAAAmxMAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcEwAAAAAAAJwTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3333,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAJoTAAAAAAAAmhMAAAAAAAABAAAAKJoTAAAAAAAAmhMAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbEwAAAAAAAJsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3334,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJoTAAAAAAAAmxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaEwAAAAAAAJoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3335,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJsTAAAAAAAAnBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbEwAAAAAAAJsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3336,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAJwTAAAAAAAAnhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcEwAAAAAAAJwTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3337,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAJ0TAAAAAAAAnhMAAAAAAAAAAAAAnhMAAAAAAACfEwAAAAAAAAAAAACeEwAAAAAAAKATAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdEwAAAAAAAJ0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3338,
					1,
					"insert",
					{
						"characters": "planet.draw"
					},
					"CwAAAKATAAAAAAAAoRMAAAAAAAAAAAAAoRMAAAAAAACiEwAAAAAAAAAAAACiEwAAAAAAAKMTAAAAAAAAAAAAAKMTAAAAAAAApBMAAAAAAAAAAAAApBMAAAAAAAClEwAAAAAAAAAAAAClEwAAAAAAAKYTAAAAAAAAAAAAAKYTAAAAAAAApxMAAAAAAAAAAAAApxMAAAAAAACoEwAAAAAAAAAAAACoEwAAAAAAAKkTAAAAAAAAAAAAAKkTAAAAAAAAqhMAAAAAAAAAAAAAqhMAAAAAAACrEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgEwAAAAAAAKATAAAAAAAAAAAAAAAA8L8"
				],
				[
					3339,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKsTAAAAAAAArRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrEwAAAAAAAKsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3341,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAK0TAAAAAAAArhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtEwAAAAAAAK0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3355,
					1,
					"insert",
					{
						"characters": "\n\nplanets"
					},
					"DAAAAH8TAAAAAAAAgBMAAAAAAAAAAAAAgBMAAAAAAACEEwAAAAAAAAAAAACEEwAAAAAAAIUTAAAAAAAAAAAAAIUTAAAAAAAAiRMAAAAAAAAAAAAAgBMAAAAAAACAEwAAAAAAAAQAAAAgICAghRMAAAAAAACGEwAAAAAAAAAAAACGEwAAAAAAAIcTAAAAAAAAAAAAAIcTAAAAAAAAiBMAAAAAAAAAAAAAiBMAAAAAAACJEwAAAAAAAAAAAACJEwAAAAAAAIoTAAAAAAAAAAAAAIoTAAAAAAAAixMAAAAAAAAAAAAAixMAAAAAAACMEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/EwAAAAAAAH8TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3356,
					1,
					"insert",
					{
						"characters": ".sort"
					},
					"BQAAAIwTAAAAAAAAjRMAAAAAAAAAAAAAjRMAAAAAAACOEwAAAAAAAAAAAACOEwAAAAAAAI8TAAAAAAAAAAAAAI8TAAAAAAAAkBMAAAAAAAAAAAAAkBMAAAAAAACREwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMEwAAAAAAAIwTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3357,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAJETAAAAAAAAkxMAAAAAAAAAAAAAkhMAAAAAAACUEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACREwAAAAAAAJETAAAAAAAAAAAAAAAA8L8"
				],
				[
					3358,
					1,
					"insert",
					{
						"characters": "a,b"
					},
					"AwAAAJMTAAAAAAAAlBMAAAAAAAAAAAAAlBMAAAAAAACVEwAAAAAAAAAAAACVEwAAAAAAAJYTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTEwAAAAAAAJMTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3360,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAAJcTAAAAAAAAmBMAAAAAAAAAAAAAmBMAAAAAAACZEwAAAAAAAAAAAACZEwAAAAAAAJoTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXEwAAAAAAAJcTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3361,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJoTAAAAAAAAmxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaEwAAAAAAAJoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3366,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAJsTAAAAAAAAnBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbEwAAAAAAAJsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3367,
					1,
					"left_delete",
					null,
					"AQAAAJsTAAAAAAAAmxMAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcEwAAAAAAAJwTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3368,
					1,
					"insert",
					{
						"characters": "a-"
					},
					"AgAAAJsTAAAAAAAAnBMAAAAAAAAAAAAAnBMAAAAAAACdEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbEwAAAAAAAJsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3369,
					1,
					"left_delete",
					null,
					"AQAAAJwTAAAAAAAAnBMAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdEwAAAAAAAJ0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3370,
					1,
					"insert",
					{
						"characters": ".angle-b."
					},
					"CQAAAJwTAAAAAAAAnRMAAAAAAAAAAAAAnRMAAAAAAACeEwAAAAAAAAAAAACeEwAAAAAAAJ8TAAAAAAAAAAAAAJ8TAAAAAAAAoBMAAAAAAAAAAAAAoBMAAAAAAAChEwAAAAAAAAAAAAChEwAAAAAAAKITAAAAAAAAAAAAAKITAAAAAAAAoxMAAAAAAAAAAAAAoxMAAAAAAACkEwAAAAAAAAAAAACkEwAAAAAAAKUTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcEwAAAAAAAJwTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3371,
					1,
					"insert",
					{
						"characters": "angle"
					},
					"BQAAAKUTAAAAAAAAphMAAAAAAAAAAAAAphMAAAAAAACnEwAAAAAAAAAAAACnEwAAAAAAAKgTAAAAAAAAAAAAAKgTAAAAAAAAqRMAAAAAAAAAAAAAqRMAAAAAAACqEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClEwAAAAAAAKUTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3373,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKsTAAAAAAAArBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrEwAAAAAAAKsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3388,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAGYRAAAAAAAAZxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABmEQAAAAAAAGYRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3389,
					1,
					"insert",
					{
						"characters": "\nget"
					},
					"BQAAAGcRAAAAAAAAaBEAAAAAAAAAAAAAaBEAAAAAAABwEQAAAAAAAAAAAABwEQAAAAAAAHERAAAAAAAAAAAAAHERAAAAAAAAchEAAAAAAAAAAAAAchEAAAAAAABzEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnEQAAAAAAAGcRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3390,
					1,
					"insert",
					{
						"characters": " depth"
					},
					"BgAAAHMRAAAAAAAAdBEAAAAAAAAAAAAAdBEAAAAAAAB1EQAAAAAAAAAAAAB1EQAAAAAAAHYRAAAAAAAAAAAAAHYRAAAAAAAAdxEAAAAAAAAAAAAAdxEAAAAAAAB4EQAAAAAAAAAAAAB4EQAAAAAAAHkRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzEQAAAAAAAHMRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3391,
					5,
					"left_delete",
					null,
					"BQAAAHgRAAAAAAAAeBEAAAAAAAABAAAAaHcRAAAAAAAAdxEAAAAAAAABAAAAdHYRAAAAAAAAdhEAAAAAAAABAAAAcHURAAAAAAAAdREAAAAAAAABAAAAZXQRAAAAAAAAdBEAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5EQAAAAAAAHkRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3392,
					1,
					"insert",
					{
						"characters": "zIndex"
					},
					"BgAAAHQRAAAAAAAAdREAAAAAAAAAAAAAdREAAAAAAAB2EQAAAAAAAAAAAAB2EQAAAAAAAHcRAAAAAAAAAAAAAHcRAAAAAAAAeBEAAAAAAAAAAAAAeBEAAAAAAAB5EQAAAAAAAAAAAAB5EQAAAAAAAHoRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0EQAAAAAAAHQRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3393,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHoRAAAAAAAAfBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6EQAAAAAAAHoRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3395,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHwRAAAAAAAAfREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8EQAAAAAAAHwRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3396,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAH0RAAAAAAAAfxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9EQAAAAAAAH0RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3397,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAH4RAAAAAAAAfxEAAAAAAAAAAAAAfxEAAAAAAACHEQAAAAAAAAAAAACHEQAAAAAAAIgRAAAAAAAAAAAAAIgRAAAAAAAAkBEAAAAAAAAAAAAAfxEAAAAAAAB/EQAAAAAAAAgAAAAgICAgICAgIH8RAAAAAAAAiREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+EQAAAAAAAH4RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3402,
					1,
					"insert",
					{
						"characters": "pos"
					},
					"BQAAAHURAAAAAAAAdhEAAAAAAAAAAAAAdhEAAAAAAAB2EQAAAAAAAAUAAABJbmRleHsRAAAAAAAAexEAAAAAAAAKAAAAICAgICAgICAgIHYRAAAAAAAAdxEAAAAAAAAAAAAAdxEAAAAAAAB4EQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1EQAAAAAAAHoRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3404,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAH0RAAAAAAAAfhEAAAAAAAAAAAAAfhEAAAAAAAB/EQAAAAAAAAAAAAB/EQAAAAAAAIARAAAAAAAAAAAAAIARAAAAAAAAgREAAAAAAAAAAAAAgREAAAAAAACCEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9EQAAAAAAAH0RAAAAAAAAAAAAAAAAYkA"
				],
				[
					3405,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIIRAAAAAAAAgxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCEQAAAAAAAIIRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3406,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIMRAAAAAAAAhREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDEQAAAAAAAIMRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3407,
					1,
					"insert",
					{
						"characters": "x,y"
					},
					"AwAAAIQRAAAAAAAAhREAAAAAAAAAAAAAhREAAAAAAACGEQAAAAAAAAAAAACGEQAAAAAAAIcRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEEQAAAAAAAIQRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3409,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIgRAAAAAAAAiREAAAAAAAAAAAAAiREAAAAAAACKEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIEQAAAAAAAIgRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3410,
					1,
					"insert",
					{
						"characters": " this.position;"
					},
					"DwAAAIoRAAAAAAAAixEAAAAAAAAAAAAAixEAAAAAAACMEQAAAAAAAAAAAACMEQAAAAAAAI0RAAAAAAAAAAAAAI0RAAAAAAAAjhEAAAAAAAAAAAAAjhEAAAAAAACPEQAAAAAAAAAAAACPEQAAAAAAAJARAAAAAAAAAAAAAJARAAAAAAAAkREAAAAAAAAAAAAAkREAAAAAAACSEQAAAAAAAAAAAACSEQAAAAAAAJMRAAAAAAAAAAAAAJMRAAAAAAAAlBEAAAAAAAAAAAAAlBEAAAAAAACVEQAAAAAAAAAAAACVEQAAAAAAAJYRAAAAAAAAAAAAAJYRAAAAAAAAlxEAAAAAAAAAAAAAlxEAAAAAAACYEQAAAAAAAAAAAACYEQAAAAAAAJkRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKEQAAAAAAAIoRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3411,
					1,
					"insert",
					{
						"characters": "\n\nreturn"
					},
					"CAAAAJkRAAAAAAAAmhEAAAAAAAAAAAAAmhEAAAAAAACbEQAAAAAAAAAAAACbEQAAAAAAAJwRAAAAAAAAAAAAAJwRAAAAAAAAnREAAAAAAAAAAAAAnREAAAAAAACeEQAAAAAAAAAAAACeEQAAAAAAAJ8RAAAAAAAAAAAAAJ8RAAAAAAAAoBEAAAAAAAAAAAAAoBEAAAAAAAChEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZEQAAAAAAAJkRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3412,
					1,
					"insert",
					{
						"characters": " y;"
					},
					"AwAAAKERAAAAAAAAohEAAAAAAAAAAAAAohEAAAAAAACjEQAAAAAAAAAAAACjEQAAAAAAAKQRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChEQAAAAAAAKERAAAAAAAAAAAAAAAA8L8"
				],
				[
					3421,
					1,
					"insert",
					{
						"characters": "zpos"
					},
					"BQAAAOUTAAAAAAAA5hMAAAAAAAAAAAAA5hMAAAAAAADmEwAAAAAAAAUAAABhbmdsZeYTAAAAAAAA5xMAAAAAAAAAAAAA5xMAAAAAAADoEwAAAAAAAAAAAADoEwAAAAAAAOkTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlEwAAAAAAAOoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3423,
					4,
					"right_delete",
					null,
					"BAAAAO0TAAAAAAAA7RMAAAAAAAABAAAAbu0TAAAAAAAA7RMAAAAAAAABAAAAZ+0TAAAAAAAA7RMAAAAAAAABAAAAbO0TAAAAAAAA7RMAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtEwAAAAAAAO0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3424,
					1,
					"left_delete",
					null,
					"AQAAAOwTAAAAAAAA7BMAAAAAAAABAAAAYQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtEwAAAAAAAO0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					3425,
					1,
					"insert",
					{
						"characters": "zpos"
					},
					"BAAAAOwTAAAAAAAA7RMAAAAAAAAAAAAA7RMAAAAAAADuEwAAAAAAAAAAAADuEwAAAAAAAO8TAAAAAAAAAAAAAO8TAAAAAAAA8BMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsEwAAAAAAAOwTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3432,
					1,
					"insert",
					{
						"characters": "60"
					},
					"AwAAAAQTAAAAAAAABRMAAAAAAAAAAAAABRMAAAAAAAAFEwAAAAAAAAIAAAA0MAUTAAAAAAAABhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEEwAAAAAAAAYTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3434,
					1,
					"right_delete",
					null,
					"AQAAAAgTAAAAAAAACBMAAAAAAAABAAAANg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIEwAAAAAAAAgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3435,
					1,
					"insert",
					{
						"characters": "12"
					},
					"AgAAAAgTAAAAAAAACRMAAAAAAAAAAAAACRMAAAAAAAAKEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIEwAAAAAAAAgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3494,
					1,
					"cut",
					null,
					"AQAAADYSAAAAAAAANhIAAAAAAAAcAAAAICAgICAgICAoKSA9PiBwaGkoaSArIDI0MCksCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2EgAAAAAAAFISAAAAAAAAAAAAAAAA8L8"
				],
				[
					3495,
					2,
					"paste",
					null,
					"AgAAADYSAAAAAAAAUhIAAAAAAAAAAAAAUhIAAAAAAABuEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2EgAAAAAAADYSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3498,
					1,
					"insert",
					{
						"characters": "*0.1"
					},
					"BQAAAGUSAAAAAAAAZhIAAAAAAAAAAAAAZhIAAAAAAABmEgAAAAAAAAYAAAAgKyAyNDBmEgAAAAAAAGcSAAAAAAAAAAAAAGcSAAAAAAAAaBIAAAAAAAAAAAAAaBIAAAAAAABpEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlEgAAAAAAAGsSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3505,
					1,
					"cut",
					null,
					"AQAAAFISAAAAAAAAUhIAAAAAAAAaAAAAICAgICAgICAoKSA9PiBwaGkoaSowLjEpLAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSEgAAAAAAAGwSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3506,
					1,
					"paste",
					null,
					"AQAAAFISAAAAAAAAbBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSEgAAAAAAAFISAAAAAAAAAAAAAAAA8L8"
				],
				[
					3509,
					1,
					"paste",
					null,
					"AQAAABQTAAAAAAAALhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUEwAAAAAAABQTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3512,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAACgTAAAAAAAAKRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoEwAAAAAAACgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3522,
					1,
					"paste",
					null,
					"AQAAANgTAAAAAAAA+hMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYEwAAAAAAANgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3527,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAPYTAAAAAAAA9xMAAAAAAAAAAAAA9xMAAAAAAAD3EwAAAAAAAAEAAAAx",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2EwAAAAAAAPcTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3530,
					1,
					"left_delete",
					null,
					"AQAAAPMTAAAAAAAA8xMAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0EwAAAAAAAPQTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3537,
					1,
					"insert",
					{
						"characters": "getPrecession"
					},
					"DQAAAMQPAAAAAAAAxQ8AAAAAAAAAAAAAxQ8AAAAAAADGDwAAAAAAAAAAAADGDwAAAAAAAMcPAAAAAAAAAAAAAMcPAAAAAAAAyA8AAAAAAAAAAAAAyA8AAAAAAADJDwAAAAAAAAAAAADJDwAAAAAAAMoPAAAAAAAAAAAAAMoPAAAAAAAAyw8AAAAAAAAAAAAAyw8AAAAAAADMDwAAAAAAAAAAAADMDwAAAAAAAM0PAAAAAAAAAAAAAM0PAAAAAAAAzg8AAAAAAAAAAAAAzg8AAAAAAADPDwAAAAAAAAAAAADPDwAAAAAAANAPAAAAAAAAAAAAANAPAAAAAAAA0Q8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEDwAAAAAAAMQPAAAAAAAAAAAAAAAA8L8"
				],
				[
					3538,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANEPAAAAAAAA0g8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRDwAAAAAAANEPAAAAAAAAAAAAAAAA8L8"
				],
				[
					3545,
					1,
					"cut",
					null,
					"AQAAADkQAAAAAAAAORAAAAAAAAA3AAAAICBnZXQgYW5nbGUoKSB7CiAgICAgICAgICByZXR1cm4gZ2V0QW5nbGUoKTsKICAgICAgICB9LA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5EAAAAAAAAHAQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3546,
					2,
					"paste",
					null,
					"AgAAADkQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACnEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5EAAAAAAAADkQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3551,
					1,
					"insert",
					{
						"characters": "precession"
					},
					"CwAAAHYQAAAAAAAAdxAAAAAAAAAAAAAAdxAAAAAAAAB3EAAAAAAAAAUAAABhbmdsZXcQAAAAAAAAeBAAAAAAAAAAAAAAeBAAAAAAAAB5EAAAAAAAAAAAAAB5EAAAAAAAAHoQAAAAAAAAAAAAAHoQAAAAAAAAexAAAAAAAAAAAAAAexAAAAAAAAB8EAAAAAAAAAAAAAB8EAAAAAAAAH0QAAAAAAAAAAAAAH0QAAAAAAAAfhAAAAAAAAAAAAAAfhAAAAAAAAB/EAAAAAAAAAAAAAB/EAAAAAAAAIAQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2EAAAAAAAAHsQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3558,
					1,
					"insert",
					{
						"characters": "Pre"
					},
					"BAAAAJkQAAAAAAAAmhAAAAAAAAAAAAAAmhAAAAAAAACaEAAAAAAAAAUAAABBbmdsZZoQAAAAAAAAmxAAAAAAAAAAAAAAmxAAAAAAAACcEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZEAAAAAAAAJ4QAAAAAAAAAAAAAAAA8L8"
				],
				[
					3559,
					1,
					"insert_completion",
					{
						"completion": "getPrecession",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "getPrecession"
					},
					"AgAAAJYQAAAAAAAAlhAAAAAAAAAGAAAAZ2V0UHJllhAAAAAAAACjEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcEAAAAAAAAJwQAAAAAAAAAAAAAAAA8L8"
				],
				[
					3570,
					1,
					"cut",
					null,
					"AQAAAEgRAAAAAAAASBEAAAAAAAAlAAAAICAgIG52Zy5UcmFuc2xhdGUoLi4udGhpcy5wb3NpdGlvbik7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIEQAAAAAAAG0RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3571,
					2,
					"paste",
					null,
					"AgAAAEgRAAAAAAAAbREAAAAAAAAAAAAAbREAAAAAAACSEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIEQAAAAAAAEgRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3579,
					1,
					"insert",
					{
						"characters": "rotate"
					},
					"BwAAAHURAAAAAAAAdhEAAAAAAAAAAAAAdhEAAAAAAAB2EQAAAAAAAAkAAABUcmFuc2xhdGV2EQAAAAAAAHcRAAAAAAAAAAAAAHcRAAAAAAAAeBEAAAAAAAAAAAAAeBEAAAAAAAB5EQAAAAAAAAAAAAB5EQAAAAAAAHoRAAAAAAAAAAAAAHoRAAAAAAAAexEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1EQAAAAAAAH4RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3583,
					1,
					"insert",
					{
						"characters": "precession"
					},
					"CwAAAIQRAAAAAAAAhREAAAAAAAAAAAAAhREAAAAAAACFEQAAAAAAAAgAAABwb3NpdGlvboURAAAAAAAAhhEAAAAAAAAAAAAAhhEAAAAAAACHEQAAAAAAAAAAAACHEQAAAAAAAIgRAAAAAAAAAAAAAIgRAAAAAAAAiREAAAAAAAAAAAAAiREAAAAAAACKEQAAAAAAAAAAAACKEQAAAAAAAIsRAAAAAAAAAAAAAIsRAAAAAAAAjBEAAAAAAAAAAAAAjBEAAAAAAACNEQAAAAAAAAAAAACNEQAAAAAAAI4RAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEEQAAAAAAAIwRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3584,
					1,
					"left_delete",
					null,
					"AQAAAI0RAAAAAAAAjREAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOEQAAAAAAAI4RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3585,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAI0RAAAAAAAAjhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNEQAAAAAAAI0RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3588,
					1,
					"cut",
					null,
					"AQAAAG0RAAAAAAAAbREAAAAAAAAkAAAAICAgIG52Zy5yb3RhdGUoLi4udGhpcy5wcmVjZXNzaW9uKTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACREQAAAAAAAG0RAAAAAAAAAAAAAAAAAAA"
				],
				[
					3590,
					1,
					"paste",
					null,
					"AQAAAEgRAAAAAAAAbBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIEQAAAAAAAEgRAAAAAAAAAAAAAAAAAAA"
				],
				[
					3602,
					1,
					"insert",
					{
						"characters": "R"
					},
					"AgAAAFARAAAAAAAAUREAAAAAAAAAAAAAUREAAAAAAABREQAAAAAAAAEAAABy",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQEQAAAAAAAFERAAAAAAAAAAAAAAAA8L8"
				],
				[
					3609,
					1,
					"cut",
					null,
					"AQAAAEwRAAAAAAAATBEAAAAAAAAkAAAAbnZnLlJvdGF0ZSguLi50aGlzLnByZWNlc3Npb24pOwogICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMEQAAAAAAAHARAAAAAAAAAAAAAAAAQkA"
				],
				[
					3610,
					2,
					"paste",
					null,
					"AgAAAEwRAAAAAAAAcBEAAAAAAAAAAAAAcBEAAAAAAACUEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMEQAAAAAAAEwRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3613,
					1,
					"insert",
					{
						"characters": "console.log('"
					},
					"DgAAAHARAAAAAAAAcREAAAAAAAAAAAAAcREAAAAAAABxEQAAAAAAAA4AAABudmcuUm90YXRlKC4uLnERAAAAAAAAchEAAAAAAAAAAAAAchEAAAAAAABzEQAAAAAAAAAAAABzEQAAAAAAAHQRAAAAAAAAAAAAAHQRAAAAAAAAdREAAAAAAAAAAAAAdREAAAAAAAB2EQAAAAAAAAAAAAB2EQAAAAAAAHcRAAAAAAAAAAAAAHcRAAAAAAAAeBEAAAAAAAAAAAAAeBEAAAAAAAB5EQAAAAAAAAAAAAB5EQAAAAAAAHoRAAAAAAAAAAAAAHoRAAAAAAAAexEAAAAAAAAAAAAAexEAAAAAAAB8EQAAAAAAAAAAAAB8EQAAAAAAAH0RAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwEQAAAAAAAH4RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3616,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAI0RAAAAAAAAjhEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNEQAAAAAAAI0RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3617,
					2,
					"left_delete",
					null,
					"AgAAAI0RAAAAAAAAjREAAAAAAAABAAAAJ4wRAAAAAAAAjBEAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOEQAAAAAAAI4RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3618,
					1,
					"insert",
					{
						"characters": "',this.p"
					},
					"CAAAAIwRAAAAAAAAjREAAAAAAAAAAAAAjREAAAAAAACOEQAAAAAAAAAAAACOEQAAAAAAAI8RAAAAAAAAAAAAAI8RAAAAAAAAkBEAAAAAAAAAAAAAkBEAAAAAAACREQAAAAAAAAAAAACREQAAAAAAAJIRAAAAAAAAAAAAAJIRAAAAAAAAkxEAAAAAAAAAAAAAkxEAAAAAAACUEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMEQAAAAAAAIwRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3619,
					1,
					"insert_completion",
					{
						"completion": "this.precession",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "this.precession"
					},
					"AgAAAI4RAAAAAAAAjhEAAAAAAAAGAAAAdGhpcy5wjhEAAAAAAACdEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUEQAAAAAAAJQRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3620,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAJ0RAAAAAAAAnhEAAAAAAAAAAAAAnhEAAAAAAACfEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdEQAAAAAAAJ0RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3621,
					1,
					"left_delete",
					null,
					"AQAAAJ4RAAAAAAAAnhEAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfEQAAAAAAAJ8RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3628,
					1,
					"insert",
					{
						"characters": "&&"
					},
					"AgAAAEgRAAAAAAAASREAAAAAAAAAAAAASREAAAAAAABKEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIEQAAAAAAAEgRAAAAAAAAAAAAAAAAAAA"
				],
				[
					3629,
					2,
					"left_delete",
					null,
					"AgAAAEkRAAAAAAAASREAAAAAAAABAAAAJkgRAAAAAAAASBEAAAAAAAABAAAAJg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKEQAAAAAAAEoRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3630,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAEgRAAAAAAAASREAAAAAAAAAAAAASREAAAAAAABKEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIEQAAAAAAAEgRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3644,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFkRAAAAAAAAWhEAAAAAAAAAAAAAWhEAAAAAAABaEQAAAAAAAAMAAAAuLi4",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZEQAAAAAAAFwRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3646,
					2,
					"right_delete",
					null,
					"AgAAAEgRAAAAAAAASBEAAAAAAAABAAAAL0gRAAAAAAAASBEAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIEQAAAAAAAEgRAAAAAAAAAAAAAAAAAAA"
				],
				[
					3649,
					1,
					"insert",
					{
						"characters": "*180/Math."
					},
					"CgAAAGcRAAAAAAAAaBEAAAAAAAAAAAAAaBEAAAAAAABpEQAAAAAAAAAAAABpEQAAAAAAAGoRAAAAAAAAAAAAAGoRAAAAAAAAaxEAAAAAAAAAAAAAaxEAAAAAAABsEQAAAAAAAAAAAABsEQAAAAAAAG0RAAAAAAAAAAAAAG0RAAAAAAAAbhEAAAAAAAAAAAAAbhEAAAAAAABvEQAAAAAAAAAAAABvEQAAAAAAAHARAAAAAAAAAAAAAHARAAAAAAAAcREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnEQAAAAAAAGcRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3650,
					1,
					"insert",
					{
						"characters": "PI"
					},
					"AgAAAHERAAAAAAAAchEAAAAAAAAAAAAAchEAAAAAAABzEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxEQAAAAAAAHERAAAAAAAAAAAAAAAA8L8"
				],
				[
					3656,
					1,
					"paste",
					null,
					"AQAAAKcRAAAAAAAAsxEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnEQAAAAAAAKcRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3664,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAACUTAAAAAAAAJhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlEwAAAAAAACUTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3669,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAOkTAAAAAAAA6hMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpEwAAAAAAAOkTAAAAAAAAAAAAAAAA8L8"
				],
				[
					3676,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAALQUAAAAAAAAtRQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0FAAAAAAAALQUAAAAAAAAAAAAAAAA8L8"
				],
				[
					3679,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1FAAAAAAAALUUAAAAAAAAAAAAAAAA8L8"
				],
				[
					3684,
					1,
					"paste",
					null,
					"AQAAAFoRAAAAAAAAahEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaEQAAAAAAAFoRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3694,
					1,
					"paste",
					null,
					"AQAAAFkRAAAAAAAAphEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZEQAAAAAAAFkRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3699,
					1,
					"insert",
					{
						"characters": "nvg.Cu"
					},
					"BwAAAHARAAAAAAAAcREAAAAAAAAAAAAAcREAAAAAAABxEQAAAAAAAAQAAAB0aGlzcREAAAAAAAByEQAAAAAAAAAAAAByEQAAAAAAAHMRAAAAAAAAAAAAAHMRAAAAAAAAdBEAAAAAAAAAAAAAdBEAAAAAAAB1EQAAAAAAAAAAAAB1EQAAAAAAAHYRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwEQAAAAAAAHQRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3700,
					1,
					"insert_completion",
					{
						"completion": "CurrentTransform",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "CurrentTransform"
					},
					"AgAAAHQRAAAAAAAAdBEAAAAAAAACAAAAQ3V0EQAAAAAAAIQRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2EQAAAAAAAHYRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3701,
					11,
					"right_delete",
					null,
					"CwAAAIQRAAAAAAAAhBEAAAAAAAABAAAALoQRAAAAAAAAhBEAAAAAAAABAAAAcIQRAAAAAAAAhBEAAAAAAAABAAAAcoQRAAAAAAAAhBEAAAAAAAABAAAAZYQRAAAAAAAAhBEAAAAAAAABAAAAY4QRAAAAAAAAhBEAAAAAAAABAAAAZYQRAAAAAAAAhBEAAAAAAAABAAAAc4QRAAAAAAAAhBEAAAAAAAABAAAAc4QRAAAAAAAAhBEAAAAAAAABAAAAaYQRAAAAAAAAhBEAAAAAAAABAAAAb4QRAAAAAAAAhBEAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEEQAAAAAAAIQRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3705,
					1,
					"insert",
					{
						"characters": "nvg.Cu"
					},
					"BwAAAIcRAAAAAAAAiBEAAAAAAAAAAAAAiBEAAAAAAACIEQAAAAAAACEAAAAodGhpcy5wcmVjZXNzaW9uICogMTgwKSAvIE1hdGguUEmIEQAAAAAAAIkRAAAAAAAAAAAAAIkRAAAAAAAAihEAAAAAAAAAAAAAihEAAAAAAACLEQAAAAAAAAAAAACLEQAAAAAAAIwRAAAAAAAAAAAAAIwRAAAAAAAAjREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHEQAAAAAAAKgRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3706,
					1,
					"insert_completion",
					{
						"completion": "nvg.CurrentTransform",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "nvg.CurrentTransform"
					},
					"AgAAAIcRAAAAAAAAhxEAAAAAAAAGAAAAbnZnLkN1hxEAAAAAAACbEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNEQAAAAAAAI0RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3707,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJsRAAAAAAAAnREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbEQAAAAAAAJsRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3710,
					1,
					"cut",
					null,
					"AQAAAKARAAAAAAAAoBEAAAAAAAASAAAAIEN1cnJlbnRUcmFuc2Zvcm0g",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgEQAAAAAAALIRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3713,
					1,
					"cut",
					null,
					"AQAAAFMRAAAAAAAAUxEAAAAAAABNAAAAICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdudmcuQ3VycmVudFRyYW5zZm9ybScsIG52Zy5DdXJyZW50VHJhbnNmb3JtKCkpOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTEQAAAAAAAKARAAAAAAAAAAAAAAAAAAA"
				],
				[
					3714,
					1,
					"paste",
					null,
					"AQAAAFMRAAAAAAAAoBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTEQAAAAAAAFMRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3716,
					1,
					"insert",
					{
						"characters": "v"
					},
					"AQAAANERAAAAAAAA0hEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADREQAAAAAAANERAAAAAAAAAAAAAAAAAAA"
				],
				[
					3717,
					1,
					"left_delete",
					null,
					"AQAAANERAAAAAAAA0REAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSEQAAAAAAANIRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3718,
					1,
					"paste",
					null,
					"AQAAANERAAAAAAAAHhIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADREQAAAAAAANERAAAAAAAAAAAAAAAA8L8"
				],
				[
					3732,
					1,
					"paste",
					null,
					"AQAAACkDAAAAAAAATAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAwAAAAAAACkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3737,
					2,
					"left_delete",
					null,
					"AgAAAC8DAAAAAAAALwMAAAAAAAAJAAAAcHJvdG90eXBlLgMAAAAAAAAuAwAAAAAAAAEAAAAu",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAwAAAAAAADgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3740,
					1,
					"cut",
					null,
					"AQAAACkDAAAAAAAAKQMAAAAAAAAHAAAAUG9pbnQucg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwAwAAAAAAACkDAAAAAAAAAAAAAAAAAAA"
				],
				[
					3741,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAACkDAAAAAAAAKgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAwAAAAAAACkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3742,
					1,
					"left_delete",
					null,
					"AQAAACkDAAAAAAAAKQMAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqAwAAAAAAACoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3743,
					1,
					"insert",
					{
						"characters": "un"
					},
					"AgAAACkDAAAAAAAAKgMAAAAAAAAAAAAAKgMAAAAAAAArAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAwAAAAAAACkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3744,
					2,
					"left_delete",
					null,
					"AgAAACoDAAAAAAAAKgMAAAAAAAABAAAAbikDAAAAAAAAKQMAAAAAAAABAAAAdQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAwAAAAAAACsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3745,
					1,
					"insert",
					{
						"characters": "function"
					},
					"CAAAACkDAAAAAAAAKgMAAAAAAAAAAAAAKgMAAAAAAAArAwAAAAAAAAAAAAArAwAAAAAAACwDAAAAAAAAAAAAACwDAAAAAAAALQMAAAAAAAAAAAAALQMAAAAAAAAuAwAAAAAAAAAAAAAuAwAAAAAAAC8DAAAAAAAAAAAAAC8DAAAAAAAAMAMAAAAAAAAAAAAAMAMAAAAAAAAxAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAwAAAAAAACkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3746,
					1,
					"insert",
					{
						"characters": " RotatePoint"
					},
					"DAAAADEDAAAAAAAAMgMAAAAAAAAAAAAAMgMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANQMAAAAAAAAAAAAANQMAAAAAAAA2AwAAAAAAAAAAAAA2AwAAAAAAADcDAAAAAAAAAAAAADcDAAAAAAAAOAMAAAAAAAAAAAAAOAMAAAAAAAA5AwAAAAAAAAAAAAA5AwAAAAAAADoDAAAAAAAAAAAAADoDAAAAAAAAOwMAAAAAAAAAAAAAOwMAAAAAAAA8AwAAAAAAAAAAAAA8AwAAAAAAAD0DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxAwAAAAAAADEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3747,
					16,
					"right_delete",
					null,
					"EAAAAD0DAAAAAAAAPQMAAAAAAAABAAAAbz0DAAAAAAAAPQMAAAAAAAABAAAAdD0DAAAAAAAAPQMAAAAAAAABAAAAYT0DAAAAAAAAPQMAAAAAAAABAAAAdD0DAAAAAAAAPQMAAAAAAAABAAAAZT0DAAAAAAAAPQMAAAAAAAABAAAAID0DAAAAAAAAPQMAAAAAAAABAAAAPT0DAAAAAAAAPQMAAAAAAAABAAAAID0DAAAAAAAAPQMAAAAAAAABAAAAZj0DAAAAAAAAPQMAAAAAAAABAAAAdT0DAAAAAAAAPQMAAAAAAAABAAAAbj0DAAAAAAAAPQMAAAAAAAABAAAAYz0DAAAAAAAAPQMAAAAAAAABAAAAdD0DAAAAAAAAPQMAAAAAAAABAAAAaT0DAAAAAAAAPQMAAAAAAAABAAAAbz0DAAAAAAAAPQMAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9AwAAAAAAAD0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					3749,
					1,
					"insert",
					{
						"characters": "x,y,"
					},
					"BAAAAD4DAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAABAAwAAAAAAAAAAAABAAwAAAAAAAEEDAAAAAAAAAAAAAEEDAAAAAAAAQgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AwAAAAAAAD4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					3750,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEIDAAAAAAAAQwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAwAAAAAAAEIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3752,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAEgDAAAAAAAASQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIAwAAAAAAAEgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3755,
					1,
					"left_delete",
					null,
					"AQAAAEkDAAAAAAAASQMAAAAAAAAaAAAALCBvcmlnaW4gPSB7IHg6IDAsIHk6IDAgfSk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJAwAAAAAAAGMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3764,
					1,
					"left_delete",
					null,
					"AQAAAEwDAAAAAAAATAMAAAAAAAAsAAAAICB0aGlzLnggLT0gb3JpZ2luLng7CiAgdGhpcy55IC09IG9yaWdpbi55Owo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMAwAAAAAAAHgDAAAAAAAAAAAAAAAAAAA"
				],
				[
					3774,
					5,
					"left_delete",
					null,
					"BQAAAJEDAAAAAAAAkQMAAAAAAAABAAAALpADAAAAAAAAkAMAAAAAAAABAAAAc48DAAAAAAAAjwMAAAAAAAABAAAAaY4DAAAAAAAAjgMAAAAAAAABAAAAaI0DAAAAAAAAjQMAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAwAAAAAAAJIDAAAAAAAAAAAAAABAZEA"
				],
				[
					3779,
					5,
					"right_delete",
					null,
					"BQAAAK4DAAAAAAAArgMAAAAAAAABAAAAdK4DAAAAAAAArgMAAAAAAAABAAAAaK4DAAAAAAAArgMAAAAAAAABAAAAaa4DAAAAAAAArgMAAAAAAAABAAAAc64DAAAAAAAArgMAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAwAAAAAAAK4DAAAAAAAAAAAAAABAXUA"
				],
				[
					3781,
					4,
					"right_delete",
					null,
					"BAAAALcDAAAAAAAAtwMAAAAAAAABAAAAaLcDAAAAAAAAtwMAAAAAAAABAAAAabcDAAAAAAAAtwMAAAAAAAABAAAAc7cDAAAAAAAAtwMAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3AwAAAAAAALcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3782,
					1,
					"left_delete",
					null,
					"AQAAALYDAAAAAAAAtgMAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3AwAAAAAAALcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3784,
					5,
					"right_delete",
					null,
					"BQAAAJUDAAAAAAAAlQMAAAAAAAABAAAAdJUDAAAAAAAAlQMAAAAAAAABAAAAaJUDAAAAAAAAlQMAAAAAAAABAAAAaZUDAAAAAAAAlQMAAAAAAAABAAAAc5UDAAAAAAAAlQMAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAwAAAAAAAJUDAAAAAAAAAAAAAACgZ0A"
				],
				[
					3786,
					1,
					"insert",
					{
						"characters": "retzur"
					},
					"BgAAAIIDAAAAAAAAgwMAAAAAAAAAAAAAgwMAAAAAAACEAwAAAAAAAAAAAACEAwAAAAAAAIUDAAAAAAAAAAAAAIUDAAAAAAAAhgMAAAAAAAAAAAAAhgMAAAAAAACHAwAAAAAAAAAAAACHAwAAAAAAAIgDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCAwAAAAAAAIIDAAAAAAAAAAAAAAAAMkA"
				],
				[
					3787,
					3,
					"left_delete",
					null,
					"AwAAAIcDAAAAAAAAhwMAAAAAAAABAAAAcoYDAAAAAAAAhgMAAAAAAAABAAAAdYUDAAAAAAAAhQMAAAAAAAABAAAAeg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAwAAAAAAAIgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3788,
					1,
					"insert",
					{
						"characters": "urn"
					},
					"AwAAAIUDAAAAAAAAhgMAAAAAAAAAAAAAhgMAAAAAAACHAwAAAAAAAAAAAACHAwAAAAAAAIgDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFAwAAAAAAAIUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3789,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAIgDAAAAAAAAiQMAAAAAAAAAAAAAiQMAAAAAAACKAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAwAAAAAAAIgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3790,
					1,
					"insert",
					{
						"characters": " x:"
					},
					"AwAAAIoDAAAAAAAAiwMAAAAAAAAAAAAAiwMAAAAAAACMAwAAAAAAAAAAAACMAwAAAAAAAI0DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKAwAAAAAAAIoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3791,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI0DAAAAAAAAjgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAwAAAAAAAI0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					3792,
					10,
					"right_delete",
					null,
					"CgAAAI4DAAAAAAAAjgMAAAAAAAABAAAAbI4DAAAAAAAAjgMAAAAAAAABAAAAZY4DAAAAAAAAjgMAAAAAAAABAAAAdI4DAAAAAAAAjgMAAAAAAAABAAAAII4DAAAAAAAAjgMAAAAAAAABAAAAeI4DAAAAAAAAjgMAAAAAAAABAAAAbo4DAAAAAAAAjgMAAAAAAAABAAAAZY4DAAAAAAAAjgMAAAAAAAABAAAAd44DAAAAAAAAjgMAAAAAAAABAAAAII4DAAAAAAAAjgMAAAAAAAABAAAAPQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAwAAAAAAAI4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					3794,
					1,
					"left_delete",
					null,
					"AQAAAJwDAAAAAAAAnAMAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAwAAAAAAAJ0DAAAAAAAA////////738"
				],
				[
					3795,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJwDAAAAAAAAnQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcAwAAAAAAAJwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3796,
					1,
					"insert",
					{
						"characters": " y:"
					},
					"AwAAAJ0DAAAAAAAAngMAAAAAAAAAAAAAngMAAAAAAACfAwAAAAAAAAAAAACfAwAAAAAAAKADAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAwAAAAAAAJ0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					3797,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKADAAAAAAAAoQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgAwAAAAAAAKADAAAAAAAAAAAAAAAA8L8"
				],
				[
					3798,
					14,
					"right_delete",
					null,
					"DgAAAKEDAAAAAAAAoQMAAAAAAAABAAAACqEDAAAAAAAAoQMAAAAAAAABAAAAIKEDAAAAAAAAoQMAAAAAAAABAAAAIKEDAAAAAAAAoQMAAAAAAAABAAAAbKEDAAAAAAAAoQMAAAAAAAABAAAAZaEDAAAAAAAAoQMAAAAAAAABAAAAdKEDAAAAAAAAoQMAAAAAAAABAAAAIKEDAAAAAAAAoQMAAAAAAAABAAAAeaEDAAAAAAAAoQMAAAAAAAABAAAAbqEDAAAAAAAAoQMAAAAAAAABAAAAZaEDAAAAAAAAoQMAAAAAAAABAAAAd6EDAAAAAAAAoQMAAAAAAAABAAAAIKEDAAAAAAAAoQMAAAAAAAABAAAAPaEDAAAAAAAAoQMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChAwAAAAAAAKEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3800,
					1,
					"left_delete",
					null,
					"AQAAAK4DAAAAAAAArgMAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAwAAAAAAAK8DAAAAAAAA////////738"
				],
				[
					3801,
					1,
					"insert",
					{
						"characters": " };"
					},
					"AwAAAK4DAAAAAAAArwMAAAAAAAAAAAAArwMAAAAAAACwAwAAAAAAAAAAAACwAwAAAAAAALEDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAwAAAAAAAK4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					3804,
					1,
					"left_delete",
					null,
					"AQAAALIDAAAAAAAAsgMAAAAAAAAxAAAAICB0aGlzLnggPSB4bmV3OwogIHRoaXMueSA9IHluZXc7CiAgcmV0dXJuIHRoaXM7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyAwAAAAAAAOMDAAAAAAAAAAAAAAAAAAA"
				],
				[
					3806,
					1,
					"left_delete",
					null,
					"AQAAALMDAAAAAAAAswMAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0AwAAAAAAALQDAAAAAAAA////////738"
				],
				[
					3810,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACkDAAAAAAAAKgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApAwAAAAAAACkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3812,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALUDAAAAAAAAtgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1AwAAAAAAALUDAAAAAAAAAAAAAAAAAAA"
				],
				[
					3837,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIkDAAAAAAAAigMAAAAAAAAAAAAAigMAAAAAAACKAwAAAAAAAAIAAAAgew",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJAwAAAAAAAIsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3838,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAIoDAAAAAAAAjAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKAwAAAAAAAIoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3839,
					5,
					"right_delete",
					null,
					"BQAAAIsDAAAAAAAAiwMAAAAAAAABAAAAXYsDAAAAAAAAiwMAAAAAAAABAAAAIIsDAAAAAAAAiwMAAAAAAAABAAAAeIsDAAAAAAAAiwMAAAAAAAABAAAAOosDAAAAAAAAiwMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLAwAAAAAAAIsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3842,
					1,
					"left_delete",
					null,
					"AQAAAKwDAAAAAAAArAMAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAwAAAAAAAK0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					3843,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAKwDAAAAAAAArQMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsAwAAAAAAAKwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3848,
					3,
					"right_delete",
					null,
					"AwAAAJsDAAAAAAAAmwMAAAAAAAABAAAAeZsDAAAAAAAAmwMAAAAAAAABAAAAOpsDAAAAAAAAmwMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAwAAAAAAAJsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3865,
					1,
					"paste",
					null,
					"AQAAAGkRAAAAAAAAdBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpEQAAAAAAAGkRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3866,
					1,
					"insert",
					{
						"characters": "(..."
					},
					"BAAAAHQRAAAAAAAAdREAAAAAAAAAAAAAdREAAAAAAAB2EQAAAAAAAAAAAAB2EQAAAAAAAHcRAAAAAAAAAAAAAHcRAAAAAAAAeBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0EQAAAAAAAHQRAAAAAAAAAAAAAAAA8L8"
				],
				[
					3868,
					1,
					"left_delete",
					null,
					"AQAAAI8RAAAAAAAAjxEAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQEQAAAAAAAJARAAAAAAAA////////738"
				],
				[
					3869,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAI8RAAAAAAAAkBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPEQAAAAAAAI8RAAAAAAAAAAAAAAAA8L8"
				],
				[
					3870,
					1,
					"insert",
					{
						"characters": " this.precession"
					},
					"EAAAAJARAAAAAAAAkREAAAAAAAAAAAAAkREAAAAAAACSEQAAAAAAAAAAAACSEQAAAAAAAJMRAAAAAAAAAAAAAJMRAAAAAAAAlBEAAAAAAAAAAAAAlBEAAAAAAACVEQAAAAAAAAAAAACVEQAAAAAAAJYRAAAAAAAAAAAAAJYRAAAAAAAAlxEAAAAAAAAAAAAAlxEAAAAAAACYEQAAAAAAAAAAAACYEQAAAAAAAJkRAAAAAAAAAAAAAJkRAAAAAAAAmhEAAAAAAAAAAAAAmhEAAAAAAACbEQAAAAAAAAAAAACbEQAAAAAAAJwRAAAAAAAAAAAAAJwRAAAAAAAAnREAAAAAAAAAAAAAnREAAAAAAACeEQAAAAAAAAAAAACeEQAAAAAAAJ8RAAAAAAAAAAAAAJ8RAAAAAAAAoBEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQEQAAAAAAAJARAAAAAAAAAAAAAAAA8L8"
				],
				[
					3871,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAKARAAAAAAAAoREAAAAAAAAAAAAAoREAAAAAAACiEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgEQAAAAAAAKARAAAAAAAAAAAAAAAA8L8"
				],
				[
					3881,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAHYSAAAAAAAAeBIAAAAAAAAAAAAA+xEAAAAAAAD9EQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7EQAAAAAAAHYSAAAAAAAA////////738"
				],
				[
					3884,
					1,
					"cut",
					null,
					"AQAAAHgSAAAAAAAAeBIAAAAAAAACAAAAKi8",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6EgAAAAAAAHgSAAAAAAAAAAAAAAAA8L8"
				],
				[
					3887,
					1,
					"paste",
					null,
					"AQAAABITAAAAAAAAFBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASEwAAAAAAABITAAAAAAAA////////738"
				],
				[
					3898,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFQCAAAAAAAAVQIAAAAAAAAAAAAAVQIAAAAAAABVAgAAAAAAABsAAAAgIC8vbnZnLlRyYW5zbGF0ZSguLi5wb3MpOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUAgAAAAAAAG8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					3901,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPEBAAAAAAAA8gEAAAAAAAAAAAAA8gEAAAAAAADyAQAAAAAAAAkAAAAvKnBvcywgKi8",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxAQAAAAAAAPoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3922,
					1,
					"cut",
					null,
					"AQAAAPQCAAAAAAAA9AIAAAAAAAARAAAAICBudmcuUmVzdG9yZSgpOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0AgAAAAAAAAUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					3929,
					1,
					"cut",
					null,
					"AQAAAD4CAAAAAAAAPgIAAAAAAAAOAAAAICBudmcuU2F2ZSgpOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AgAAAAAAAEwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					3949,
					1,
					"left_delete",
					null,
					"AQAAALgRAAAAAAAAuBEAAAAAAAAcAQAAICAvKiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ252Zy5DdXJyZW50VHJhbnNmb3JtJywgbnZnLkN1cnJlbnRUcmFuc2Zvcm0oKSk7CiAgbnZnLlJvdGF0ZSgodGhpcy5wcmVjZXNzaW9uICogMTgwKSAvIE1hdGguUEkpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ252Zy5DdXJyZW50VHJhbnNmb3JtJywgbnZnLkN1cnJlbnRUcmFuc2Zvcm0oKSk7CiAgICAgICAgICBjb25zb2xlLmxvZygndGhpcy5wcmVjZXNzaW9uJywgKHRoaXMucHJlY2Vzc2lvbiAqIDE4MCkgLyBNYXRoLlBJKTsqLwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4EQAAAAAAANQSAAAAAAAAAAAAAAAAAAA"
				],
				[
					3962,
					1,
					"right_delete",
					null,
					"AQAAAHsVAAAAAAAAexUAAAAAAAA+AgAAICAgIC8qCgogICAgbnZnLlNhdmUoKTsKICAgIG52Zy5UcmFuc2xhdGUoLi4uY2VudGVyKTsKICAgIG52Zy5UcmFuc2xhdGUoLi4udmVjKDIwLCAxMCwgcGhpKGkgKyAyNDApKSk7CgogICAgRHJhd0NpcmNsZSg1MCwgbnZnLlJHQigyNTUsIDI1NSwgMjI0KSwgbnZnLlJHQkEoMjU1LCAxOTIsIDAsIDI1NSkpOwoKICAgIG52Zy5SZXN0b3JlKCk7CiAgICBudmcuU2F2ZSgpOwoKICAgIG52Zy5UcmFuc2xhdGUoLi4uY2VudGVyKTsKICAgIG52Zy5UcmFuc2xhdGUoLi4udmVjKDQwLCA2MCkpOwoKICAgIERyYXdDaXJjbGUoMjAsIG52Zy5SR0IoMjU1LCAxODAsIDE4MCksIG52Zy5SR0JBKDI1NSwgMCwgMCwgMC44ICogMjU1KSk7CgogICAgbnZnLlJlc3RvcmUoKTsKICAgIG52Zy5TYXZlKCk7CgogICAgbnZnLlRyYW5zbGF0ZSguLi5jZW50ZXIpOwogICAgbnZnLlRyYW5zbGF0ZSguLi52ZWMoMTgwLCA0MCwgcGhpKGkgKyAxMjApKSk7CgogICAgRHJhd0NpcmNsZSgzMCwgbnZnLlJHQigxNjAsIDIyMCwgMjU1KSwgbnZnLlJHQkEoMCwgMTIwLCAyNTUsIDAuOCAqIDI1NSkpOwoKICAgIG52Zy5SZXN0b3JlKCk7Ki8KCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7FQAAAAAAALkXAAAAAAAAAAAAAAAAAAA"
				],
				[
					3971,
					1,
					"left_delete",
					null,
					"AQAAAH8CAAAAAAAAfwIAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAAgAAAAAAAIACAAAAAAAAAAAAAAAA8L8"
				],
				[
					3972,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAH8CAAAAAAAAgAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/AgAAAAAAAH8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					3975,
					1,
					"left_delete",
					null,
					"AQAAAH8CAAAAAAAAfwIAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAAgAAAAAAAIACAAAAAAAAAAAAAAAA8L8"
				],
				[
					3976,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAH8CAAAAAAAAgAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/AgAAAAAAAH8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					3979,
					1,
					"left_delete",
					null,
					"AQAAAH8CAAAAAAAAfwIAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAAgAAAAAAAIACAAAAAAAAAAAAAAAA8L8"
				],
				[
					3980,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAH8CAAAAAAAAgAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/AgAAAAAAAH8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					3981,
					1,
					"left_delete",
					null,
					"AQAAAH8CAAAAAAAAfwIAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAAgAAAAAAAIACAAAAAAAAAAAAAAAA8L8"
				],
				[
					3982,
					1,
					"insert",
					{
						"characters": "54"
					},
					"AgAAAH8CAAAAAAAAgAIAAAAAAAAAAAAAgAIAAAAAAACBAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/AgAAAAAAAH8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					3983,
					2,
					"left_delete",
					null,
					"AgAAAIACAAAAAAAAgAIAAAAAAAABAAAANH8CAAAAAAAAfwIAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBAgAAAAAAAIECAAAAAAAAAAAAAAAA8L8"
				],
				[
					3984,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAH8CAAAAAAAAgAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/AgAAAAAAAH8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					3987,
					1,
					"left_delete",
					null,
					"AQAAAH8CAAAAAAAAfwIAAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACAAgAAAAAAAIACAAAAAAAAAAAAAAAA8L8"
				],
				[
					3988,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAH8CAAAAAAAAgAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/AgAAAAAAAH8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					3999,
					1,
					"cut",
					null,
					"AQAAAEEUAAAAAAAAQRQAAAAAAADHAAAALAogICAgICBuZXcgUGxhbmV0KAogICAgICAgIDMwLAogICAgICAgIG52Zy5SR0IoMTYwLCAyMjAsIDI1NSksCiAgICAgICAgbnZnLlJHQkEoMCwgMTIwLCAyNTUsIDAuOCAqIDI1NSksCiAgICAgICAgKCkgPT4gcGhpKGkgKyAxMjApLAogICAgICAgICgpID0+IHBoaShpICogMC4wMiksCiAgICAgICAgYSA9PiB2ZWMoMTgwLCA0MCwgYSkKICAgICAgKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBFAAAAAAAAAgVAAAAAAAAAAAAAACAT0A"
				],
				[
					4000,
					2,
					"paste",
					null,
					"AgAAAEEUAAAAAAAACBUAAAAAAAAAAAAACBUAAAAAAADPFQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBFAAAAAAAAEEUAAAAAAAAAAAAAAAA8L8"
				],
				[
					4003,
					1,
					"right_delete",
					null,
					"AQAAACQVAAAAAAAAJBUAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkFQAAAAAAACQVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4004,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAACQVAAAAAAAAJRUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkFQAAAAAAACQVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4008,
					2,
					"right_delete",
					null,
					"AgAAALwVAAAAAAAAvBUAAAAAAAABAAAAMbwVAAAAAAAAvBUAAAAAAAABAAAAOA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8FQAAAAAAALwVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4009,
					1,
					"insert",
					{
						"characters": "32"
					},
					"AgAAALwVAAAAAAAAvRUAAAAAAAAAAAAAvRUAAAAAAAC+FQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8FQAAAAAAALwVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4011,
					1,
					"right_delete",
					null,
					"AQAAAMEVAAAAAAAAwRUAAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBFQAAAAAAAMEVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4012,
					1,
					"insert",
					{
						"characters": "16"
					},
					"AgAAAMEVAAAAAAAAwhUAAAAAAAAAAAAAwhUAAAAAAADDFQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBFQAAAAAAAMEVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4020,
					1,
					"cut",
					null,
					"AQAAADgVAAAAAAAAOBUAAAAAAAAFAAAAMTYwLCA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4FQAAAAAAAD0VAAAAAAAAAAAAAAAA8L8"
				],
				[
					4022,
					1,
					"paste",
					null,
					"AQAAAD0VAAAAAAAAQhUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9FQAAAAAAAD0VAAAAAAAAAAAAAAAA8L8"
				],
				[
					4033,
					1,
					"cut",
					null,
					"AQAAAFkVAAAAAAAAWRUAAAAAAAADAAAAMCwg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZFQAAAAAAAFwVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4035,
					1,
					"paste",
					null,
					"AQAAAF4VAAAAAAAAYRUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeFQAAAAAAAF4VAAAAAAAAAAAAAAAA8L8"
				],
				[
					4046,
					2,
					"left_delete",
					null,
					"AgAAAIkVAAAAAAAAiRUAAAAAAAABAAAAMogVAAAAAAAAiBUAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKFQAAAAAAAIoVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4047,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAIgVAAAAAAAAiRUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIFQAAAAAAAIgVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4048,
					1,
					"left_delete",
					null,
					"AQAAAIgVAAAAAAAAiBUAAAAAAAABAAAANg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJFQAAAAAAAIkVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4049,
					1,
					"insert",
					{
						"characters": "25"
					},
					"AgAAAIgVAAAAAAAAiRUAAAAAAAAAAAAAiRUAAAAAAACKFQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIFQAAAAAAAIgVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4050,
					1,
					"left_delete",
					null,
					"AQAAAIkVAAAAAAAAiRUAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKFQAAAAAAAIoVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4051,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAIkVAAAAAAAAihUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJFQAAAAAAAIkVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4052,
					1,
					"right_delete",
					null,
					"AQAAAIoVAAAAAAAAihUAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKFQAAAAAAAIoVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4053,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAIoVAAAAAAAAixUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKFQAAAAAAAIoVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4058,
					3,
					"left_delete",
					null,
					"AwAAAIoVAAAAAAAAihUAAAAAAAABAAAAMIkVAAAAAAAAiRUAAAAAAAABAAAANIgVAAAAAAAAiBUAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLFQAAAAAAAIsVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4059,
					1,
					"insert",
					{
						"characters": "-120"
					},
					"BAAAAIgVAAAAAAAAiRUAAAAAAAAAAAAAiRUAAAAAAACKFQAAAAAAAAAAAACKFQAAAAAAAIsVAAAAAAAAAAAAAIsVAAAAAAAAjBUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIFQAAAAAAAIgVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4061,
					1,
					"left_delete",
					null,
					"AQAAAIYVAAAAAAAAhhUAAAAAAAABAAAAKw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHFQAAAAAAAIcVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4067,
					1,
					"left_delete",
					null,
					"AQAAAKcVAAAAAAAApxUAAAAAAAABAAAAMg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoFQAAAAAAAKgVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4068,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAKcVAAAAAAAAqBUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnFQAAAAAAAKcVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4069,
					1,
					"left_delete",
					null,
					"AQAAAKcVAAAAAAAApxUAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoFQAAAAAAAKgVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4070,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAKcVAAAAAAAAqBUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnFQAAAAAAAKcVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4071,
					1,
					"left_delete",
					null,
					"AQAAAKcVAAAAAAAApxUAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoFQAAAAAAAKgVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4072,
					1,
					"insert",
					{
						"characters": "01"
					},
					"AgAAAKcVAAAAAAAAqBUAAAAAAAAAAAAAqBUAAAAAAACpFQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnFQAAAAAAAKcVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4082,
					1,
					"insert",
					{
						"characters": "*0.1"
					},
					"BAAAAIUVAAAAAAAAhhUAAAAAAAAAAAAAhhUAAAAAAACHFQAAAAAAAAAAAACHFQAAAAAAAIgVAAAAAAAAAAAAAIgVAAAAAAAAiRUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFFQAAAAAAAIUVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4086,
					1,
					"right_delete",
					null,
					"AQAAAIgVAAAAAAAAiBUAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIFQAAAAAAAIgVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4087,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAIgVAAAAAAAAiRUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIFQAAAAAAAIgVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4093,
					2,
					"left_delete",
					null,
					"AgAAADMUAAAAAAAAMxQAAAAAAAABAAAAMjIUAAAAAAAAMhQAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0FAAAAAAAADQUAAAAAAAAAAAAAADgaUA"
				],
				[
					4094,
					1,
					"insert",
					{
						"characters": "24"
					},
					"AgAAADIUAAAAAAAAMxQAAAAAAAAAAAAAMxQAAAAAAAA0FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyFAAAAAAAADIUAAAAAAAAAAAAAAAA8L8"
				],
				[
					4096,
					1,
					"left_delete",
					null,
					"AQAAAC4UAAAAAAAALhQAAAAAAAABAAAANg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvFAAAAAAAAC8UAAAAAAAAAAAAAAAA8L8"
				],
				[
					4097,
					1,
					"insert",
					{
						"characters": "16"
					},
					"AgAAAC4UAAAAAAAALxQAAAAAAAAAAAAALxQAAAAAAAAwFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuFAAAAAAAAC4UAAAAAAAAAAAAAAAA8L8"
				],
				[
					4098,
					1,
					"left_delete",
					null,
					"AQAAAC8UAAAAAAAALxQAAAAAAAABAAAANg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwFAAAAAAAADAUAAAAAAAAAAAAAAAA8L8"
				],
				[
					4099,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAC8UAAAAAAAAMBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvFAAAAAAAAC8UAAAAAAAAAAAAAAAA8L8"
				],
				[
					4105,
					2,
					"right_delete",
					null,
					"AgAAAMcVAAAAAAAAxxUAAAAAAAABAAAAMccVAAAAAAAAxxUAAAAAAAABAAAANg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHFQAAAAAAAMcVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4106,
					1,
					"insert",
					{
						"characters": "28"
					},
					"AgAAAMcVAAAAAAAAyBUAAAAAAAAAAAAAyBUAAAAAAADJFQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHFQAAAAAAAMcVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4111,
					3,
					"left_delete",
					null,
					"AwAAADAUAAAAAAAAMBQAAAAAAAABAAAAMC8UAAAAAAAALxQAAAAAAAABAAAAOC4UAAAAAAAALhQAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxFAAAAAAAADEUAAAAAAAAAAAAAAAA8L8"
				],
				[
					4112,
					1,
					"insert",
					{
						"characters": "300"
					},
					"AwAAAC4UAAAAAAAALxQAAAAAAAAAAAAALxQAAAAAAAAwFAAAAAAAAAAAAAAwFAAAAAAAADEUAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuFAAAAAAAAC4UAAAAAAAAAAAAAAAA8L8"
				],
				[
					4114,
					2,
					"right_delete",
					null,
					"AgAAADMUAAAAAAAAMxQAAAAAAAABAAAAMjMUAAAAAAAAMxQAAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzFAAAAAAAADMUAAAAAAAAAAAAAAAA8L8"
				],
				[
					4115,
					1,
					"insert",
					{
						"characters": "15"
					},
					"AgAAADMUAAAAAAAANBQAAAAAAAAAAAAANBQAAAAAAAA1FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzFAAAAAAAADMUAAAAAAAAAAAAAAAA8L8"
				],
				[
					4118,
					1,
					"left_delete",
					null,
					"AQAAADQUAAAAAAAANBQAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1FAAAAAAAADUUAAAAAAAAAAAAAAAA8L8"
				],
				[
					4119,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAADQUAAAAAAAANRQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0FAAAAAAAADQUAAAAAAAAAAAAAAAA8L8"
				],
				[
					4125,
					1,
					"left_delete",
					null,
					"AQAAAMgVAAAAAAAAyBUAAAAAAAABAAAAOA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJFQAAAAAAAMkVAAAAAAAAAAAAAAAAa0A"
				],
				[
					4126,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAMgVAAAAAAAAyRUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIFQAAAAAAAMgVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4133,
					1,
					"left_delete",
					null,
					"AQAAAIkVAAAAAAAAiRUAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKFQAAAAAAAIoVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4134,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAIkVAAAAAAAAihUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJFQAAAAAAAIkVAAAAAAAAAAAAAAAA8L8"
				],
				[
					4143,
					1,
					"insert",
					{
						"characters": "*0.8"
					},
					"BAAAAL8UAAAAAAAAwBQAAAAAAAAAAAAAwBQAAAAAAADBFAAAAAAAAAAAAADBFAAAAAAAAMIUAAAAAAAAAAAAAMIUAAAAAAAAwxQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/FAAAAAAAAL8UAAAAAAAAAAAAAAAA8L8"
				],
				[
					4158,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABAOAAAAAAAAEQ4AAAAAAAAAAAAAEQ4AAAAAAAARDgAAAAAAAEYAAAAgICAgLy8gbGV0IHBhdHRlcm4gPSBudmcuSW1hZ2VQYXR0ZXJuKDAsIDAsIC4uLmltZzJTeiwgMCwgaW1nMklkLCAxKTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQDgAAAAAAAFYOAAAAAAAAAAAAAAAA8L8"
				],
				[
					4171,
					1,
					"cut",
					null,
					"AQAAAH8HAAAAAAAAfwcAAAAAAAAjAAAAICAgICAgY29uc29sZS5sb2coJ2JlZ2luJywgY29sb3IpOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/BwAAAAAAAKIHAAAAAAAAAAAAAAAA8L8"
				],
				[
					4176,
					1,
					"left_delete",
					null,
					"AQAAABcXAAAAAAAAFxcAAAAAAACDAAAALyoKdHJ5IHsKICBtYWluKC4uLnNjcmlwdEFyZ3Muc2xpY2UoMSkpOwp9IGNhdGNoKGVycm9yKSB7CiAgY29uc29sZS5sb2coJ0VSUk9SOicsZXJyb3IubWVzc2FnZSk7CiAgIHN0ZC5leGl0KDEpOwp9IGZpbmFsbHkgewogfQoqLwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaFwAAAAAAABcXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAXFwAAaW1wb3J0ICogYXMgZ2xmdyBmcm9tICdnbGZ3JzsKLy9pbXBvcnQgeyBnbENsZWFyLCBnbENsZWFyQ29sb3IsIGdsVmlld3BvcnQsIEdMX0NPTE9SX0JVRkZFUl9CSVQsIEdMX0RFUFRIX0JVRkZFUl9CSVQsIEdMX1NURU5DSUxfQlVGRkVSX0JJVCB9IGZyb20gJy4vZ2wuanMnOwppbXBvcnQgKiBhcyBudmcgZnJvbSAnbmFub3ZnJzsKCmxldCB3aW5kb3c7CgpleHBvcnQgZnVuY3Rpb24gRHJhd0ltYWdlKGltYWdlLCBwb3MpIHsKICBjb25zdCBzaXplID0gbnZnLkltYWdlU2l6ZShpbWFnZSk7CiAgbnZnLlNhdmUoKTsKICBpZihwb3MpIG52Zy5UcmFuc2xhdGUoLi4ucG9zKTsKICBudmcuQmVnaW5QYXRoKCk7CiAgbnZnLlJlY3QoMCwgMCwgLi4uc2l6ZSk7CiAgbnZnLkZpbGxQYWludChudmcuSW1hZ2VQYXR0ZXJuKDAsIDAsIC4uLnNpemUsIDAsIGltYWdlLCAxKSk7CiAgbnZnLkZpbGwoKTsKICBudmcuUmVzdG9yZSgpOwp9CgpleHBvcnQgZnVuY3Rpb24gRHJhd0NpcmNsZSggIHJhZGl1cywgc3Ryb2tlID0gbnZnLlJHQigyNTUsIDI1NSwgMjU1KSwgZmlsbCA9IG52Zy5SR0JBKDI1NSwgMCwgMCwgOTYpKSB7CiAgIG52Zy5CZWdpblBhdGgoKTsKICBudmcuU3Ryb2tlQ29sb3Ioc3Ryb2tlKTsKICBudmcuU3Ryb2tlV2lkdGgoMyk7CiAgaWYoZmlsbCkgbnZnLkZpbGxDb2xvcihmaWxsKTsKICBudmcuQ2lyY2xlKDAsIDAsIHJhZGl1cyk7CiAgaWYoZmlsbCkgbnZnLkZpbGwoKTsKICBudmcuU3Ryb2tlKCk7Cn0KCmZ1bmN0aW9uIFJvdGF0ZVBvaW50KHgseSwgYW5nbGUpIHsKICBsZXQgYyA9IE1hdGguY29zKGFuZ2xlKSwKICAgIHMgPSBNYXRoLnNpbihhbmdsZSk7CiAgcmV0dXJuIFsgeCAqIGMgLSB5ICogcywgeCAqIHMgKyB5ICogYyBdOwp9CgpleHBvcnQgZnVuY3Rpb24gQ2xlYXIoY29sb3IgPSBudmcuUkdCKDAsIDAsIDApKSB7CiAgY29uc3QgeyBzaXplIH0gPSB3aW5kb3c7CiAgLy9jb25zb2xlLmxvZygnc2l6ZScsIC4uLnNpemUpOwogIG52Zy5TYXZlKCk7CiAgbnZnLkJlZ2luUGF0aCgpOwogIG52Zy5SZWN0KDAsIDAsIC4uLnNpemUpOwogIG52Zy5GaWxsQ29sb3IoY29sb3IpOwogIG52Zy5GaWxsKCk7CiAgbnZnLlJlc3RvcmUoKTsKfQoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgLyogZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoewogICAgaW5zcGVjdE9wdGlvbnM6IHsKICAgICAgbWF4U3RyaW5nTGVuZ3RoOiAyMDAsCiAgICAgIG1heEFycmF5TGVuZ3RoOiAxMCwKICAgICAgYnJlYWtMZW5ndGg6IEluZmluaXR5LAogICAgICBjb21wYWN0OiAyLAogICAgICBkZXB0aDogMTAKICAgIH0KICB9KTsqLwoKICBsZXQgaSA9IDA7CiAgbGV0IHJ1bm5pbmcgPSB0cnVlOwoKICBnbGZ3LldpbmRvdy5oaW50KGdsZncuQ09OVEVYVF9WRVJTSU9OX01BSk9SLCAzKTsKICBnbGZ3LldpbmRvdy5oaW50KGdsZncuQ09OVEVYVF9WRVJTSU9OX01JTk9SLCAyKTsKICBnbGZ3LldpbmRvdy5oaW50KGdsZncuT1BFTkdMX1BST0ZJTEUsIGdsZncuT1BFTkdMX0NPUkVfUFJPRklMRSk7CiAgZ2xmdy5XaW5kb3cuaGludChnbGZ3Lk9QRU5HTF9GT1JXQVJEX0NPTVBBVCwgdHJ1ZSk7CiAgZ2xmdy5XaW5kb3cuaGludChnbGZ3LlJFU0laQUJMRSwgZmFsc2UpOwogIGdsZncuV2luZG93LmhpbnQoZ2xmdy5TQU1QTEVTLCA0KTsKCiAgd2luZG93ID0gZ2xmdy5jb250ZXh0LmN1cnJlbnQgPSBuZXcgZ2xmdy5XaW5kb3coMTAyNCwgNzY4LCBzY3JpcHRBcmdzWzBdKTsKCiAgbGV0IGNvbnRleHQgPSBnbGZ3LmNvbnRleHQ7CiAgY29uc29sZS5sb2coJ2NvbnRleHQnLCBjb250ZXh0KTsKCiAgY29uc3QgeyBwb3NpdGlvbiwgc2l6ZSB9ID0gd2luZG93OwoKICBPYmplY3QuYXNzaWduKGNvbnRleHQsIHsKICAgIGJlZ2luKGNvbG9yID0gbnZnLlJHQigyNTUsIDI1NSwgMjU1KSkgewogICAgICBDbGVhcihjb2xvcik7CiAgICAgIG52Zy5CZWdpbkZyYW1lKC4uLnNpemUsIDEpOwogICAgfSwKICAgIGVuZCgpIHsKICAgICAgbnZnLkVuZEZyYW1lKCk7CiAgICAgIHdpbmRvdy5zd2FwQnVmZmVycygpOwogICAgICBnbGZ3LnBvbGwoKTsKICAgIH0KICB9KTsKCiAgT2JqZWN0LmFzc2lnbih3aW5kb3csIHsKICAgIGhhbmRsZVNpemUod2lkdGgsIGhlaWdodCkgewogICAgICBjb25zb2xlLmxvZygncmVzaXplZCcsIHsgd2lkdGgsIGhlaWdodCB9KTsKICAgIH0sCiAgICBoYW5kbGVLZXkoa2V5Q29kZSkgewogICAgICBsZXQgY2hhckNvZGUgPSBrZXlDb2RlICYgMHhmZjsKICAgICAgY29uc29sZS5sb2coYGhhbmRsZUtleWAsIHsga2V5Q29kZTogJzB4JyArIGtleUNvZGUudG9TdHJpbmcoMTYpLCBjaGFyQ29kZSwgY2hhcjogU3RyaW5nLmZyb21DaGFyQ29kZShjaGFyQ29kZSkgfSk7CiAgICAgIGxldCBjaGFyID0gU3RyaW5nLmZyb21Db2RlUG9pbnQoY2hhckNvZGUpOwoKICAgICAgbGV0IGhhbmRsZXIgPSB7ICdceDAwJzogKCkgPT4gKHJ1bm5pbmcgPSBmYWxzZSksIFE6ICgpID0+IChydW5uaW5nID0gZmFsc2UpIH1bY2hhcl07CiAgICAgIGlmKGhhbmRsZXIpIGhhbmRsZXIoKTsKICAgIH0sCiAgICBoYW5kbGVDaGFyTW9kcyhjaGFyLCBtb2RzKSB7CiAgICAgIGNvbnNvbGUubG9nKGBoYW5kbGVDaGFyTW9kc2AsIHsgY2hhciwgbW9kcyB9KTsKICAgIH0sCiAgICBoYW5kbGVNb3VzZUJ1dHRvbihidXR0b24sIGFjdGlvbiwgbW9kcykgewogICAgICBjb25zb2xlLmxvZyhgaGFuZGxlTW91c2VCdXR0b25gLCB7IGJ1dHRvbiwgYWN0aW9uLCBtb2RzIH0pOwogICAgfSwKICAgIGhhbmRsZUN1cnNvclBvcyh4LCB5KSB7CiAgICAgIC8vY29uc29sZS5sb2coYGhhbmRsZUN1cnNvclBvc2AsIHsgeCwgeSB9KTsKICAgIH0KICB9KTsKCiAgbnZnLkNyZWF0ZUdMMyhudmcuU1RFTkNJTF9TVFJPS0VTIHwgbnZnLkFOVElBTElBUyB8IG52Zy5ERUJVRyk7CgogIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gc2l6ZTsKICBjb25zdCB7IHgsIHkgfSA9IHBvc2l0aW9uOwoKICBsZXQgcGl4ZWxzOwogIGxldCBpbWdJZCA9IG52Zy5DcmVhdGVJbWFnZSgnQXJjaGl0ZWt0dXIucG5nJywgMCk7CiAgbGV0IGltZzJJZCA9IG52Zy5DcmVhdGVJbWFnZSgnTXVlaGxlYmVyZy5wbmcnLCAwKTsKCiAgbGV0IGltZzJTeiA9IG52Zy5JbWFnZVNpemUoaW1nMklkKTsKICBsZXQgaW1nU3ogPSBudmcuSW1hZ2VTaXplKGltZ0lkKTsKCiAgd2hpbGUoKHJ1bm5pbmcgJiY9ICF3aW5kb3cuc2hvdWxkQ2xvc2UpKSB7CiAgICBsZXQgdGltZSA9ICtuZXcgRGF0ZSgpIC8gMTAwMDsKICAgIGxldCBpbmRleCA9IE1hdGguZmxvb3IoKHRpbWUgKiAzNjApIC8gMzApOwogICAgbGV0IGNvbG9yID0gbnZnLlJHQigzMCwgMzAsIDMwKTsKCiAgICBjb250ZXh0LmJlZ2luKGNvbG9yKTsKCiAgICBsZXQgbSA9IG52Zy5DdXJyZW50VHJhbnNmb3JtKCk7CiAgICBsZXQgdCA9IG52Zy5UcmFuc2Zvcm1UcmFuc2xhdGUoW10sIDEwLCAyMCk7CiAgICBsZXQgcyA9IG52Zy5UcmFuc2Zvcm1TY2FsZShbXSwgMywgMyk7CgogICAgbGV0IHAgPSBudmcuVHJhbnNmb3JtTXVsdGlwbHkobnZnLlRyYW5zZm9ybU11bHRpcGx5KG0sIHQpLCBzKTsKCiAKICAgIGxldCBjZW50ZXIgPSBuZXcgZ2xmdy5Qb3NpdGlvbihzaXplLndpZHRoIC8gMiwgc2l6ZS5oZWlnaHQgLyAyKTsKICAgIGxldCBpbWdTeiA9IG5ldyBnbGZ3LlBvc2l0aW9uKGltZzJTei53aWR0aCAqIC0xLCBpbWcyU3ouaGVpZ2h0ICogLTEpOwogICAgbGV0IGltZ1N6XzIgPSBuZXcgZ2xmdy5Qb3NpdGlvbihpbWcyU3oud2lkdGggKiAtMC41LCBpbWcyU3ouaGVpZ2h0ICogLTAuNSk7CiAgICBsZXQgcGhpID0gYSA9PiAoKGEgJSAzNjApIC8gMTgwKSAqIE1hdGguUEk7CiAgICBsZXQgdmVjID0gKHcsIGgsIGFuZ2xlID0gcGhpKGkpKSA9PiBbTWF0aC5jb3MoYW5nbGUpICogdywgTWF0aC5zaW4oYW5nbGUpICogaF07IC8qLm1hcChuID0+IG4gKiByYWRpdXMpKi8KCiAgICBmdW5jdGlvbiBQbGFuZXQocmFkaXVzLCBzdHJva2UsIGZpbGwsIGdldEFuZ2xlLCBnZXRQcmVjZXNzaW9uLCBnZXRQb3NpdGlvbikgewogICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih0aGlzLCB7CiAgICAgICAgcmFkaXVzLAogICAgICAgIHN0cm9rZSwKICAgICAgICBmaWxsLAogICAgICAgIGdldCBhbmdsZSgpIHsKICAgICAgICAgIHJldHVybiBnZXRBbmdsZSgpOwogICAgICAgIH0sCiAgICAgICAgZ2V0IHByZWNlc3Npb24oKSB7CiAgICAgICAgICByZXR1cm4gZ2V0UHJlY2Vzc2lvbigpOwogICAgICAgIH0sCiAgICAgICAgZ2V0IHBvc2l0aW9uKCkgewogICAgICAgICAgcmV0dXJuIFJvdGF0ZVBvaW50KC4uLmdldFBvc2l0aW9uKHRoaXMuYW5nbGUpLCB0aGlzLnByZWNlc3Npb24pOwogICAgICAgIH0sCiAgICAgICAgZHJhdygpIHsKICAgICAgICAgIG52Zy5TYXZlKCk7CiAgICAgICAgICBudmcuVHJhbnNsYXRlKC4uLmNlbnRlcik7CiAgICAgICAgICBudmcuVHJhbnNsYXRlKC4uLnRoaXMucG9zaXRpb24pOwogICAgICAgICAgRHJhd0NpcmNsZSh0aGlzLnJhZGl1cywgdGhpcy5zdHJva2UsIHRoaXMuZmlsbCk7CiAgICAgICAgICBudmcuUmVzdG9yZSgpOwogICAgICAgIH0sCiAgICAgICAgZ2V0IHpwb3MoKSB7CiAgICAgICAgICBjb25zdCBbeCwgeV0gPSB0aGlzLnBvc2l0aW9uOwoKICAgICAgICAgIHJldHVybiB5OwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CgogICAgbGV0IHBsYW5ldHMgPSBbCiAgICAgIG5ldyBQbGFuZXQoCiAgICAgICAgNTAsCiAgICAgICAgbnZnLlJHQigyNTUsIDI1NSwgMjI0KSwKICAgICAgICBudmcuUkdCQSgyNTUsIDE5MiwgMCwgMjU1KSwKICAgICAgICAoKSA9PiBwaGkoaSArIDI0MCksCiAgICAgICAgKCkgPT4gcGhpKGkgKiAwLjAxKSwKICAgICAgICBhID0+IHZlYygyMCwgMTAsIGEpCiAgICAgICksCiAgICAgIG5ldyBQbGFuZXQoCiAgICAgICAgMjAsCiAgICAgICAgbnZnLlJHQigyNTUsIDE4MCwgMTgwKSwKICAgICAgICBudmcuUkdCQSgyNTUsIDAsIDAsIDAuOCAqIDI1NSksCiAgICAgICAgKCkgPT4gcGhpKGkpLAogICAgICAgICgpID0+IHBoaShpICogLTAuMDEpLAogICAgICAgIGEgPT4gdmVjKDMwMCwgMTAwLCBhKQogICAgICApLAogICAgICBuZXcgUGxhbmV0KAogICAgICAgIDMwLAogICAgICAgIG52Zy5SR0IoMTYwLCAyMjAsIDI1NSksCiAgICAgICAgbnZnLlJHQkEoMCwgMTIwLCAyNTUsIDAuOCAqIDI1NSksCiAgICAgICAgKCkgPT4gcGhpKGkqMC44ICsgMTIwKSwKICAgICAgICAoKSA9PiBwaGkoaSAqIDAuMDIpLAogICAgICAgIGEgPT4gdmVjKDE4MCwgNDAsIGEpCiAgICAgICksCiAgICAgIG5ldyBQbGFuZXQoCiAgICAgICAgMTAsCiAgICAgICAgbnZnLlJHQigyMjAsIDE2MCwgMjU1KSwKICAgICAgICBudmcuUkdCQSgxMjAsIDAsIDI1NSwgMC44ICogMjU1KSwKICAgICAgICAoKSA9PiBwaGkoaSowLjQgIC0xMjApLAogICAgICAgICgpID0+IHBoaShpICogMC4wMDEpLAogICAgICAgIGEgPT4gdmVjKDMyMCwgMjAwLCBhKQogICAgICApCiAgICBdOwoKICAgIHBsYW5ldHMuc29ydCgoYSwgYikgPT4gYS56cG9zIC0gYi56cG9zKTsKCiAgICBmb3IobGV0IHBsYW5ldCBvZiBwbGFuZXRzKSB7CiAgICAgIHBsYW5ldC5kcmF3KCk7CiAgICB9CiAgICBjb250ZXh0LmVuZCgpOwogICAgaSsrOwogIH0KfQoKY29uc3QgcnVuTWFpbiA9ICgpID0+IHsKICB0cnkgewogICAgbWFpbihzY3JpcHRBcmdzLnNsaWNlKDEpKTsKICAgIHN0ZC5leGl0KDApOwogIH0gY2F0Y2goZXJyb3IpIHsKICAgIGNvbnNvbGUubG9nKCdFUlJPUjonLCBlcnJvcik7CiAgfQp9OwppbXBvcnQoJ2NvbnNvbGUnKSAuY2F0Y2gocnVuTWFpbikgLnRoZW4oKHsgQ29uc29sZSB9KSA9PiAoKGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsgaW5zcGVjdE9wdGlvbnM6IHt9IH0pKSwgcnVuTWFpbigpKSk7CgAAAAAAAAAAnRcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFxcAAAAAAAAHFgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 2517,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALgHAAAAAAAAuQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAcAAAAAAAC4BwAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"paste",
					null,
					"AQAAALkHAAAAAAAAbQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQcAAAAAAAC5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"cut",
					null,
					"AQAAALkHAAAAAAAAuQcAAAAAAAC0AAAACmFkZF9leGVjdXRhYmxlKGltZ3VpX2RlbW8gaW1ndWkvZXhhbXBsZXMvZXhhbXBsZV9nbGZ3X29wZW5nbDMvbWFpbi5jcHAgaW1ndWkvaW1ndWlfZGVtby5jcHAgJHtJTUdVSV9TT1VSQ0VTfSkKdGFyZ2V0X2xpbmtfbGlicmFyaWVzKGltZ3VpX2RlbW8gJHtpbWd1aV9MSUJSQVJJRVN9ICR7aW1ndWlfREVQU30gZGwp",
					"AQAAAAAAAAABAAAAbQgAAAAAAAC5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"paste",
					null,
					"AQAAALkHAAAAAAAAfQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQcAAAAAAAC5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"paste",
					null,
					"AgAAANgHAAAAAAAA9AcAAAAAAAAAAAAA9AcAAAAAAAD0BwAAAAAAAFkAAABuYW5vdmcvZXhhbXBsZXMvZXhhbXBsZV9nbGZ3X29wZW5nbDMvbWFpbi5jcHAgbmFub3ZnL25hbm92Z19leGFtcGxlLmNwcCAke0lNR1VJX1NPVVJDRVN9KQ",
					"AQAAAAAAAAABAAAA2AcAAAAAAAAxCAAAAAAAAP///////+9/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAPQHAAAAAAAA9QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AcAAAAAAAD0BwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAEEIAAAAAAAAQggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QcAAAAAAADRBwAAAAAAAAAAAAAAwGxA"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQHAAAAAAAA9QcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AcAAAAAAAD0BwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"paste",
					null,
					"AQAAAPUHAAAAAAAApQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QcAAAAAAAD1BwAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"left_delete",
					null,
					"AQAAAKcIAAAAAAAApwgAAAAAAABMAAAAdGFyZ2V0X2xpbmtfbGlicmFyaWVzKG5hbm92Z19leGFtcGxlICR7bmFub3ZnX0xJQlJBUklFU30gJHtuYW5vdmdfREVQU30gZGwpCg",
					"AQAAAAAAAAABAAAApwgAAAAAAADzCAAAAAAAAAAAAAAAAAAA"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "include_director"
					},
					"EAAAALkHAAAAAAAAugcAAAAAAAAAAAAAugcAAAAAAAC7BwAAAAAAAAAAAAC7BwAAAAAAALwHAAAAAAAAAAAAALwHAAAAAAAAvQcAAAAAAAAAAAAAvQcAAAAAAAC+BwAAAAAAAAAAAAC+BwAAAAAAAL8HAAAAAAAAAAAAAL8HAAAAAAAAwAcAAAAAAAAAAAAAwAcAAAAAAADBBwAAAAAAAAAAAADBBwAAAAAAAMIHAAAAAAAAAAAAAMIHAAAAAAAAwwcAAAAAAAAAAAAAwwcAAAAAAADEBwAAAAAAAAAAAADEBwAAAAAAAMUHAAAAAAAAAAAAAMUHAAAAAAAAxgcAAAAAAAAAAAAAxgcAAAAAAADHBwAAAAAAAAAAAADHBwAAAAAAAMgHAAAAAAAAAAAAAMgHAAAAAAAAyQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQcAAAAAAAC5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "ies."
					},
					"BAAAAMkHAAAAAAAAygcAAAAAAAAAAAAAygcAAAAAAADLBwAAAAAAAAAAAADLBwAAAAAAAMwHAAAAAAAAAAAAAMwHAAAAAAAAzQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQcAAAAAAADJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"left_delete",
					null,
					"AQAAAMwHAAAAAAAAzAcAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAzQcAAAAAAADNBwAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMwHAAAAAAAAzgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAcAAAAAAADMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "nanovg"
					},
					"BgAAAM0HAAAAAAAAzgcAAAAAAAAAAAAAzgcAAAAAAADPBwAAAAAAAAAAAADPBwAAAAAAANAHAAAAAAAAAAAAANAHAAAAAAAA0QcAAAAAAAAAAAAA0QcAAAAAAADSBwAAAAAAAAAAAADSBwAAAAAAANMHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQcAAAAAAADNBwAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": "/src"
					},
					"BAAAANMHAAAAAAAA1AcAAAAAAAAAAAAA1AcAAAAAAADVBwAAAAAAAAAAAADVBwAAAAAAANYHAAAAAAAAAAAAANYHAAAAAAAA1wcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wcAAAAAAADTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "target_link_librar"
					},
					"EgAAAMYIAAAAAAAAxwgAAAAAAAAAAAAAxwgAAAAAAADICAAAAAAAAAAAAADICAAAAAAAAMkIAAAAAAAAAAAAAMkIAAAAAAAAyggAAAAAAAAAAAAAyggAAAAAAADLCAAAAAAAAAAAAADLCAAAAAAAAMwIAAAAAAAAAAAAAMwIAAAAAAAAzQgAAAAAAAAAAAAAzQgAAAAAAADOCAAAAAAAAAAAAADOCAAAAAAAAM8IAAAAAAAAAAAAAM8IAAAAAAAA0AgAAAAAAAAAAAAA0AgAAAAAAADRCAAAAAAAAAAAAADRCAAAAAAAANIIAAAAAAAAAAAAANIIAAAAAAAA0wgAAAAAAAAAAAAA0wgAAAAAAADUCAAAAAAAAAAAAADUCAAAAAAAANUIAAAAAAAAAAAAANUIAAAAAAAA1ggAAAAAAAAAAAAA1ggAAAAAAADXCAAAAAAAAAAAAADXCAAAAAAAANgIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxggAAAAAAADGCAAAAAAAAAAAAAAAwHJA"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "ies"
					},
					"AwAAANgIAAAAAAAA2QgAAAAAAAAAAAAA2QgAAAAAAADaCAAAAAAAAAAAAADaCAAAAAAAANsIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AgAAAAAAADYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANsIAAAAAAAA3QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wgAAAAAAADbCAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "nanovg_example"
					},
					"DgAAANwIAAAAAAAA3QgAAAAAAAAAAAAA3QgAAAAAAADeCAAAAAAAAAAAAADeCAAAAAAAAN8IAAAAAAAAAAAAAN8IAAAAAAAA4AgAAAAAAAAAAAAA4AgAAAAAAADhCAAAAAAAAAAAAADhCAAAAAAAAOIIAAAAAAAAAAAAAOIIAAAAAAAA4wgAAAAAAAAAAAAA4wgAAAAAAADkCAAAAAAAAAAAAADkCAAAAAAAAOUIAAAAAAAAAAAAAOUIAAAAAAAA5ggAAAAAAAAAAAAA5ggAAAAAAADnCAAAAAAAAAAAAADnCAAAAAAAAOgIAAAAAAAAAAAAAOgIAAAAAAAA6QgAAAAAAAAAAAAA6QgAAAAAAADqCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AgAAAAAAADcCAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": " m"
					},
					"AgAAAOoIAAAAAAAA6wgAAAAAAAAAAAAA6wgAAAAAAADsCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6ggAAAAAAADqCAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAO0IAAAAAAAA7ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QgAAAAAAADtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOwIAAAAAAAA7QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AgAAAAAAADsCAAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"paste",
					null,
					"AQAAAO0IAAAAAAAAFwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QgAAAAAAADtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"cut",
					null,
					"AQAAAPcHAAAAAAAA9wcAAAAAAAAdAAAAbmFub3ZnL2V4YW1wbGUvZXhhbXBsZV9nbDMuYyA",
					"AQAAAAAAAAABAAAA9wcAAAAAAAAUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					2,
					"paste",
					null,
					"AgAAAPcHAAAAAAAAFAgAAAAAAAAAAAAAFAgAAAAAAAAxCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wcAAAAAAAD3BwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "perf"
					},
					"BQAAACMIAAAAAAAAJAgAAAAAAAAAAAAAJAgAAAAAAAAkCAAAAAAAAAsAAABleGFtcGxlX2dsMyQIAAAAAAAAJQgAAAAAAAAAAAAAJQgAAAAAAAAmCAAAAAAAAAAAAAAmCAAAAAAAACcIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwgAAAAAAAAuCAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"cut",
					null,
					"AQAAABMIAAAAAAAAEwgAAAAAAAAWAAAAIG5hbm92Zy9leGFtcGxlL3BlcmYuYw",
					"AQAAAAAAAAABAAAAKQgAAAAAAAATCAAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					2,
					"paste",
					null,
					"AgAAABMIAAAAAAAAKQgAAAAAAAAAAAAAKQgAAAAAAAA/CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwgAAAAAAAATCAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "demo"
					},
					"BQAAADkIAAAAAAAAOggAAAAAAAAAAAAAOggAAAAAAAA6CAAAAAAAAAQAAABwZXJmOggAAAAAAAA7CAAAAAAAAAAAAAA7CAAAAAAAADwIAAAAAAAAAAAAADwIAAAAAAAAPQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQgAAAAAAAA9CAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"paste",
					null,
					"AQAAAEUJAAAAAAAAAQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQkAAAAAAABFCQAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "run_example"
					},
					"DAAAAFcJAAAAAAAAWAkAAAAAAAAAAAAAWAkAAAAAAABYCQAAAAAAAAQAAABOYW1lWAkAAAAAAABZCQAAAAAAAAAAAABZCQAAAAAAAFoJAAAAAAAAAAAAAFoJAAAAAAAAWwkAAAAAAAAAAAAAWwkAAAAAAABcCQAAAAAAAAAAAABcCQAAAAAAAF0JAAAAAAAAAAAAAF0JAAAAAAAAXgkAAAAAAAAAAAAAXgkAAAAAAABfCQAAAAAAAAAAAABfCQAAAAAAAGAJAAAAAAAAAAAAAGAJAAAAAAAAYQkAAAAAAAAAAAAAYQkAAAAAAABiCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwkAAAAAAABbCQAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": " COMMAND"
					},
					"CAAAAGIJAAAAAAAAYwkAAAAAAAAAAAAAYwkAAAAAAABkCQAAAAAAAAAAAABkCQAAAAAAAGUJAAAAAAAAAAAAAGUJAAAAAAAAZgkAAAAAAAAAAAAAZgkAAAAAAABnCQAAAAAAAAAAAABnCQAAAAAAAGgJAAAAAAAAAAAAAGgJAAAAAAAAaQkAAAAAAAAAAAAAaQkAAAAAAABqCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYgkAAAAAAABiCQAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGoJAAAAAAAAawkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagkAAAAAAABqCQAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"cut",
					null,
					"AQAAAGsJAAAAAAAAawkAAAAAAAAcAAAAIFtBTExdIFtjb21tYW5kMSBbYXJnczEuLi5dXQ",
					"AQAAAAAAAAABAAAAawkAAAAAAACHCQAAAAAAAP///////+9/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "./"
					},
					"AgAAAGsJAAAAAAAAbAkAAAAAAAAAAAAAbAkAAAAAAABtCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawkAAAAAAABrCQAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "nanovg_examp"
					},
					"DAAAAG0JAAAAAAAAbgkAAAAAAAAAAAAAbgkAAAAAAABvCQAAAAAAAAAAAABvCQAAAAAAAHAJAAAAAAAAAAAAAHAJAAAAAAAAcQkAAAAAAAAAAAAAcQkAAAAAAAByCQAAAAAAAAAAAAByCQAAAAAAAHMJAAAAAAAAAAAAAHMJAAAAAAAAdAkAAAAAAAAAAAAAdAkAAAAAAAB1CQAAAAAAAAAAAAB1CQAAAAAAAHYJAAAAAAAAAAAAAHYJAAAAAAAAdwkAAAAAAAAAAAAAdwkAAAAAAAB4CQAAAAAAAAAAAAB4CQAAAAAAAHkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQkAAAAAAABtCQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "le"
					},
					"AgAAAHkJAAAAAAAAegkAAAAAAAAAAAAAegkAAAAAAAB7CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeQkAAAAAAAB5CQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHsJAAAAAAAAfAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewkAAAAAAAB7CQAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert_completion",
					{
						"completion": "nanovg",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "nanovg"
					},
					"AQAAAHwJAAAAAAAAggkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAkAAAAAAAB8CQAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					6,
					"left_delete",
					null,
					"BgAAAIEJAAAAAAAAgQkAAAAAAAABAAAAZ4AJAAAAAAAAgAkAAAAAAAABAAAAdn8JAAAAAAAAfwkAAAAAAAABAAAAb34JAAAAAAAAfgkAAAAAAAABAAAAbn0JAAAAAAAAfQkAAAAAAAABAAAAYXwJAAAAAAAAfAkAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAggkAAAAAAACCCQAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "\nWORKING_DIRECTORY"
					},
					"EwAAAHwJAAAAAAAAfQkAAAAAAAAAAAAAfQkAAAAAAAB/CQAAAAAAAAAAAAB/CQAAAAAAAIAJAAAAAAAAAAAAAIAJAAAAAAAAgQkAAAAAAAAAAAAAgQkAAAAAAACCCQAAAAAAAAAAAACCCQAAAAAAAIMJAAAAAAAAAAAAAIMJAAAAAAAAhAkAAAAAAAAAAAAAhAkAAAAAAACFCQAAAAAAAAAAAACFCQAAAAAAAIYJAAAAAAAAAAAAAIYJAAAAAAAAhwkAAAAAAAAAAAAAhwkAAAAAAACICQAAAAAAAAAAAACICQAAAAAAAIkJAAAAAAAAAAAAAIkJAAAAAAAAigkAAAAAAAAAAAAAigkAAAAAAACLCQAAAAAAAAAAAACLCQAAAAAAAIwJAAAAAAAAAAAAAIwJAAAAAAAAjQkAAAAAAAAAAAAAjQkAAAAAAACOCQAAAAAAAAAAAACOCQAAAAAAAI8JAAAAAAAAAAAAAI8JAAAAAAAAkAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAkAAAAAAAB8CQAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " $"
					},
					"AgAAAJAJAAAAAAAAkQkAAAAAAAAAAAAAkQkAAAAAAACSCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAkAAAAAAACQCQAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"left_delete",
					null,
					"AQAAAJEJAAAAAAAAkQkAAAAAAAABAAAAJA",
					"AQAAAAAAAAABAAAAkgkAAAAAAACSCQAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "nanovg/example)"
					},
					"DwAAAJEJAAAAAAAAkgkAAAAAAAAAAAAAkgkAAAAAAACTCQAAAAAAAAAAAACTCQAAAAAAAJQJAAAAAAAAAAAAAJQJAAAAAAAAlQkAAAAAAAAAAAAAlQkAAAAAAACWCQAAAAAAAAAAAACWCQAAAAAAAJcJAAAAAAAAAAAAAJcJAAAAAAAAmAkAAAAAAAAAAAAAmAkAAAAAAACZCQAAAAAAAAAAAACZCQAAAAAAAJoJAAAAAAAAAAAAAJoJAAAAAAAAmwkAAAAAAAAAAAAAmwkAAAAAAACcCQAAAAAAAAAAAACcCQAAAAAAAJ0JAAAAAAAAAAAAAJ0JAAAAAAAAngkAAAAAAAAAAAAAngkAAAAAAACfCQAAAAAAAAAAAACfCQAAAAAAAKAJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkQkAAAAAAACRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"left_delete",
					null,
					"AQAAAKAJAAAAAAAAoAkAAAAAAACKAQAACiAgICAgICAgICAgICAgICAgIFtDT01NQU5EIGNvbW1hbmQyIFthcmdzMi4uLl0gLi4uXQogICAgICAgICAgICAgICAgICBbREVQRU5EUyBkZXBlbmQgZGVwZW5kIGRlcGVuZCAuLi4gXQogICAgICAgICAgICAgICAgICBbQllQUk9EVUNUUyBbZmlsZXMuLi5dXQogICAgICAgICAgICAgICAgICBbV09SS0lOR19ESVJFQ1RPUlkgZGlyXQogICAgICAgICAgICAgICAgICBbQ09NTUVOVCBjb21tZW50XQogICAgICAgICAgICAgICAgICBbSk9CX1BPT0wgam9iX3Bvb2xdCiAgICAgICAgICAgICAgICAgIFtWRVJCQVRJTV0gW1VTRVNfVEVSTUlOQUxdCiAgICAgICAgICAgICAgICAgIFtDT01NQU5EX0VYUEFORF9MSVNUU10KICAgICAgICAgICAgICAgICAgW1NPVVJDRVMgc3JjMSBbc3JjMi4uLl1dKQ",
					"AQAAAAAAAAABAAAAoAkAAAAAAAAqCwAAAAAAAAAAAAAA4HVA"
				],
				[
					152,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAKAJAAAAAAAAoQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAkAAAAAAACgCQAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEUJAAAAAAAARgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQkAAAAAAABFCQAAAAAAAAAAAAAAAAAA"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "${CMAKE_CURRENT_SUOR"
					},
					"FAAAAJIJAAAAAAAAkwkAAAAAAAAAAAAAkwkAAAAAAACUCQAAAAAAAAAAAACUCQAAAAAAAJUJAAAAAAAAAAAAAJUJAAAAAAAAlgkAAAAAAAAAAAAAlgkAAAAAAACXCQAAAAAAAAAAAACXCQAAAAAAAJgJAAAAAAAAAAAAAJgJAAAAAAAAmQkAAAAAAAAAAAAAmQkAAAAAAACaCQAAAAAAAAAAAACaCQAAAAAAAJsJAAAAAAAAAAAAAJsJAAAAAAAAnAkAAAAAAAAAAAAAnAkAAAAAAACdCQAAAAAAAAAAAACdCQAAAAAAAJ4JAAAAAAAAAAAAAJ4JAAAAAAAAnwkAAAAAAAAAAAAAnwkAAAAAAACgCQAAAAAAAAAAAACgCQAAAAAAAKEJAAAAAAAAAAAAAKEJAAAAAAAAogkAAAAAAAAAAAAAogkAAAAAAACjCQAAAAAAAAAAAACjCQAAAAAAAKQJAAAAAAAAAAAAAKQJAAAAAAAApQkAAAAAAAAAAAAApQkAAAAAAACmCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgkAAAAAAACSCQAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					3,
					"left_delete",
					null,
					"AwAAAKUJAAAAAAAApQkAAAAAAAABAAAAUqQJAAAAAAAApAkAAAAAAAABAAAAT6MJAAAAAAAAowkAAAAAAAABAAAAVQ",
					"AQAAAAAAAAABAAAApgkAAAAAAACmCQAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "ORUCE_DIR}/"
					},
					"CwAAAKMJAAAAAAAApAkAAAAAAAAAAAAApAkAAAAAAAClCQAAAAAAAAAAAAClCQAAAAAAAKYJAAAAAAAAAAAAAKYJAAAAAAAApwkAAAAAAAAAAAAApwkAAAAAAACoCQAAAAAAAAAAAACoCQAAAAAAAKkJAAAAAAAAAAAAAKkJAAAAAAAAqgkAAAAAAAAAAAAAqgkAAAAAAACrCQAAAAAAAAAAAACrCQAAAAAAAKwJAAAAAAAAAAAAAKwJAAAAAAAArQkAAAAAAAAAAAAArQkAAAAAAACuCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowkAAAAAAACjCQAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					2,
					"left_delete",
					null,
					"AgAAAKUJAAAAAAAApQkAAAAAAAABAAAAVaQJAAAAAAAApAkAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAApgkAAAAAAACmCQAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "UR"
					},
					"AgAAAKQJAAAAAAAApQkAAAAAAAAAAAAApQkAAAAAAACmCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAkAAAAAAACkCQAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"left_delete",
					null,
					"AQAAAGwJAAAAAAAAbAkAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAbQkAAAAAAABtCQAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "${CMAKE_CURRENT_"
					},
					"EAAAAGwJAAAAAAAAbQkAAAAAAAAAAAAAbQkAAAAAAABuCQAAAAAAAAAAAABuCQAAAAAAAG8JAAAAAAAAAAAAAG8JAAAAAAAAcAkAAAAAAAAAAAAAcAkAAAAAAABxCQAAAAAAAAAAAABxCQAAAAAAAHIJAAAAAAAAAAAAAHIJAAAAAAAAcwkAAAAAAAAAAAAAcwkAAAAAAAB0CQAAAAAAAAAAAAB0CQAAAAAAAHUJAAAAAAAAAAAAAHUJAAAAAAAAdgkAAAAAAAAAAAAAdgkAAAAAAAB3CQAAAAAAAAAAAAB3CQAAAAAAAHgJAAAAAAAAAAAAAHgJAAAAAAAAeQkAAAAAAAAAAAAAeQkAAAAAAAB6CQAAAAAAAAAAAAB6CQAAAAAAAHsJAAAAAAAAAAAAAHsJAAAAAAAAfAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAkAAAAAAABsCQAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "BINARY_DIR}"
					},
					"CwAAAHwJAAAAAAAAfQkAAAAAAAAAAAAAfQkAAAAAAAB+CQAAAAAAAAAAAAB+CQAAAAAAAH8JAAAAAAAAAAAAAH8JAAAAAAAAgAkAAAAAAAAAAAAAgAkAAAAAAACBCQAAAAAAAAAAAACBCQAAAAAAAIIJAAAAAAAAAAAAAIIJAAAAAAAAgwkAAAAAAAAAAAAAgwkAAAAAAACECQAAAAAAAAAAAACECQAAAAAAAIUJAAAAAAAAAAAAAIUJAAAAAAAAhgkAAAAAAAAAAAAAhgkAAAAAAACHCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAkAAAAAAAB8CQAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADYCQAAcHJvamVjdChxanMtbmFub3ZnIEMpCgptZXNzYWdlKCJCdWlsZGluZyBwcm9qZWN0IBtbMTszMW0ke1BST0pFQ1RfTkFNRX0bWzBtIikKCnNldChQS0dfQ09ORklHX1VTRV9DTUFLRV9QUkVGSVhfUEFUSCBUUlVFKQoKaW5jbHVkZShGaW5kT3BlbkdMKQppZihOT1QgUEtHX0NPTkZJR19GT1VORCkKICBpbmNsdWRlKEZpbmRQa2dDb25maWcpCmVuZGlmKE5PVCBQS0dfQ09ORklHX0ZPVU5EKQppbmNsdWRlKENoZWNrQ0NvbXBpbGVyRmxhZykKaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvRmluZFF1aWNrSlMuY21ha2UpCmluY2x1ZGUoJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L2NtYWtlL0ZpbmRHTEVXLmNtYWtlKQppbmNsdWRlKCR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9jbWFrZS9GaW5kR0xGVy5jbWFrZSkKaW5jbHVkZSgke0NNQUtFX0NVUlJFTlRfU09VUkNFX0RJUn0vY21ha2UvVXNlTXVsdGlBcmNoLmNtYWtlKQoKY2hlY2tfY19jb21waWxlcl9mbGFnKCItZnZpc2liaWxpdHk9aGlkZGVuIiBWSVNJQklMSVRZX0hJRERFTikKaWYoVklTSUJJTElUWV9ISURERU4pCiAgc2V0KE1PRFVMRV9DT01QSUxFX0ZMQUdTICR7TU9EVUxFX0NPTVBJTEVfRkxBR1N9ICItZnZpc2liaWxpdHk9aGlkZGVuIikKZW5kaWYoVklTSUJJTElUWV9ISURERU4pCgpmaW5kX2dsZXcoKQpmaW5kX2dsZncoKQoKZmluZF9xdWlja2pzKCkKY29uZmlndXJlX3F1aWNranMoKQoKaW5jbHVkZV9kaXJlY3Rvcmllcygke0dMRVdfSU5DTFVERV9ESVJ9ICR7R0xGV19JTkNMVURFX0RJUn0gJHtRVUlDS0pTX0lOQ0xVREVfRElSfSkKbGlua19kaXJlY3Rvcmllcygke0dMRVdfTElCUkFSWV9ESVJ9ICR7R0xGV19MSUJSQVJZX0RJUn0gJHtRVUlDS0pTX0xJQlJBUllfRElSfSkKCmFkZF9saWJyYXJ5KHFqcy1uYW5vdmcgU0hBUkVEIG5hbm92Zy1xanMuYyBuYW5vdmctcWpzLmggJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L25hbm92Zy9zcmMvbmFub3ZnLmMgJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L25hbm92Zy9zcmMvbmFub3ZnLmgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L25hbm92Zy9zcmMvbmFub3ZnX2dsLmgpCgpzZXRfdGFyZ2V0X3Byb3BlcnRpZXMocWpzLW5hbm92ZyBQUk9QRVJUSUVTIE9VVFBVVF9OQU1FIG5hbm92ZyBQUkVGSVggIiIgQ09NUElMRV9GTEFHUyAiJHtNT0RVTEVfQ09NUElMRV9GTEFHU30gLURKU19TSEFSRURfTElCUkFSWSIpCgp0YXJnZXRfaW5jbHVkZV9kaXJlY3RvcmllcyhxanMtbmFub3ZnIFBSSVZBVEUgJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L25hbm92Zy9zcmMgJHtRVUlDS0pTX0lOQ0xVREVfRElSfSkKdGFyZ2V0X2xpbmtfbGlicmFyaWVzKHFqcy1uYW5vdmcgUFJJVkFURSAke0dMRldfTElCUkFSWX0gJHtHTEVXX0xJQlJBUll9IE9wZW5HTDo6R0wgJHtRVUlDS0pTX0xJQlJBUll9KQp0YXJnZXRfY29tcGlsZV9kZWZpbml0aW9ucyhxanMtbmFub3ZnIFBSSVZBVEUgSlNfU0hBUkVEX0xJQlJBUlk9MSBOQU5PVkdfR0xFVz0xIE5BTk9WR19HTDNfSU1QTEVNRU5UQVRJT049MSkKCmlmKE5PVCBDTUFLRV9JTlNUQUxMX0xJQkRJUikKICBzZXQoQ01BS0VfSU5TVEFMTF9MSUJESVIgbGliKQplbmRpZihOT1QgQ01BS0VfSU5TVEFMTF9MSUJESVIpCmlmKE5PVCBRVUlDS0pTX0NfTU9EVUxFX0RJUikKICBzZXQoUVVJQ0tKU19DX01PRFVMRV9ESVIgIiR7Q01BS0VfSU5TVEFMTF9MSUJESVJ9L3F1aWNranMiKQplbmRpZihOT1QgUVVJQ0tKU19DX01PRFVMRV9ESVIpCgppbnN0YWxsKFRBUkdFVFMgcWpzLW5hbm92ZyBERVNUSU5BVElPTiAiJHtRVUlDS0pTX0NfTU9EVUxFX0RJUn0iIFBFUk1JU1NJT05TIE9XTkVSX1JFQUQgT1dORVJfV1JJVEUgT1dORVJfRVhFQ1VURSBHUk9VUF9SRUFEIEdST1VQX0VYRUNVVEUgV09STERfUkVBRCBXT1JMRF9FWEVDVVRFKQoKaW5jbHVkZV9kaXJlY3RvcmllcyhuYW5vdmcvc3JjKQphZGRfZXhlY3V0YWJsZShuYW5vdmdfZXhhbXBsZSBuYW5vdmcvZXhhbXBsZS9leGFtcGxlX2dsMy5jIG5hbm92Zy9leGFtcGxlL3BlcmYuYyBuYW5vdmcvZXhhbXBsZS9kZW1vLmMgJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L25hbm92Zy9zcmMvbmFub3ZnLmMgJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L25hbm92Zy9zcmMvbmFub3ZnLmgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHtDTUFLRV9DVVJSRU5UX1NPVVJDRV9ESVJ9L25hbm92Zy9zcmMvbmFub3ZnX2dsLmgpCnRhcmdldF9saW5rX2xpYnJhcmllcyhuYW5vdmdfZXhhbXBsZSBtICR7R0xGV19MSUJSQVJZfSAke0dMRVdfTElCUkFSWX0gT3BlbkdMOjpHTCkKCmFkZF9jdXN0b21fdGFyZ2V0KHJ1bl9leGFtcGxlIENPTU1BTkQgJHtDTUFLRV9DVVJSRU5UX0JJTkFSWV9ESVJ9L25hbm92Z19leGFtcGxlIAogIFdPUktJTkdfRElSRUNUT1JZICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0VfRElSfS9uYW5vdmcvZXhhbXBsZSkKAAAAAAAAAADVCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhwkAAAAAAACHCQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "#ifndef NANOVG_QJS_H\n#define NANOVG_QJS_H\n\n#include <quickjs.h>\n\n#if defined(_WIN32) || defined(__MINGW32__)\n#define VISIBLE __declspec(dllexport)\n#define HIDDEN\n#else\n#define VISIBLE __attribute__((visibility(\"default\")))\n#define HIDDEN __attribute__((visibility(\"hidden\")))\n#endif\n\n#ifdef JS_SHARED_LIBRARY\n#define JS_INIT_MODULE js_init_module\n#else\n#define JS_INIT_MODULE js_init_module_nanovg\n#endif\n\nstruct NVGcontext;\nvoid js_nanovg_init_with_context(struct NVGcontext* vg);\n\nVISIBLE JSModuleDef* js_init_module_nanovg(JSContext* ctx, const char* module_name);\n\n#endif /* NANOVG_QJS_H */\n",
			"file": "nanovg-qjs.h",
			"file_size": 588,
			"file_write_time": 132896136186625392,
			"settings":
			{
				"buffer_size": 595,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAHYAAAAAAAAAdgAAAAAAAAABAAAAIA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3AAAAAAAAAHcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "(x...)"
					},
					"BgAAAHYAAAAAAAAAdwAAAAAAAAAAAAAAdwAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHkAAAAAAAAAAAAAAHkAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AAAAAAAAAHYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHwAAAAAAAAAfQAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8AAAAAAAAAHwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIsAAAAAAAAAjQAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLAAAAAAAAAIsAAAAAAAAA////////738"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAIwAAAAAAAAAjQAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " __"
					},
					"AwAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAAAAAAAAAI4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "attribute__"
					},
					"CwAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACZAAAAAAAAAAAAAACZAAAAAAAAAJoAAAAAAAAAAAAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRAAAAAAAAAJEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAJwAAAAAAAAAngAAAAAAAAAAAAAAnQAAAAAAAACfAAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACPAAAAAAAAABIAAAAgX19hdHRyaWJ1dGVfXygoKSk",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAAAAAAAAAKAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"paste",
					null,
					"AQAAAI8AAAAAAAAAtQAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPAAAAAAAAAI8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"cut",
					null,
					"AQAAAI4AAAAAAAAAjgAAAAAAAAAnAAAAIF9fYXR0cmlidXRlX18oKHZpc2liaWxpdHkoImRlZmF1bHQiKSkp",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAAAAAAAAALUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"paste",
					null,
					"AQAAAOQAAAAAAAAACwEAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAAAAAAAAAOQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAsBAAAAAAAADAEAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALAQAAAAAAAAsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"paste",
					null,
					"AgAAAPgBAAAAAAAADQIAAAAAAAAAAAAADQIAAAAAAAANAgAAAAAAAA4AAABKU19JTklUX01PRFVMRQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+AEAAAAAAAAGAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "nanovg/example/example_gl3.c",
			"settings":
			{
				"buffer_size": 5283,
				"line_ending": "Unix"
			}
		},
		{
			"file": "nanovg/example/demo.h",
			"settings":
			{
				"buffer_size": 546,
				"line_ending": "Unix"
			}
		},
		{
			"file": "nanovg/example/demo.c",
			"settings":
			{
				"buffer_size": 32500,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "nanovg/src/nanovg_gl.h",
			"settings":
			{
				"buffer_size": 46912,
				"line_ending": "Unix"
			}
		},
		{
			"file": "nanovg/src/nanovg_gl_utils.h",
			"settings":
			{
				"buffer_size": 4807,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "//\n// Copyright (c) 2013 Mikko Mononen memon@inside.org\n//\n// This software is provided 'as-is', without any express or implied\n// warranty.  In no event will the authors be held liable for any damages\n// arising from the use of this software.\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n// 1. The origin of this software must not be misrepresented; you must not\n//    claim that you wrote the original software. If you use this software\n//    in a product, an acknowledgment in the product documentation would be\n//    appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//    misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n//\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n#include <memory.h>\n\n#include \"nanovg.h\"\n#define FONTSTASH_IMPLEMENTATION\n#include \"fontstash.h\"\n\n#ifndef NVG_NO_STB\n#define STB_IMAGE_IMPLEMENTATION\n#include \"stb_image.h\"\n#endif \n\n#ifdef _MSC_VER\n#pragma warning(disable: 4100)  // unreferenced formal parameter\n#pragma warning(disable: 4127)  // conditional expression is constant\n#pragma warning(disable: 4204)  // nonstandard extension used : non-constant aggregate initializer\n#pragma warning(disable: 4706)  // assignment within conditional expression\n#endif\n\n#define NVG_INIT_FONTIMAGE_SIZE  512\n#define NVG_MAX_FONTIMAGE_SIZE   2048\n#define NVG_MAX_FONTIMAGES       4\n\n#define NVG_INIT_COMMANDS_SIZE 256\n#define NVG_INIT_POINTS_SIZE 128\n#define NVG_INIT_PATHS_SIZE 16\n#define NVG_INIT_VERTS_SIZE 256\n#define NVG_MAX_STATES 32\n\n#define NVG_KAPPA90 0.5522847493f\t// Length proportional to radius of a cubic bezier handle for 90deg arcs.\n\n#define NVG_COUNTOF(arr) (sizeof(arr) / sizeof(0[arr]))\n\n\nenum NVGcommands {\n\tNVG_MOVETO = 0,\n\tNVG_LINETO = 1,\n\tNVG_BEZIERTO = 2,\n\tNVG_CLOSE = 3,\n\tNVG_WINDING = 4,\n};\n\nenum NVGpointFlags\n{\n\tNVG_PT_CORNER = 0x01,\n\tNVG_PT_LEFT = 0x02,\n\tNVG_PT_BEVEL = 0x04,\n\tNVG_PR_INNERBEVEL = 0x08,\n};\n\nstruct NVGstate {\n\tNVGcompositeOperationState compositeOperation;\n\tint shapeAntiAlias;\n\tNVGpaint fill;\n\tNVGpaint stroke;\n\tfloat strokeWidth;\n\tfloat miterLimit;\n\tint lineJoin;\n\tint lineCap;\n\tfloat alpha;\n\tfloat xform[6];\n\tNVGscissor scissor;\n\tfloat fontSize;\n\tfloat letterSpacing;\n\tfloat lineHeight;\n\tfloat fontBlur;\n\tint textAlign;\n\tint fontId;\n};\ntypedef struct NVGstate NVGstate;\n\nstruct NVGpoint {\n\tfloat x,y;\n\tfloat dx, dy;\n\tfloat len;\n\tfloat dmx, dmy;\n\tunsigned char flags;\n};\ntypedef struct NVGpoint NVGpoint;\n\nstruct NVGpathCache {\n\tNVGpoint* points;\n\tint npoints;\n\tint cpoints;\n\tNVGpath* paths;\n\tint npaths;\n\tint cpaths;\n\tNVGvertex* verts;\n\tint nverts;\n\tint cverts;\n\tfloat bounds[4];\n};\ntypedef struct NVGpathCache NVGpathCache;\n\nstruct NVGcontext {\n\tNVGparams params;\n\tfloat* commands;\n\tint ccommands;\n\tint ncommands;\n\tfloat commandx, commandy;\n\tNVGstate states[NVG_MAX_STATES];\n\tint nstates;\n\tNVGpathCache* cache;\n\tfloat tessTol;\n\tfloat distTol;\n\tfloat fringeWidth;\n\tfloat devicePxRatio;\n\tstruct FONScontext* fs;\n\tint fontImages[NVG_MAX_FONTIMAGES];\n\tint fontImageIdx;\n\tint drawCallCount;\n\tint fillTriCount;\n\tint strokeTriCount;\n\tint textTriCount;\n};\n\nstatic float nvg__sqrtf(float a) { return sqrtf(a); }\nstatic float nvg__modf(float a, float b) { return fmodf(a, b); }\nstatic float nvg__sinf(float a) { return sinf(a); }\nstatic float nvg__cosf(float a) { return cosf(a); }\nstatic float nvg__tanf(float a) { return tanf(a); }\nstatic float nvg__atan2f(float a,float b) { return atan2f(a, b); }\nstatic float nvg__acosf(float a) { return acosf(a); }\n\nstatic int nvg__mini(int a, int b) { return a < b ? a : b; }\nstatic int nvg__maxi(int a, int b) { return a > b ? a : b; }\nstatic int nvg__clampi(int a, int mn, int mx) { return a < mn ? mn : (a > mx ? mx : a); }\nstatic float nvg__minf(float a, float b) { return a < b ? a : b; }\nstatic float nvg__maxf(float a, float b) { return a > b ? a : b; }\nstatic float nvg__absf(float a) { return a >= 0.0f ? a : -a; }\nstatic float nvg__signf(float a) { return a >= 0.0f ? 1.0f : -1.0f; }\nstatic float nvg__clampf(float a, float mn, float mx) { return a < mn ? mn : (a > mx ? mx : a); }\nstatic float nvg__cross(float dx0, float dy0, float dx1, float dy1) { return dx1*dy0 - dx0*dy1; }\n\nstatic float nvg__normalize(float *x, float* y)\n{\n\tfloat d = nvg__sqrtf((*x)*(*x) + (*y)*(*y));\n\tif (d > 1e-6f) {\n\t\tfloat id = 1.0f / d;\n\t\t*x *= id;\n\t\t*y *= id;\n\t}\n\treturn d;\n}\n\n\nstatic void nvg__deletePathCache(NVGpathCache* c)\n{\n\tif (c == NULL) return;\n\tif (c->points != NULL) free(c->points);\n\tif (c->paths != NULL) free(c->paths);\n\tif (c->verts != NULL) free(c->verts);\n\tfree(c);\n}\n\nstatic NVGpathCache* nvg__allocPathCache(void)\n{\n\tNVGpathCache* c = (NVGpathCache*)malloc(sizeof(NVGpathCache));\n\tif (c == NULL) goto error;\n\tmemset(c, 0, sizeof(NVGpathCache));\n\n\tc->points = (NVGpoint*)malloc(sizeof(NVGpoint)*NVG_INIT_POINTS_SIZE);\n\tif (!c->points) goto error;\n\tc->npoints = 0;\n\tc->cpoints = NVG_INIT_POINTS_SIZE;\n\n\tc->paths = (NVGpath*)malloc(sizeof(NVGpath)*NVG_INIT_PATHS_SIZE);\n\tif (!c->paths) goto error;\n\tc->npaths = 0;\n\tc->cpaths = NVG_INIT_PATHS_SIZE;\n\n\tc->verts = (NVGvertex*)malloc(sizeof(NVGvertex)*NVG_INIT_VERTS_SIZE);\n\tif (!c->verts) goto error;\n\tc->nverts = 0;\n\tc->cverts = NVG_INIT_VERTS_SIZE;\n\n\treturn c;\nerror:\n\tnvg__deletePathCache(c);\n\treturn NULL;\n}\n\nstatic void nvg__setDevicePixelRatio(NVGcontext* ctx, float ratio)\n{\n\tctx->tessTol = 0.25f / ratio;\n\tctx->distTol = 0.01f / ratio;\n\tctx->fringeWidth = 1.0f / ratio;\n\tctx->devicePxRatio = ratio;\n}\n\nstatic NVGcompositeOperationState nvg__compositeOperationState(int op)\n{\n\tint sfactor, dfactor;\n\n\tif (op == NVG_SOURCE_OVER)\n\t{\n\t\tsfactor = NVG_ONE;\n\t\tdfactor = NVG_ONE_MINUS_SRC_ALPHA;\n\t}\n\telse if (op == NVG_SOURCE_IN)\n\t{\n\t\tsfactor = NVG_DST_ALPHA;\n\t\tdfactor = NVG_ZERO;\n\t}\n\telse if (op == NVG_SOURCE_OUT)\n\t{\n\t\tsfactor = NVG_ONE_MINUS_DST_ALPHA;\n\t\tdfactor = NVG_ZERO;\n\t}\n\telse if (op == NVG_ATOP)\n\t{\n\t\tsfactor = NVG_DST_ALPHA;\n\t\tdfactor = NVG_ONE_MINUS_SRC_ALPHA;\n\t}\n\telse if (op == NVG_DESTINATION_OVER)\n\t{\n\t\tsfactor = NVG_ONE_MINUS_DST_ALPHA;\n\t\tdfactor = NVG_ONE;\n\t}\n\telse if (op == NVG_DESTINATION_IN)\n\t{\n\t\tsfactor = NVG_ZERO;\n\t\tdfactor = NVG_SRC_ALPHA;\n\t}\n\telse if (op == NVG_DESTINATION_OUT)\n\t{\n\t\tsfactor = NVG_ZERO;\n\t\tdfactor = NVG_ONE_MINUS_SRC_ALPHA;\n\t}\n\telse if (op == NVG_DESTINATION_ATOP)\n\t{\n\t\tsfactor = NVG_ONE_MINUS_DST_ALPHA;\n\t\tdfactor = NVG_SRC_ALPHA;\n\t}\n\telse if (op == NVG_LIGHTER)\n\t{\n\t\tsfactor = NVG_ONE;\n\t\tdfactor = NVG_ONE;\n\t}\n\telse if (op == NVG_COPY)\n\t{\n\t\tsfactor = NVG_ONE;\n\t\tdfactor = NVG_ZERO;\n\t}\n\telse if (op == NVG_XOR)\n\t{\n\t\tsfactor = NVG_ONE_MINUS_DST_ALPHA;\n\t\tdfactor = NVG_ONE_MINUS_SRC_ALPHA;\n\t}\n\telse\n\t{\n\t\tsfactor = NVG_ONE;\n\t\tdfactor = NVG_ZERO;\n\t}\n\n\tNVGcompositeOperationState state;\n\tstate.srcRGB = sfactor;\n\tstate.dstRGB = dfactor;\n\tstate.srcAlpha = sfactor;\n\tstate.dstAlpha = dfactor;\n\treturn state;\n}\n\nstatic NVGstate* nvg__getState(NVGcontext* ctx)\n{\n\treturn &ctx->states[ctx->nstates-1];\n}\n\nNVGcontext* nvgCreateInternal(NVGparams* params)\n{\n\tFONSparams fontParams;\n\tNVGcontext* ctx = (NVGcontext*)malloc(sizeof(NVGcontext));\n\tint i;\n\tif (ctx == NULL) goto error;\n\tmemset(ctx, 0, sizeof(NVGcontext));\n\n\tctx->params = *params;\n\tfor (i = 0; i < NVG_MAX_FONTIMAGES; i++)\n\t\tctx->fontImages[i] = 0;\n\n\tctx->commands = (float*)malloc(sizeof(float)*NVG_INIT_COMMANDS_SIZE);\n\tif (!ctx->commands) goto error;\n\tctx->ncommands = 0;\n\tctx->ccommands = NVG_INIT_COMMANDS_SIZE;\n\n\tctx->cache = nvg__allocPathCache();\n\tif (ctx->cache == NULL) goto error;\n\n\tnvgSave(ctx);\n\tnvgReset(ctx);\n\n\tnvg__setDevicePixelRatio(ctx, 1.0f);\n\n\tif (ctx->params.renderCreate(ctx->params.userPtr) == 0) goto error;\n\n\t// Init font rendering\n\tmemset(&fontParams, 0, sizeof(fontParams));\n\tfontParams.width = NVG_INIT_FONTIMAGE_SIZE;\n\tfontParams.height = NVG_INIT_FONTIMAGE_SIZE;\n\tfontParams.flags = FONS_ZERO_TOPLEFT;\n\tfontParams.renderCreate = NULL;\n\tfontParams.renderUpdate = NULL;\n\tfontParams.renderDraw = NULL;\n\tfontParams.renderDelete = NULL;\n\tfontParams.userPtr = NULL;\n\tctx->fs = fonsCreateInternal(&fontParams);\n\tif (ctx->fs == NULL) goto error;\n\n\t// Create font texture\n\tctx->fontImages[0] = ctx->params.renderCreateTexture(ctx->params.userPtr, NVG_TEXTURE_ALPHA, fontParams.width, fontParams.height, 0, NULL);\n\tif (ctx->fontImages[0] == 0) goto error;\n\tctx->fontImageIdx = 0;\n\n\treturn ctx;\n\nerror:\n\tnvgDeleteInternal(ctx);\n\treturn 0;\n}\n\nNVGparams* nvgInternalParams(NVGcontext* ctx)\n{\n    return &ctx->params;\n}\n\nvoid nvgDeleteInternal(NVGcontext* ctx)\n{\n\tint i;\n\tif (ctx == NULL) return;\n\tif (ctx->commands != NULL) free(ctx->commands);\n\tif (ctx->cache != NULL) nvg__deletePathCache(ctx->cache);\n\n\tif (ctx->fs)\n\t\tfonsDeleteInternal(ctx->fs);\n\n\tfor (i = 0; i < NVG_MAX_FONTIMAGES; i++) {\n\t\tif (ctx->fontImages[i] != 0) {\n\t\t\tnvgDeleteImage(ctx, ctx->fontImages[i]);\n\t\t\tctx->fontImages[i] = 0;\n\t\t}\n\t}\n\n\tif (ctx->params.renderDelete != NULL)\n\t\tctx->params.renderDelete(ctx->params.userPtr);\n\n\tfree(ctx);\n}\n\nvoid nvgBeginFrame(NVGcontext* ctx, float windowWidth, float windowHeight, float devicePixelRatio)\n{\n/*\tprintf(\"Tris: draws:%d  fill:%d  stroke:%d  text:%d  TOT:%d\\n\",\n\t\tctx->drawCallCount, ctx->fillTriCount, ctx->strokeTriCount, ctx->textTriCount,\n\t\tctx->fillTriCount+ctx->strokeTriCount+ctx->textTriCount);*/\n\n\tctx->nstates = 0;\n\tnvgSave(ctx);\n\tnvgReset(ctx);\n\n\tnvg__setDevicePixelRatio(ctx, devicePixelRatio);\n\n\tctx->params.renderViewport(ctx->params.userPtr, windowWidth, windowHeight, devicePixelRatio);\n\n\tctx->drawCallCount = 0;\n\tctx->fillTriCount = 0;\n\tctx->strokeTriCount = 0;\n\tctx->textTriCount = 0;\n}\n\nvoid nvgCancelFrame(NVGcontext* ctx)\n{\n\tctx->params.renderCancel(ctx->params.userPtr);\n}\n\nvoid nvgEndFrame(NVGcontext* ctx)\n{\n\tctx->params.renderFlush(ctx->params.userPtr);\n\tif (ctx->fontImageIdx != 0) {\n\t\tint fontImage = ctx->fontImages[ctx->fontImageIdx];\n\t\tint i, j, iw, ih;\n\t\t// delete images that smaller than current one\n\t\tif (fontImage == 0)\n\t\t\treturn;\n\t\tnvgImageSize(ctx, fontImage, &iw, &ih);\n\t\tfor (i = j = 0; i < ctx->fontImageIdx; i++) {\n\t\t\tif (ctx->fontImages[i] != 0) {\n\t\t\t\tint nw, nh;\n\t\t\t\tnvgImageSize(ctx, ctx->fontImages[i], &nw, &nh);\n\t\t\t\tif (nw < iw || nh < ih)\n\t\t\t\t\tnvgDeleteImage(ctx, ctx->fontImages[i]);\n\t\t\t\telse\n\t\t\t\t\tctx->fontImages[j++] = ctx->fontImages[i];\n\t\t\t}\n\t\t}\n\t\t// make current font image to first\n\t\tctx->fontImages[j++] = ctx->fontImages[0];\n\t\tctx->fontImages[0] = fontImage;\n\t\tctx->fontImageIdx = 0;\n\t\t// clear all images after j\n\t\tfor (i = j; i < NVG_MAX_FONTIMAGES; i++)\n\t\t\tctx->fontImages[i] = 0;\n\t}\n}\n\nNVGcolor nvgRGB(unsigned char r, unsigned char g, unsigned char b)\n{\n\treturn nvgRGBA(r,g,b,255);\n}\n\nNVGcolor nvgRGBf(float r, float g, float b)\n{\n\treturn nvgRGBAf(r,g,b,1.0f);\n}\n\nNVGcolor nvgRGBA(unsigned char r, unsigned char g, unsigned char b, unsigned char a)\n{\n\tNVGcolor color;\n\t// Use longer initialization to suppress warning.\n\tcolor.r = r / 255.0f;\n\tcolor.g = g / 255.0f;\n\tcolor.b = b / 255.0f;\n\tcolor.a = a / 255.0f;\n\treturn color;\n}\n\nNVGcolor nvgRGBAf(float r, float g, float b, float a)\n{\n\tNVGcolor color;\n\t// Use longer initialization to suppress warning.\n\tcolor.r = r;\n\tcolor.g = g;\n\tcolor.b = b;\n\tcolor.a = a;\n\treturn color;\n}\n\nNVGcolor nvgTransRGBA(NVGcolor c, unsigned char a)\n{\n\tc.a = a / 255.0f;\n\treturn c;\n}\n\nNVGcolor nvgTransRGBAf(NVGcolor c, float a)\n{\n\tc.a = a;\n\treturn c;\n}\n\nNVGcolor nvgLerpRGBA(NVGcolor c0, NVGcolor c1, float u)\n{\n\tint i;\n\tfloat oneminu;\n\tNVGcolor cint = {{{0}}};\n\n\tu = nvg__clampf(u, 0.0f, 1.0f);\n\toneminu = 1.0f - u;\n\tfor( i = 0; i <4; i++ )\n\t{\n\t\tcint.rgba[i] = c0.rgba[i] * oneminu + c1.rgba[i] * u;\n\t}\n\n\treturn cint;\n}\n\nNVGcolor nvgHSL(float h, float s, float l)\n{\n\treturn nvgHSLA(h,s,l,255);\n}\n\nstatic float nvg__hue(float h, float m1, float m2)\n{\n\tif (h < 0) h += 1;\n\tif (h > 1) h -= 1;\n\tif (h < 1.0f/6.0f)\n\t\treturn m1 + (m2 - m1) * h * 6.0f;\n\telse if (h < 3.0f/6.0f)\n\t\treturn m2;\n\telse if (h < 4.0f/6.0f)\n\t\treturn m1 + (m2 - m1) * (2.0f/3.0f - h) * 6.0f;\n\treturn m1;\n}\n\nNVGcolor nvgHSLA(float h, float s, float l, unsigned char a)\n{\n\tfloat m1, m2;\n\tNVGcolor col;\n\th = nvg__modf(h, 1.0f);\n\tif (h < 0.0f) h += 1.0f;\n\ts = nvg__clampf(s, 0.0f, 1.0f);\n\tl = nvg__clampf(l, 0.0f, 1.0f);\n\tm2 = l <= 0.5f ? (l * (1 + s)) : (l + s - l * s);\n\tm1 = 2 * l - m2;\n\tcol.r = nvg__clampf(nvg__hue(h + 1.0f/3.0f, m1, m2), 0.0f, 1.0f);\n\tcol.g = nvg__clampf(nvg__hue(h, m1, m2), 0.0f, 1.0f);\n\tcol.b = nvg__clampf(nvg__hue(h - 1.0f/3.0f, m1, m2), 0.0f, 1.0f);\n\tcol.a = a/255.0f;\n\treturn col;\n}\n\nvoid nvgTransformIdentity(float* t)\n{\n\tt[0] = 1.0f; t[1] = 0.0f;\n\tt[2] = 0.0f; t[3] = 1.0f;\n\tt[4] = 0.0f; t[5] = 0.0f;\n}\n\nvoid nvgTransformTranslate(float* t, float tx, float ty)\n{\n\tt[0] = 1.0f; t[1] = 0.0f;\n\tt[2] = 0.0f; t[3] = 1.0f;\n\tt[4] = tx; t[5] = ty;\n}\n\nvoid nvgTransformScale(float* t, float sx, float sy)\n{\n\tt[0] = sx; t[1] = 0.0f;\n\tt[2] = 0.0f; t[3] = sy;\n\tt[4] = 0.0f; t[5] = 0.0f;\n}\n\nvoid nvgTransformRotate(float* t, float a)\n{\n\tfloat cs = nvg__cosf(a), sn = nvg__sinf(a);\n\tt[0] = cs; t[1] = sn;\n\tt[2] = -sn; t[3] = cs;\n\tt[4] = 0.0f; t[5] = 0.0f;\n}\n\nvoid nvgTransformSkewX(float* t, float a)\n{\n\tt[0] = 1.0f; t[1] = 0.0f;\n\tt[2] = nvg__tanf(a); t[3] = 1.0f;\n\tt[4] = 0.0f; t[5] = 0.0f;\n}\n\nvoid nvgTransformSkewY(float* t, float a)\n{\n\tt[0] = 1.0f; t[1] = nvg__tanf(a);\n\tt[2] = 0.0f; t[3] = 1.0f;\n\tt[4] = 0.0f; t[5] = 0.0f;\n}\n\nvoid nvgTransformMultiply(float* t, const float* s)\n{\n\tfloat t0 = t[0] * s[0] + t[1] * s[2];\n\tfloat t2 = t[2] * s[0] + t[3] * s[2];\n\tfloat t4 = t[4] * s[0] + t[5] * s[2] + s[4];\n\tt[1] = t[0] * s[1] + t[1] * s[3];\n\tt[3] = t[2] * s[1] + t[3] * s[3];\n\tt[5] = t[4] * s[1] + t[5] * s[3] + s[5];\n\tt[0] = t0;\n\tt[2] = t2;\n\tt[4] = t4;\n}\n\nvoid nvgTransformPremultiply(float* t, const float* s)\n{\n\tfloat s2[6];\n\tmemcpy(s2, s, sizeof(float)*6);\n\tnvgTransformMultiply(s2, t);\n\tmemcpy(t, s2, sizeof(float)*6);\n}\n\nint nvgTransformInverse(float* inv, const float* t)\n{\n\tdouble invdet, det = (double)t[0] * t[3] - (double)t[2] * t[1];\n\tif (det > -1e-6 && det < 1e-6) {\n\t\tnvgTransformIdentity(inv);\n\t\treturn 0;\n\t}\n\tinvdet = 1.0 / det;\n\tinv[0] = (float)(t[3] * invdet);\n\tinv[2] = (float)(-t[2] * invdet);\n\tinv[4] = (float)(((double)t[2] * t[5] - (double)t[3] * t[4]) * invdet);\n\tinv[1] = (float)(-t[1] * invdet);\n\tinv[3] = (float)(t[0] * invdet);\n\tinv[5] = (float)(((double)t[1] * t[4] - (double)t[0] * t[5]) * invdet);\n\treturn 1;\n}\n\nvoid nvgTransformPoint(float* dx, float* dy, const float* t, float sx, float sy)\n{\n\t*dx = sx*t[0] + sy*t[2] + t[4];\n\t*dy = sx*t[1] + sy*t[3] + t[5];\n}\n\nfloat nvgDegToRad(float deg)\n{\n\treturn deg / 180.0f * NVG_PI;\n}\n\nfloat nvgRadToDeg(float rad)\n{\n\treturn rad / NVG_PI * 180.0f;\n}\n\nstatic void nvg__setPaintColor(NVGpaint* p, NVGcolor color)\n{\n\tmemset(p, 0, sizeof(*p));\n\tnvgTransformIdentity(p->xform);\n\tp->radius = 0.0f;\n\tp->feather = 1.0f;\n\tp->innerColor = color;\n\tp->outerColor = color;\n}\n\n\n// State handling\nvoid nvgSave(NVGcontext* ctx)\n{\n\tif (ctx->nstates >= NVG_MAX_STATES)\n\t\treturn;\n\tif (ctx->nstates > 0)\n\t\tmemcpy(&ctx->states[ctx->nstates], &ctx->states[ctx->nstates-1], sizeof(NVGstate));\n\tctx->nstates++;\n}\n\nvoid nvgRestore(NVGcontext* ctx)\n{\n\tif (ctx->nstates <= 1)\n\t\treturn;\n\tctx->nstates--;\n}\n\nvoid nvgReset(NVGcontext* ctx)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tmemset(state, 0, sizeof(*state));\n\n\tnvg__setPaintColor(&state->fill, nvgRGBA(255,255,255,255));\n\tnvg__setPaintColor(&state->stroke, nvgRGBA(0,0,0,255));\n\tstate->compositeOperation = nvg__compositeOperationState(NVG_SOURCE_OVER);\n\tstate->shapeAntiAlias = 1;\n\tstate->strokeWidth = 1.0f;\n\tstate->miterLimit = 10.0f;\n\tstate->lineCap = NVG_BUTT;\n\tstate->lineJoin = NVG_MITER;\n\tstate->alpha = 1.0f;\n\tnvgTransformIdentity(state->xform);\n\n\tstate->scissor.extent[0] = -1.0f;\n\tstate->scissor.extent[1] = -1.0f;\n\n\tstate->fontSize = 16.0f;\n\tstate->letterSpacing = 0.0f;\n\tstate->lineHeight = 1.0f;\n\tstate->fontBlur = 0.0f;\n\tstate->textAlign = NVG_ALIGN_LEFT | NVG_ALIGN_BASELINE;\n\tstate->fontId = 0;\n}\n\n// State setting\nvoid nvgShapeAntiAlias(NVGcontext* ctx, int enabled)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->shapeAntiAlias = enabled;\n}\n\nvoid nvgStrokeWidth(NVGcontext* ctx, float width)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->strokeWidth = width;\n}\n\nvoid nvgMiterLimit(NVGcontext* ctx, float limit)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->miterLimit = limit;\n}\n\nvoid nvgLineCap(NVGcontext* ctx, int cap)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->lineCap = cap;\n}\n\nvoid nvgLineJoin(NVGcontext* ctx, int join)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->lineJoin = join;\n}\n\nvoid nvgGlobalAlpha(NVGcontext* ctx, float alpha)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->alpha = alpha;\n}\n\nvoid nvgTransform(NVGcontext* ctx, float a, float b, float c, float d, float e, float f)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tfloat t[6] = { a, b, c, d, e, f };\n\tnvgTransformPremultiply(state->xform, t);\n}\n\nvoid nvgResetTransform(NVGcontext* ctx)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tnvgTransformIdentity(state->xform);\n}\n\nvoid nvgTranslate(NVGcontext* ctx, float x, float y)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tfloat t[6];\n\tnvgTransformTranslate(t, x,y);\n\tnvgTransformPremultiply(state->xform, t);\n}\n\nvoid nvgRotate(NVGcontext* ctx, float angle)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tfloat t[6];\n\tnvgTransformRotate(t, angle);\n\tnvgTransformPremultiply(state->xform, t);\n}\n\nvoid nvgSkewX(NVGcontext* ctx, float angle)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tfloat t[6];\n\tnvgTransformSkewX(t, angle);\n\tnvgTransformPremultiply(state->xform, t);\n}\n\nvoid nvgSkewY(NVGcontext* ctx, float angle)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tfloat t[6];\n\tnvgTransformSkewY(t, angle);\n\tnvgTransformPremultiply(state->xform, t);\n}\n\nvoid nvgScale(NVGcontext* ctx, float x, float y)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tfloat t[6];\n\tnvgTransformScale(t, x,y);\n\tnvgTransformPremultiply(state->xform, t);\n}\n\nvoid nvgCurrentTransform(NVGcontext* ctx, float* xform)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tif (xform == NULL) return;\n\tmemcpy(xform, state->xform, sizeof(float)*6);\n}\n\nvoid nvgStrokeColor(NVGcontext* ctx, NVGcolor color)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tnvg__setPaintColor(&state->stroke, color);\n}\n\nvoid nvgStrokePaint(NVGcontext* ctx, NVGpaint paint)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->stroke = paint;\n\tnvgTransformMultiply(state->stroke.xform, state->xform);\n}\n\nvoid nvgFillColor(NVGcontext* ctx, NVGcolor color)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tnvg__setPaintColor(&state->fill, color);\n}\n\nvoid nvgFillPaint(NVGcontext* ctx, NVGpaint paint)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->fill = paint;\n\tnvgTransformMultiply(state->fill.xform, state->xform);\n}\n\n#ifndef NVG_NO_STB\nint nvgCreateImage(NVGcontext* ctx, const char* filename, int imageFlags)\n{\n\tint w, h, n, image;\n\tunsigned char* img;\n\tstbi_set_unpremultiply_on_load(1);\n\tstbi_convert_iphone_png_to_rgb(1);\n\timg = stbi_load(filename, &w, &h, &n, 4);\n\tif (img == NULL) {\n//\t\tprintf(\"Failed to load %s - %s\\n\", filename, stbi_failure_reason());\n\t\treturn 0;\n\t}\n\timage = nvgCreateImageRGBA(ctx, w, h, imageFlags, img);\n\tstbi_image_free(img);\n\treturn image;\n}\n\nint nvgCreateImageMem(NVGcontext* ctx, int imageFlags, unsigned char* data, int ndata)\n{\n\tint w, h, n, image;\n\tunsigned char* img = stbi_load_from_memory(data, ndata, &w, &h, &n, 4);\n\tif (img == NULL) {\n//\t\tprintf(\"Failed to load %s - %s\\n\", filename, stbi_failure_reason());\n\t\treturn 0;\n\t}\n\timage = nvgCreateImageRGBA(ctx, w, h, imageFlags, img);\n\tstbi_image_free(img);\n\treturn image;\n}\n#endif\n\nint nvgCreateImageRGBA(NVGcontext* ctx, int w, int h, int imageFlags, const unsigned char* data)\n{\n\treturn ctx->params.renderCreateTexture(ctx->params.userPtr, NVG_TEXTURE_RGBA, w, h, imageFlags, data);\n}\n\nvoid nvgUpdateImage(NVGcontext* ctx, int image, const unsigned char* data)\n{\n\tint w, h;\n\tctx->params.renderGetTextureSize(ctx->params.userPtr, image, &w, &h);\n\tctx->params.renderUpdateTexture(ctx->params.userPtr, image, 0,0, w,h, data);\n}\n\nvoid nvgImageSize(NVGcontext* ctx, int image, int* w, int* h)\n{\n\tctx->params.renderGetTextureSize(ctx->params.userPtr, image, w, h);\n}\n\nvoid nvgDeleteImage(NVGcontext* ctx, int image)\n{\n\tctx->params.renderDeleteTexture(ctx->params.userPtr, image);\n}\n\nNVGpaint nvgLinearGradient(NVGcontext* ctx,\n\t\t\t\t\t\t\t\t  float sx, float sy, float ex, float ey,\n\t\t\t\t\t\t\t\t  NVGcolor icol, NVGcolor ocol)\n{\n\tNVGpaint p;\n\tfloat dx, dy, d;\n\tconst float large = 1e5;\n\tNVG_NOTUSED(ctx);\n\tmemset(&p, 0, sizeof(p));\n\n\t// Calculate transform aligned to the line\n\tdx = ex - sx;\n\tdy = ey - sy;\n\td = sqrtf(dx*dx + dy*dy);\n\tif (d > 0.0001f) {\n\t\tdx /= d;\n\t\tdy /= d;\n\t} else {\n\t\tdx = 0;\n\t\tdy = 1;\n\t}\n\n\tp.xform[0] = dy; p.xform[1] = -dx;\n\tp.xform[2] = dx; p.xform[3] = dy;\n\tp.xform[4] = sx - dx*large; p.xform[5] = sy - dy*large;\n\n\tp.extent[0] = large;\n\tp.extent[1] = large + d*0.5f;\n\n\tp.radius = 0.0f;\n\n\tp.feather = nvg__maxf(1.0f, d);\n\n\tp.innerColor = icol;\n\tp.outerColor = ocol;\n\n\treturn p;\n}\n\nNVGpaint nvgRadialGradient(NVGcontext* ctx,\n\t\t\t\t\t\t\t\t  float cx, float cy, float inr, float outr,\n\t\t\t\t\t\t\t\t  NVGcolor icol, NVGcolor ocol)\n{\n\tNVGpaint p;\n\tfloat r = (inr+outr)*0.5f;\n\tfloat f = (outr-inr);\n\tNVG_NOTUSED(ctx);\n\tmemset(&p, 0, sizeof(p));\n\n\tnvgTransformIdentity(p.xform);\n\tp.xform[4] = cx;\n\tp.xform[5] = cy;\n\n\tp.extent[0] = r;\n\tp.extent[1] = r;\n\n\tp.radius = r;\n\n\tp.feather = nvg__maxf(1.0f, f);\n\n\tp.innerColor = icol;\n\tp.outerColor = ocol;\n\n\treturn p;\n}\n\nNVGpaint nvgBoxGradient(NVGcontext* ctx,\n\t\t\t\t\t\t\t   float x, float y, float w, float h, float r, float f,\n\t\t\t\t\t\t\t   NVGcolor icol, NVGcolor ocol)\n{\n\tNVGpaint p;\n\tNVG_NOTUSED(ctx);\n\tmemset(&p, 0, sizeof(p));\n\n\tnvgTransformIdentity(p.xform);\n\tp.xform[4] = x+w*0.5f;\n\tp.xform[5] = y+h*0.5f;\n\n\tp.extent[0] = w*0.5f;\n\tp.extent[1] = h*0.5f;\n\n\tp.radius = r;\n\n\tp.feather = nvg__maxf(1.0f, f);\n\n\tp.innerColor = icol;\n\tp.outerColor = ocol;\n\n\treturn p;\n}\n\n\nNVGpaint nvgImagePattern(NVGcontext* ctx,\n\t\t\t\t\t\t\t\tfloat cx, float cy, float w, float h, float angle,\n\t\t\t\t\t\t\t\tint image, float alpha)\n{\n\tNVGpaint p;\n\tNVG_NOTUSED(ctx);\n\tmemset(&p, 0, sizeof(p));\n\n\tnvgTransformRotate(p.xform, angle);\n\tp.xform[4] = cx;\n\tp.xform[5] = cy;\n\n\tp.extent[0] = w;\n\tp.extent[1] = h;\n\n\tp.image = image;\n\n\tp.innerColor = p.outerColor = nvgRGBAf(1,1,1,alpha);\n\n\treturn p;\n}\n\n// Scissoring\nvoid nvgScissor(NVGcontext* ctx, float x, float y, float w, float h)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\n\tw = nvg__maxf(0.0f, w);\n\th = nvg__maxf(0.0f, h);\n\n\tnvgTransformIdentity(state->scissor.xform);\n\tstate->scissor.xform[4] = x+w*0.5f;\n\tstate->scissor.xform[5] = y+h*0.5f;\n\tnvgTransformMultiply(state->scissor.xform, state->xform);\n\n\tstate->scissor.extent[0] = w*0.5f;\n\tstate->scissor.extent[1] = h*0.5f;\n}\n\nstatic void nvg__isectRects(float* dst,\n\t\t\t\t\t\t\tfloat ax, float ay, float aw, float ah,\n\t\t\t\t\t\t\tfloat bx, float by, float bw, float bh)\n{\n\tfloat minx = nvg__maxf(ax, bx);\n\tfloat miny = nvg__maxf(ay, by);\n\tfloat maxx = nvg__minf(ax+aw, bx+bw);\n\tfloat maxy = nvg__minf(ay+ah, by+bh);\n\tdst[0] = minx;\n\tdst[1] = miny;\n\tdst[2] = nvg__maxf(0.0f, maxx - minx);\n\tdst[3] = nvg__maxf(0.0f, maxy - miny);\n}\n\nvoid nvgIntersectScissor(NVGcontext* ctx, float x, float y, float w, float h)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tfloat pxform[6], invxorm[6];\n\tfloat rect[4];\n\tfloat ex, ey, tex, tey;\n\n\t// If no previous scissor has been set, set the scissor as current scissor.\n\tif (state->scissor.extent[0] < 0) {\n\t\tnvgScissor(ctx, x, y, w, h);\n\t\treturn;\n\t}\n\n\t// Transform the current scissor rect into current transform space.\n\t// If there is difference in rotation, this will be approximation.\n\tmemcpy(pxform, state->scissor.xform, sizeof(float)*6);\n\tex = state->scissor.extent[0];\n\tey = state->scissor.extent[1];\n\tnvgTransformInverse(invxorm, state->xform);\n\tnvgTransformMultiply(pxform, invxorm);\n\ttex = ex*nvg__absf(pxform[0]) + ey*nvg__absf(pxform[2]);\n\ttey = ex*nvg__absf(pxform[1]) + ey*nvg__absf(pxform[3]);\n\n\t// Intersect rects.\n\tnvg__isectRects(rect, pxform[4]-tex,pxform[5]-tey,tex*2,tey*2, x,y,w,h);\n\n\tnvgScissor(ctx, rect[0], rect[1], rect[2], rect[3]);\n}\n\nvoid nvgResetScissor(NVGcontext* ctx)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tmemset(state->scissor.xform, 0, sizeof(state->scissor.xform));\n\tstate->scissor.extent[0] = -1.0f;\n\tstate->scissor.extent[1] = -1.0f;\n}\n\n// Global composite operation.\nvoid nvgGlobalCompositeOperation(NVGcontext* ctx, int op)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->compositeOperation = nvg__compositeOperationState(op);\n}\n\nvoid nvgGlobalCompositeBlendFunc(NVGcontext* ctx, int sfactor, int dfactor)\n{\n\tnvgGlobalCompositeBlendFuncSeparate(ctx, sfactor, dfactor, sfactor, dfactor);\n}\n\nvoid nvgGlobalCompositeBlendFuncSeparate(NVGcontext* ctx, int srcRGB, int dstRGB, int srcAlpha, int dstAlpha)\n{\n\tNVGcompositeOperationState op;\n\top.srcRGB = srcRGB;\n\top.dstRGB = dstRGB;\n\top.srcAlpha = srcAlpha;\n\top.dstAlpha = dstAlpha;\n\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->compositeOperation = op;\n}\n\nstatic int nvg__ptEquals(float x1, float y1, float x2, float y2, float tol)\n{\n\tfloat dx = x2 - x1;\n\tfloat dy = y2 - y1;\n\treturn dx*dx + dy*dy < tol*tol;\n}\n\nstatic float nvg__distPtSeg(float x, float y, float px, float py, float qx, float qy)\n{\n\tfloat pqx, pqy, dx, dy, d, t;\n\tpqx = qx-px;\n\tpqy = qy-py;\n\tdx = x-px;\n\tdy = y-py;\n\td = pqx*pqx + pqy*pqy;\n\tt = pqx*dx + pqy*dy;\n\tif (d > 0) t /= d;\n\tif (t < 0) t = 0;\n\telse if (t > 1) t = 1;\n\tdx = px + t*pqx - x;\n\tdy = py + t*pqy - y;\n\treturn dx*dx + dy*dy;\n}\n\nstatic void nvg__appendCommands(NVGcontext* ctx, float* vals, int nvals)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tint i;\n\n\tif (ctx->ncommands+nvals > ctx->ccommands) {\n\t\tfloat* commands;\n\t\tint ccommands = ctx->ncommands+nvals + ctx->ccommands/2;\n\t\tcommands = (float*)realloc(ctx->commands, sizeof(float)*ccommands);\n\t\tif (commands == NULL) return;\n\t\tctx->commands = commands;\n\t\tctx->ccommands = ccommands;\n\t}\n\n\tif ((int)vals[0] != NVG_CLOSE && (int)vals[0] != NVG_WINDING) {\n\t\tctx->commandx = vals[nvals-2];\n\t\tctx->commandy = vals[nvals-1];\n\t}\n\n\t// transform commands\n\ti = 0;\n\twhile (i < nvals) {\n\t\tint cmd = (int)vals[i];\n\t\tswitch (cmd) {\n\t\tcase NVG_MOVETO:\n\t\t\tnvgTransformPoint(&vals[i+1],&vals[i+2], state->xform, vals[i+1],vals[i+2]);\n\t\t\ti += 3;\n\t\t\tbreak;\n\t\tcase NVG_LINETO:\n\t\t\tnvgTransformPoint(&vals[i+1],&vals[i+2], state->xform, vals[i+1],vals[i+2]);\n\t\t\ti += 3;\n\t\t\tbreak;\n\t\tcase NVG_BEZIERTO:\n\t\t\tnvgTransformPoint(&vals[i+1],&vals[i+2], state->xform, vals[i+1],vals[i+2]);\n\t\t\tnvgTransformPoint(&vals[i+3],&vals[i+4], state->xform, vals[i+3],vals[i+4]);\n\t\t\tnvgTransformPoint(&vals[i+5],&vals[i+6], state->xform, vals[i+5],vals[i+6]);\n\t\t\ti += 7;\n\t\t\tbreak;\n\t\tcase NVG_CLOSE:\n\t\t\ti++;\n\t\t\tbreak;\n\t\tcase NVG_WINDING:\n\t\t\ti += 2;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ti++;\n\t\t}\n\t}\n\n\tmemcpy(&ctx->commands[ctx->ncommands], vals, nvals*sizeof(float));\n\n\tctx->ncommands += nvals;\n}\n\n\nstatic void nvg__clearPathCache(NVGcontext* ctx)\n{\n\tctx->cache->npoints = 0;\n\tctx->cache->npaths = 0;\n}\n\nstatic NVGpath* nvg__lastPath(NVGcontext* ctx)\n{\n\tif (ctx->cache->npaths > 0)\n\t\treturn &ctx->cache->paths[ctx->cache->npaths-1];\n\treturn NULL;\n}\n\nstatic void nvg__addPath(NVGcontext* ctx)\n{\n\tNVGpath* path;\n\tif (ctx->cache->npaths+1 > ctx->cache->cpaths) {\n\t\tNVGpath* paths;\n\t\tint cpaths = ctx->cache->npaths+1 + ctx->cache->cpaths/2;\n\t\tpaths = (NVGpath*)realloc(ctx->cache->paths, sizeof(NVGpath)*cpaths);\n\t\tif (paths == NULL) return;\n\t\tctx->cache->paths = paths;\n\t\tctx->cache->cpaths = cpaths;\n\t}\n\tpath = &ctx->cache->paths[ctx->cache->npaths];\n\tmemset(path, 0, sizeof(*path));\n\tpath->first = ctx->cache->npoints;\n\tpath->winding = NVG_CCW;\n\n\tctx->cache->npaths++;\n}\n\nstatic NVGpoint* nvg__lastPoint(NVGcontext* ctx)\n{\n\tif (ctx->cache->npoints > 0)\n\t\treturn &ctx->cache->points[ctx->cache->npoints-1];\n\treturn NULL;\n}\n\nstatic void nvg__addPoint(NVGcontext* ctx, float x, float y, int flags)\n{\n\tNVGpath* path = nvg__lastPath(ctx);\n\tNVGpoint* pt;\n\tif (path == NULL) return;\n\n\tif (path->count > 0 && ctx->cache->npoints > 0) {\n\t\tpt = nvg__lastPoint(ctx);\n\t\tif (nvg__ptEquals(pt->x,pt->y, x,y, ctx->distTol)) {\n\t\t\tpt->flags |= flags;\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (ctx->cache->npoints+1 > ctx->cache->cpoints) {\n\t\tNVGpoint* points;\n\t\tint cpoints = ctx->cache->npoints+1 + ctx->cache->cpoints/2;\n\t\tpoints = (NVGpoint*)realloc(ctx->cache->points, sizeof(NVGpoint)*cpoints);\n\t\tif (points == NULL) return;\n\t\tctx->cache->points = points;\n\t\tctx->cache->cpoints = cpoints;\n\t}\n\n\tpt = &ctx->cache->points[ctx->cache->npoints];\n\tmemset(pt, 0, sizeof(*pt));\n\tpt->x = x;\n\tpt->y = y;\n\tpt->flags = (unsigned char)flags;\n\n\tctx->cache->npoints++;\n\tpath->count++;\n}\n\nstatic void nvg__closePath(NVGcontext* ctx)\n{\n\tNVGpath* path = nvg__lastPath(ctx);\n\tif (path == NULL) return;\n\tpath->closed = 1;\n}\n\nstatic void nvg__pathWinding(NVGcontext* ctx, int winding)\n{\n\tNVGpath* path = nvg__lastPath(ctx);\n\tif (path == NULL) return;\n\tpath->winding = winding;\n}\n\nstatic float nvg__getAverageScale(float *t)\n{\n\tfloat sx = sqrtf(t[0]*t[0] + t[2]*t[2]);\n\tfloat sy = sqrtf(t[1]*t[1] + t[3]*t[3]);\n\treturn (sx + sy) * 0.5f;\n}\n\nstatic NVGvertex* nvg__allocTempVerts(NVGcontext* ctx, int nverts)\n{\n\tif (nverts > ctx->cache->cverts) {\n\t\tNVGvertex* verts;\n\t\tint cverts = (nverts + 0xff) & ~0xff; // Round up to prevent allocations when things change just slightly.\n\t\tverts = (NVGvertex*)realloc(ctx->cache->verts, sizeof(NVGvertex)*cverts);\n\t\tif (verts == NULL) return NULL;\n\t\tctx->cache->verts = verts;\n\t\tctx->cache->cverts = cverts;\n\t}\n\n\treturn ctx->cache->verts;\n}\n\nstatic float nvg__triarea2(float ax, float ay, float bx, float by, float cx, float cy)\n{\n\tfloat abx = bx - ax;\n\tfloat aby = by - ay;\n\tfloat acx = cx - ax;\n\tfloat acy = cy - ay;\n\treturn acx*aby - abx*acy;\n}\n\nstatic float nvg__polyArea(NVGpoint* pts, int npts)\n{\n\tint i;\n\tfloat area = 0;\n\tfor (i = 2; i < npts; i++) {\n\t\tNVGpoint* a = &pts[0];\n\t\tNVGpoint* b = &pts[i-1];\n\t\tNVGpoint* c = &pts[i];\n\t\tarea += nvg__triarea2(a->x,a->y, b->x,b->y, c->x,c->y);\n\t}\n\treturn area * 0.5f;\n}\n\nstatic void nvg__polyReverse(NVGpoint* pts, int npts)\n{\n\tNVGpoint tmp;\n\tint i = 0, j = npts-1;\n\twhile (i < j) {\n\t\ttmp = pts[i];\n\t\tpts[i] = pts[j];\n\t\tpts[j] = tmp;\n\t\ti++;\n\t\tj--;\n\t}\n}\n\n\nstatic void nvg__vset(NVGvertex* vtx, float x, float y, float u, float v)\n{\n\tvtx->x = x;\n\tvtx->y = y;\n\tvtx->u = u;\n\tvtx->v = v;\n}\n\nstatic void nvg__tesselateBezier(NVGcontext* ctx,\n\t\t\t\t\t\t\t\t float x1, float y1, float x2, float y2,\n\t\t\t\t\t\t\t\t float x3, float y3, float x4, float y4,\n\t\t\t\t\t\t\t\t int level, int type)\n{\n\tfloat x12,y12,x23,y23,x34,y34,x123,y123,x234,y234,x1234,y1234;\n\tfloat dx,dy,d2,d3;\n\n\tif (level > 10) return;\n\n\tx12 = (x1+x2)*0.5f;\n\ty12 = (y1+y2)*0.5f;\n\tx23 = (x2+x3)*0.5f;\n\ty23 = (y2+y3)*0.5f;\n\tx34 = (x3+x4)*0.5f;\n\ty34 = (y3+y4)*0.5f;\n\tx123 = (x12+x23)*0.5f;\n\ty123 = (y12+y23)*0.5f;\n\n\tdx = x4 - x1;\n\tdy = y4 - y1;\n\td2 = nvg__absf(((x2 - x4) * dy - (y2 - y4) * dx));\n\td3 = nvg__absf(((x3 - x4) * dy - (y3 - y4) * dx));\n\n\tif ((d2 + d3)*(d2 + d3) < ctx->tessTol * (dx*dx + dy*dy)) {\n\t\tnvg__addPoint(ctx, x4, y4, type);\n\t\treturn;\n\t}\n\n/*\tif (nvg__absf(x1+x3-x2-x2) + nvg__absf(y1+y3-y2-y2) + nvg__absf(x2+x4-x3-x3) + nvg__absf(y2+y4-y3-y3) < ctx->tessTol) {\n\t\tnvg__addPoint(ctx, x4, y4, type);\n\t\treturn;\n\t}*/\n\n\tx234 = (x23+x34)*0.5f;\n\ty234 = (y23+y34)*0.5f;\n\tx1234 = (x123+x234)*0.5f;\n\ty1234 = (y123+y234)*0.5f;\n\n\tnvg__tesselateBezier(ctx, x1,y1, x12,y12, x123,y123, x1234,y1234, level+1, 0);\n\tnvg__tesselateBezier(ctx, x1234,y1234, x234,y234, x34,y34, x4,y4, level+1, type);\n}\n\nstatic void nvg__flattenPaths(NVGcontext* ctx)\n{\n\tNVGpathCache* cache = ctx->cache;\n//\tNVGstate* state = nvg__getState(ctx);\n\tNVGpoint* last;\n\tNVGpoint* p0;\n\tNVGpoint* p1;\n\tNVGpoint* pts;\n\tNVGpath* path;\n\tint i, j;\n\tfloat* cp1;\n\tfloat* cp2;\n\tfloat* p;\n\tfloat area;\n\n\tif (cache->npaths > 0)\n\t\treturn;\n\n\t// Flatten\n\ti = 0;\n\twhile (i < ctx->ncommands) {\n\t\tint cmd = (int)ctx->commands[i];\n\t\tswitch (cmd) {\n\t\tcase NVG_MOVETO:\n\t\t\tnvg__addPath(ctx);\n\t\t\tp = &ctx->commands[i+1];\n\t\t\tnvg__addPoint(ctx, p[0], p[1], NVG_PT_CORNER);\n\t\t\ti += 3;\n\t\t\tbreak;\n\t\tcase NVG_LINETO:\n\t\t\tp = &ctx->commands[i+1];\n\t\t\tnvg__addPoint(ctx, p[0], p[1], NVG_PT_CORNER);\n\t\t\ti += 3;\n\t\t\tbreak;\n\t\tcase NVG_BEZIERTO:\n\t\t\tlast = nvg__lastPoint(ctx);\n\t\t\tif (last != NULL) {\n\t\t\t\tcp1 = &ctx->commands[i+1];\n\t\t\t\tcp2 = &ctx->commands[i+3];\n\t\t\t\tp = &ctx->commands[i+5];\n\t\t\t\tnvg__tesselateBezier(ctx, last->x,last->y, cp1[0],cp1[1], cp2[0],cp2[1], p[0],p[1], 0, NVG_PT_CORNER);\n\t\t\t}\n\t\t\ti += 7;\n\t\t\tbreak;\n\t\tcase NVG_CLOSE:\n\t\t\tnvg__closePath(ctx);\n\t\t\ti++;\n\t\t\tbreak;\n\t\tcase NVG_WINDING:\n\t\t\tnvg__pathWinding(ctx, (int)ctx->commands[i+1]);\n\t\t\ti += 2;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ti++;\n\t\t}\n\t}\n\n\tcache->bounds[0] = cache->bounds[1] = 1e6f;\n\tcache->bounds[2] = cache->bounds[3] = -1e6f;\n\n\t// Calculate the direction and length of line segments.\n\tfor (j = 0; j < cache->npaths; j++) {\n\t\tpath = &cache->paths[j];\n\t\tpts = &cache->points[path->first];\n\n\t\t// If the first and last points are the same, remove the last, mark as closed path.\n\t\tp0 = &pts[path->count-1];\n\t\tp1 = &pts[0];\n\t\tif (nvg__ptEquals(p0->x,p0->y, p1->x,p1->y, ctx->distTol)) {\n\t\t\tpath->count--;\n\t\t\tp0 = &pts[path->count-1];\n\t\t\tpath->closed = 1;\n\t\t}\n\n\t\t// Enforce winding.\n\t\tif (path->count > 2) {\n\t\t\tarea = nvg__polyArea(pts, path->count);\n\t\t\tif (path->winding == NVG_CCW && area < 0.0f)\n\t\t\t\tnvg__polyReverse(pts, path->count);\n\t\t\tif (path->winding == NVG_CW && area > 0.0f)\n\t\t\t\tnvg__polyReverse(pts, path->count);\n\t\t}\n\n\t\tfor(i = 0; i < path->count; i++) {\n\t\t\t// Calculate segment direction and length\n\t\t\tp0->dx = p1->x - p0->x;\n\t\t\tp0->dy = p1->y - p0->y;\n\t\t\tp0->len = nvg__normalize(&p0->dx, &p0->dy);\n\t\t\t// Update bounds\n\t\t\tcache->bounds[0] = nvg__minf(cache->bounds[0], p0->x);\n\t\t\tcache->bounds[1] = nvg__minf(cache->bounds[1], p0->y);\n\t\t\tcache->bounds[2] = nvg__maxf(cache->bounds[2], p0->x);\n\t\t\tcache->bounds[3] = nvg__maxf(cache->bounds[3], p0->y);\n\t\t\t// Advance\n\t\t\tp0 = p1++;\n\t\t}\n\t}\n}\n\nstatic int nvg__curveDivs(float r, float arc, float tol)\n{\n\tfloat da = acosf(r / (r + tol)) * 2.0f;\n\treturn nvg__maxi(2, (int)ceilf(arc / da));\n}\n\nstatic void nvg__chooseBevel(int bevel, NVGpoint* p0, NVGpoint* p1, float w,\n\t\t\t\t\t\t\tfloat* x0, float* y0, float* x1, float* y1)\n{\n\tif (bevel) {\n\t\t*x0 = p1->x + p0->dy * w;\n\t\t*y0 = p1->y - p0->dx * w;\n\t\t*x1 = p1->x + p1->dy * w;\n\t\t*y1 = p1->y - p1->dx * w;\n\t} else {\n\t\t*x0 = p1->x + p1->dmx * w;\n\t\t*y0 = p1->y + p1->dmy * w;\n\t\t*x1 = p1->x + p1->dmx * w;\n\t\t*y1 = p1->y + p1->dmy * w;\n\t}\n}\n\nstatic NVGvertex* nvg__roundJoin(NVGvertex* dst, NVGpoint* p0, NVGpoint* p1,\n\t\t\t\t\t\t\t\t float lw, float rw, float lu, float ru, int ncap,\n\t\t\t\t\t\t\t\t float fringe)\n{\n\tint i, n;\n\tfloat dlx0 = p0->dy;\n\tfloat dly0 = -p0->dx;\n\tfloat dlx1 = p1->dy;\n\tfloat dly1 = -p1->dx;\n\tNVG_NOTUSED(fringe);\n\n\tif (p1->flags & NVG_PT_LEFT) {\n\t\tfloat lx0,ly0,lx1,ly1,a0,a1;\n\t\tnvg__chooseBevel(p1->flags & NVG_PR_INNERBEVEL, p0, p1, lw, &lx0,&ly0, &lx1,&ly1);\n\t\ta0 = atan2f(-dly0, -dlx0);\n\t\ta1 = atan2f(-dly1, -dlx1);\n\t\tif (a1 > a0) a1 -= NVG_PI*2;\n\n\t\tnvg__vset(dst, lx0, ly0, lu,1); dst++;\n\t\tnvg__vset(dst, p1->x - dlx0*rw, p1->y - dly0*rw, ru,1); dst++;\n\n\t\tn = nvg__clampi((int)ceilf(((a0 - a1) / NVG_PI) * ncap), 2, ncap);\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tfloat u = i/(float)(n-1);\n\t\t\tfloat a = a0 + u*(a1-a0);\n\t\t\tfloat rx = p1->x + cosf(a) * rw;\n\t\t\tfloat ry = p1->y + sinf(a) * rw;\n\t\t\tnvg__vset(dst, p1->x, p1->y, 0.5f,1); dst++;\n\t\t\tnvg__vset(dst, rx, ry, ru,1); dst++;\n\t\t}\n\n\t\tnvg__vset(dst, lx1, ly1, lu,1); dst++;\n\t\tnvg__vset(dst, p1->x - dlx1*rw, p1->y - dly1*rw, ru,1); dst++;\n\n\t} else {\n\t\tfloat rx0,ry0,rx1,ry1,a0,a1;\n\t\tnvg__chooseBevel(p1->flags & NVG_PR_INNERBEVEL, p0, p1, -rw, &rx0,&ry0, &rx1,&ry1);\n\t\ta0 = atan2f(dly0, dlx0);\n\t\ta1 = atan2f(dly1, dlx1);\n\t\tif (a1 < a0) a1 += NVG_PI*2;\n\n\t\tnvg__vset(dst, p1->x + dlx0*rw, p1->y + dly0*rw, lu,1); dst++;\n\t\tnvg__vset(dst, rx0, ry0, ru,1); dst++;\n\n\t\tn = nvg__clampi((int)ceilf(((a1 - a0) / NVG_PI) * ncap), 2, ncap);\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tfloat u = i/(float)(n-1);\n\t\t\tfloat a = a0 + u*(a1-a0);\n\t\t\tfloat lx = p1->x + cosf(a) * lw;\n\t\t\tfloat ly = p1->y + sinf(a) * lw;\n\t\t\tnvg__vset(dst, lx, ly, lu,1); dst++;\n\t\t\tnvg__vset(dst, p1->x, p1->y, 0.5f,1); dst++;\n\t\t}\n\n\t\tnvg__vset(dst, p1->x + dlx1*rw, p1->y + dly1*rw, lu,1); dst++;\n\t\tnvg__vset(dst, rx1, ry1, ru,1); dst++;\n\n\t}\n\treturn dst;\n}\n\nstatic NVGvertex* nvg__bevelJoin(NVGvertex* dst, NVGpoint* p0, NVGpoint* p1,\n\t\t\t\t\t\t\t\t\t\tfloat lw, float rw, float lu, float ru, float fringe)\n{\n\tfloat rx0,ry0,rx1,ry1;\n\tfloat lx0,ly0,lx1,ly1;\n\tfloat dlx0 = p0->dy;\n\tfloat dly0 = -p0->dx;\n\tfloat dlx1 = p1->dy;\n\tfloat dly1 = -p1->dx;\n\tNVG_NOTUSED(fringe);\n\n\tif (p1->flags & NVG_PT_LEFT) {\n\t\tnvg__chooseBevel(p1->flags & NVG_PR_INNERBEVEL, p0, p1, lw, &lx0,&ly0, &lx1,&ly1);\n\n\t\tnvg__vset(dst, lx0, ly0, lu,1); dst++;\n\t\tnvg__vset(dst, p1->x - dlx0*rw, p1->y - dly0*rw, ru,1); dst++;\n\n\t\tif (p1->flags & NVG_PT_BEVEL) {\n\t\t\tnvg__vset(dst, lx0, ly0, lu,1); dst++;\n\t\t\tnvg__vset(dst, p1->x - dlx0*rw, p1->y - dly0*rw, ru,1); dst++;\n\n\t\t\tnvg__vset(dst, lx1, ly1, lu,1); dst++;\n\t\t\tnvg__vset(dst, p1->x - dlx1*rw, p1->y - dly1*rw, ru,1); dst++;\n\t\t} else {\n\t\t\trx0 = p1->x - p1->dmx * rw;\n\t\t\try0 = p1->y - p1->dmy * rw;\n\n\t\t\tnvg__vset(dst, p1->x, p1->y, 0.5f,1); dst++;\n\t\t\tnvg__vset(dst, p1->x - dlx0*rw, p1->y - dly0*rw, ru,1); dst++;\n\n\t\t\tnvg__vset(dst, rx0, ry0, ru,1); dst++;\n\t\t\tnvg__vset(dst, rx0, ry0, ru,1); dst++;\n\n\t\t\tnvg__vset(dst, p1->x, p1->y, 0.5f,1); dst++;\n\t\t\tnvg__vset(dst, p1->x - dlx1*rw, p1->y - dly1*rw, ru,1); dst++;\n\t\t}\n\n\t\tnvg__vset(dst, lx1, ly1, lu,1); dst++;\n\t\tnvg__vset(dst, p1->x - dlx1*rw, p1->y - dly1*rw, ru,1); dst++;\n\n\t} else {\n\t\tnvg__chooseBevel(p1->flags & NVG_PR_INNERBEVEL, p0, p1, -rw, &rx0,&ry0, &rx1,&ry1);\n\n\t\tnvg__vset(dst, p1->x + dlx0*lw, p1->y + dly0*lw, lu,1); dst++;\n\t\tnvg__vset(dst, rx0, ry0, ru,1); dst++;\n\n\t\tif (p1->flags & NVG_PT_BEVEL) {\n\t\t\tnvg__vset(dst, p1->x + dlx0*lw, p1->y + dly0*lw, lu,1); dst++;\n\t\t\tnvg__vset(dst, rx0, ry0, ru,1); dst++;\n\n\t\t\tnvg__vset(dst, p1->x + dlx1*lw, p1->y + dly1*lw, lu,1); dst++;\n\t\t\tnvg__vset(dst, rx1, ry1, ru,1); dst++;\n\t\t} else {\n\t\t\tlx0 = p1->x + p1->dmx * lw;\n\t\t\tly0 = p1->y + p1->dmy * lw;\n\n\t\t\tnvg__vset(dst, p1->x + dlx0*lw, p1->y + dly0*lw, lu,1); dst++;\n\t\t\tnvg__vset(dst, p1->x, p1->y, 0.5f,1); dst++;\n\n\t\t\tnvg__vset(dst, lx0, ly0, lu,1); dst++;\n\t\t\tnvg__vset(dst, lx0, ly0, lu,1); dst++;\n\n\t\t\tnvg__vset(dst, p1->x + dlx1*lw, p1->y + dly1*lw, lu,1); dst++;\n\t\t\tnvg__vset(dst, p1->x, p1->y, 0.5f,1); dst++;\n\t\t}\n\n\t\tnvg__vset(dst, p1->x + dlx1*lw, p1->y + dly1*lw, lu,1); dst++;\n\t\tnvg__vset(dst, rx1, ry1, ru,1); dst++;\n\t}\n\n\treturn dst;\n}\n\nstatic NVGvertex* nvg__buttCapStart(NVGvertex* dst, NVGpoint* p,\n\t\t\t\t\t\t\t\t\tfloat dx, float dy, float w, float d,\n\t\t\t\t\t\t\t\t\tfloat aa, float u0, float u1)\n{\n\tfloat px = p->x - dx*d;\n\tfloat py = p->y - dy*d;\n\tfloat dlx = dy;\n\tfloat dly = -dx;\n\tnvg__vset(dst, px + dlx*w - dx*aa, py + dly*w - dy*aa, u0,0); dst++;\n\tnvg__vset(dst, px - dlx*w - dx*aa, py - dly*w - dy*aa, u1,0); dst++;\n\tnvg__vset(dst, px + dlx*w, py + dly*w, u0,1); dst++;\n\tnvg__vset(dst, px - dlx*w, py - dly*w, u1,1); dst++;\n\treturn dst;\n}\n\nstatic NVGvertex* nvg__buttCapEnd(NVGvertex* dst, NVGpoint* p,\n\t\t\t\t\t\t\t\t  float dx, float dy, float w, float d,\n\t\t\t\t\t\t\t\t  float aa, float u0, float u1)\n{\n\tfloat px = p->x + dx*d;\n\tfloat py = p->y + dy*d;\n\tfloat dlx = dy;\n\tfloat dly = -dx;\n\tnvg__vset(dst, px + dlx*w, py + dly*w, u0,1); dst++;\n\tnvg__vset(dst, px - dlx*w, py - dly*w, u1,1); dst++;\n\tnvg__vset(dst, px + dlx*w + dx*aa, py + dly*w + dy*aa, u0,0); dst++;\n\tnvg__vset(dst, px - dlx*w + dx*aa, py - dly*w + dy*aa, u1,0); dst++;\n\treturn dst;\n}\n\n\nstatic NVGvertex* nvg__roundCapStart(NVGvertex* dst, NVGpoint* p,\n\t\t\t\t\t\t\t\t\t float dx, float dy, float w, int ncap,\n\t\t\t\t\t\t\t\t\t float aa, float u0, float u1)\n{\n\tint i;\n\tfloat px = p->x;\n\tfloat py = p->y;\n\tfloat dlx = dy;\n\tfloat dly = -dx;\n\tNVG_NOTUSED(aa);\n\tfor (i = 0; i < ncap; i++) {\n\t\tfloat a = i/(float)(ncap-1)*NVG_PI;\n\t\tfloat ax = cosf(a) * w, ay = sinf(a) * w;\n\t\tnvg__vset(dst, px - dlx*ax - dx*ay, py - dly*ax - dy*ay, u0,1); dst++;\n\t\tnvg__vset(dst, px, py, 0.5f,1); dst++;\n\t}\n\tnvg__vset(dst, px + dlx*w, py + dly*w, u0,1); dst++;\n\tnvg__vset(dst, px - dlx*w, py - dly*w, u1,1); dst++;\n\treturn dst;\n}\n\nstatic NVGvertex* nvg__roundCapEnd(NVGvertex* dst, NVGpoint* p,\n\t\t\t\t\t\t\t\t   float dx, float dy, float w, int ncap,\n\t\t\t\t\t\t\t\t   float aa, float u0, float u1)\n{\n\tint i;\n\tfloat px = p->x;\n\tfloat py = p->y;\n\tfloat dlx = dy;\n\tfloat dly = -dx;\n\tNVG_NOTUSED(aa);\n\tnvg__vset(dst, px + dlx*w, py + dly*w, u0,1); dst++;\n\tnvg__vset(dst, px - dlx*w, py - dly*w, u1,1); dst++;\n\tfor (i = 0; i < ncap; i++) {\n\t\tfloat a = i/(float)(ncap-1)*NVG_PI;\n\t\tfloat ax = cosf(a) * w, ay = sinf(a) * w;\n\t\tnvg__vset(dst, px, py, 0.5f,1); dst++;\n\t\tnvg__vset(dst, px - dlx*ax + dx*ay, py - dly*ax + dy*ay, u0,1); dst++;\n\t}\n\treturn dst;\n}\n\n\nstatic void nvg__calculateJoins(NVGcontext* ctx, float w, int lineJoin, float miterLimit)\n{\n\tNVGpathCache* cache = ctx->cache;\n\tint i, j;\n\tfloat iw = 0.0f;\n\n\tif (w > 0.0f) iw = 1.0f / w;\n\n\t// Calculate which joins needs extra vertices to append, and gather vertex count.\n\tfor (i = 0; i < cache->npaths; i++) {\n\t\tNVGpath* path = &cache->paths[i];\n\t\tNVGpoint* pts = &cache->points[path->first];\n\t\tNVGpoint* p0 = &pts[path->count-1];\n\t\tNVGpoint* p1 = &pts[0];\n\t\tint nleft = 0;\n\n\t\tpath->nbevel = 0;\n\n\t\tfor (j = 0; j < path->count; j++) {\n\t\t\tfloat dlx0, dly0, dlx1, dly1, dmr2, cross, limit;\n\t\t\tdlx0 = p0->dy;\n\t\t\tdly0 = -p0->dx;\n\t\t\tdlx1 = p1->dy;\n\t\t\tdly1 = -p1->dx;\n\t\t\t// Calculate extrusions\n\t\t\tp1->dmx = (dlx0 + dlx1) * 0.5f;\n\t\t\tp1->dmy = (dly0 + dly1) * 0.5f;\n\t\t\tdmr2 = p1->dmx*p1->dmx + p1->dmy*p1->dmy;\n\t\t\tif (dmr2 > 0.000001f) {\n\t\t\t\tfloat scale = 1.0f / dmr2;\n\t\t\t\tif (scale > 600.0f) {\n\t\t\t\t\tscale = 600.0f;\n\t\t\t\t}\n\t\t\t\tp1->dmx *= scale;\n\t\t\t\tp1->dmy *= scale;\n\t\t\t}\n\n\t\t\t// Clear flags, but keep the corner.\n\t\t\tp1->flags = (p1->flags & NVG_PT_CORNER) ? NVG_PT_CORNER : 0;\n\n\t\t\t// Keep track of left turns.\n\t\t\tcross = p1->dx * p0->dy - p0->dx * p1->dy;\n\t\t\tif (cross > 0.0f) {\n\t\t\t\tnleft++;\n\t\t\t\tp1->flags |= NVG_PT_LEFT;\n\t\t\t}\n\n\t\t\t// Calculate if we should use bevel or miter for inner join.\n\t\t\tlimit = nvg__maxf(1.01f, nvg__minf(p0->len, p1->len) * iw);\n\t\t\tif ((dmr2 * limit*limit) < 1.0f)\n\t\t\t\tp1->flags |= NVG_PR_INNERBEVEL;\n\n\t\t\t// Check to see if the corner needs to be beveled.\n\t\t\tif (p1->flags & NVG_PT_CORNER) {\n\t\t\t\tif ((dmr2 * miterLimit*miterLimit) < 1.0f || lineJoin == NVG_BEVEL || lineJoin == NVG_ROUND) {\n\t\t\t\t\tp1->flags |= NVG_PT_BEVEL;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((p1->flags & (NVG_PT_BEVEL | NVG_PR_INNERBEVEL)) != 0)\n\t\t\t\tpath->nbevel++;\n\n\t\t\tp0 = p1++;\n\t\t}\n\n\t\tpath->convex = (nleft == path->count) ? 1 : 0;\n\t}\n}\n\n\nstatic int nvg__expandStroke(NVGcontext* ctx, float w, float fringe, int lineCap, int lineJoin, float miterLimit)\n{\n\tNVGpathCache* cache = ctx->cache;\n\tNVGvertex* verts;\n\tNVGvertex* dst;\n\tint cverts, i, j;\n\tfloat aa = fringe;//ctx->fringeWidth;\n\tfloat u0 = 0.0f, u1 = 1.0f;\n\tint ncap = nvg__curveDivs(w, NVG_PI, ctx->tessTol);\t// Calculate divisions per half circle.\n\n\tw += aa * 0.5f;\n\n\t// Disable the gradient used for antialiasing when antialiasing is not used.\n\tif (aa == 0.0f) {\n\t\tu0 = 0.5f;\n\t\tu1 = 0.5f;\n\t}\n\n\tnvg__calculateJoins(ctx, w, lineJoin, miterLimit);\n\n\t// Calculate max vertex usage.\n\tcverts = 0;\n\tfor (i = 0; i < cache->npaths; i++) {\n\t\tNVGpath* path = &cache->paths[i];\n\t\tint loop = (path->closed == 0) ? 0 : 1;\n\t\tif (lineJoin == NVG_ROUND)\n\t\t\tcverts += (path->count + path->nbevel*(ncap+2) + 1) * 2; // plus one for loop\n\t\telse\n\t\t\tcverts += (path->count + path->nbevel*5 + 1) * 2; // plus one for loop\n\t\tif (loop == 0) {\n\t\t\t// space for caps\n\t\t\tif (lineCap == NVG_ROUND) {\n\t\t\t\tcverts += (ncap*2 + 2)*2;\n\t\t\t} else {\n\t\t\t\tcverts += (3+3)*2;\n\t\t\t}\n\t\t}\n\t}\n\n\tverts = nvg__allocTempVerts(ctx, cverts);\n\tif (verts == NULL) return 0;\n\n\tfor (i = 0; i < cache->npaths; i++) {\n\t\tNVGpath* path = &cache->paths[i];\n\t\tNVGpoint* pts = &cache->points[path->first];\n\t\tNVGpoint* p0;\n\t\tNVGpoint* p1;\n\t\tint s, e, loop;\n\t\tfloat dx, dy;\n\n\t\tpath->fill = 0;\n\t\tpath->nfill = 0;\n\n\t\t// Calculate fringe or stroke\n\t\tloop = (path->closed == 0) ? 0 : 1;\n\t\tdst = verts;\n\t\tpath->stroke = dst;\n\n\t\tif (loop) {\n\t\t\t// Looping\n\t\t\tp0 = &pts[path->count-1];\n\t\t\tp1 = &pts[0];\n\t\t\ts = 0;\n\t\t\te = path->count;\n\t\t} else {\n\t\t\t// Add cap\n\t\t\tp0 = &pts[0];\n\t\t\tp1 = &pts[1];\n\t\t\ts = 1;\n\t\t\te = path->count-1;\n\t\t}\n\n\t\tif (loop == 0) {\n\t\t\t// Add cap\n\t\t\tdx = p1->x - p0->x;\n\t\t\tdy = p1->y - p0->y;\n\t\t\tnvg__normalize(&dx, &dy);\n\t\t\tif (lineCap == NVG_BUTT)\n\t\t\t\tdst = nvg__buttCapStart(dst, p0, dx, dy, w, -aa*0.5f, aa, u0, u1);\n\t\t\telse if (lineCap == NVG_BUTT || lineCap == NVG_SQUARE)\n\t\t\t\tdst = nvg__buttCapStart(dst, p0, dx, dy, w, w-aa, aa, u0, u1);\n\t\t\telse if (lineCap == NVG_ROUND)\n\t\t\t\tdst = nvg__roundCapStart(dst, p0, dx, dy, w, ncap, aa, u0, u1);\n\t\t}\n\n\t\tfor (j = s; j < e; ++j) {\n\t\t\tif ((p1->flags & (NVG_PT_BEVEL | NVG_PR_INNERBEVEL)) != 0) {\n\t\t\t\tif (lineJoin == NVG_ROUND) {\n\t\t\t\t\tdst = nvg__roundJoin(dst, p0, p1, w, w, u0, u1, ncap, aa);\n\t\t\t\t} else {\n\t\t\t\t\tdst = nvg__bevelJoin(dst, p0, p1, w, w, u0, u1, aa);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnvg__vset(dst, p1->x + (p1->dmx * w), p1->y + (p1->dmy * w), u0,1); dst++;\n\t\t\t\tnvg__vset(dst, p1->x - (p1->dmx * w), p1->y - (p1->dmy * w), u1,1); dst++;\n\t\t\t}\n\t\t\tp0 = p1++;\n\t\t}\n\n\t\tif (loop) {\n\t\t\t// Loop it\n\t\t\tnvg__vset(dst, verts[0].x, verts[0].y, u0,1); dst++;\n\t\t\tnvg__vset(dst, verts[1].x, verts[1].y, u1,1); dst++;\n\t\t} else {\n\t\t\t// Add cap\n\t\t\tdx = p1->x - p0->x;\n\t\t\tdy = p1->y - p0->y;\n\t\t\tnvg__normalize(&dx, &dy);\n\t\t\tif (lineCap == NVG_BUTT)\n\t\t\t\tdst = nvg__buttCapEnd(dst, p1, dx, dy, w, -aa*0.5f, aa, u0, u1);\n\t\t\telse if (lineCap == NVG_BUTT || lineCap == NVG_SQUARE)\n\t\t\t\tdst = nvg__buttCapEnd(dst, p1, dx, dy, w, w-aa, aa, u0, u1);\n\t\t\telse if (lineCap == NVG_ROUND)\n\t\t\t\tdst = nvg__roundCapEnd(dst, p1, dx, dy, w, ncap, aa, u0, u1);\n\t\t}\n\n\t\tpath->nstroke = (int)(dst - verts);\n\n\t\tverts = dst;\n\t}\n\n\treturn 1;\n}\n\nstatic int nvg__expandFill(NVGcontext* ctx, float w, int lineJoin, float miterLimit)\n{\n\tNVGpathCache* cache = ctx->cache;\n\tNVGvertex* verts;\n\tNVGvertex* dst;\n\tint cverts, convex, i, j;\n\tfloat aa = ctx->fringeWidth;\n\tint fringe = w > 0.0f;\n\n\tnvg__calculateJoins(ctx, w, lineJoin, miterLimit);\n\n\t// Calculate max vertex usage.\n\tcverts = 0;\n\tfor (i = 0; i < cache->npaths; i++) {\n\t\tNVGpath* path = &cache->paths[i];\n\t\tcverts += path->count + path->nbevel + 1;\n\t\tif (fringe)\n\t\t\tcverts += (path->count + path->nbevel*5 + 1) * 2; // plus one for loop\n\t}\n\n\tverts = nvg__allocTempVerts(ctx, cverts);\n\tif (verts == NULL) return 0;\n\n\tconvex = cache->npaths == 1 && cache->paths[0].convex;\n\n\tfor (i = 0; i < cache->npaths; i++) {\n\t\tNVGpath* path = &cache->paths[i];\n\t\tNVGpoint* pts = &cache->points[path->first];\n\t\tNVGpoint* p0;\n\t\tNVGpoint* p1;\n\t\tfloat rw, lw, woff;\n\t\tfloat ru, lu;\n\n\t\t// Calculate shape vertices.\n\t\twoff = 0.5f*aa;\n\t\tdst = verts;\n\t\tpath->fill = dst;\n\n\t\tif (fringe) {\n\t\t\t// Looping\n\t\t\tp0 = &pts[path->count-1];\n\t\t\tp1 = &pts[0];\n\t\t\tfor (j = 0; j < path->count; ++j) {\n\t\t\t\tif (p1->flags & NVG_PT_BEVEL) {\n\t\t\t\t\tfloat dlx0 = p0->dy;\n\t\t\t\t\tfloat dly0 = -p0->dx;\n\t\t\t\t\tfloat dlx1 = p1->dy;\n\t\t\t\t\tfloat dly1 = -p1->dx;\n\t\t\t\t\tif (p1->flags & NVG_PT_LEFT) {\n\t\t\t\t\t\tfloat lx = p1->x + p1->dmx * woff;\n\t\t\t\t\t\tfloat ly = p1->y + p1->dmy * woff;\n\t\t\t\t\t\tnvg__vset(dst, lx, ly, 0.5f,1); dst++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfloat lx0 = p1->x + dlx0 * woff;\n\t\t\t\t\t\tfloat ly0 = p1->y + dly0 * woff;\n\t\t\t\t\t\tfloat lx1 = p1->x + dlx1 * woff;\n\t\t\t\t\t\tfloat ly1 = p1->y + dly1 * woff;\n\t\t\t\t\t\tnvg__vset(dst, lx0, ly0, 0.5f,1); dst++;\n\t\t\t\t\t\tnvg__vset(dst, lx1, ly1, 0.5f,1); dst++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnvg__vset(dst, p1->x + (p1->dmx * woff), p1->y + (p1->dmy * woff), 0.5f,1); dst++;\n\t\t\t\t}\n\t\t\t\tp0 = p1++;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (j = 0; j < path->count; ++j) {\n\t\t\t\tnvg__vset(dst, pts[j].x, pts[j].y, 0.5f,1);\n\t\t\t\tdst++;\n\t\t\t}\n\t\t}\n\n\t\tpath->nfill = (int)(dst - verts);\n\t\tverts = dst;\n\n\t\t// Calculate fringe\n\t\tif (fringe) {\n\t\t\tlw = w + woff;\n\t\t\trw = w - woff;\n\t\t\tlu = 0;\n\t\t\tru = 1;\n\t\t\tdst = verts;\n\t\t\tpath->stroke = dst;\n\n\t\t\t// Create only half a fringe for convex shapes so that\n\t\t\t// the shape can be rendered without stenciling.\n\t\t\tif (convex) {\n\t\t\t\tlw = woff;\t// This should generate the same vertex as fill inset above.\n\t\t\t\tlu = 0.5f;\t// Set outline fade at middle.\n\t\t\t}\n\n\t\t\t// Looping\n\t\t\tp0 = &pts[path->count-1];\n\t\t\tp1 = &pts[0];\n\n\t\t\tfor (j = 0; j < path->count; ++j) {\n\t\t\t\tif ((p1->flags & (NVG_PT_BEVEL | NVG_PR_INNERBEVEL)) != 0) {\n\t\t\t\t\tdst = nvg__bevelJoin(dst, p0, p1, lw, rw, lu, ru, ctx->fringeWidth);\n\t\t\t\t} else {\n\t\t\t\t\tnvg__vset(dst, p1->x + (p1->dmx * lw), p1->y + (p1->dmy * lw), lu,1); dst++;\n\t\t\t\t\tnvg__vset(dst, p1->x - (p1->dmx * rw), p1->y - (p1->dmy * rw), ru,1); dst++;\n\t\t\t\t}\n\t\t\t\tp0 = p1++;\n\t\t\t}\n\n\t\t\t// Loop it\n\t\t\tnvg__vset(dst, verts[0].x, verts[0].y, lu,1); dst++;\n\t\t\tnvg__vset(dst, verts[1].x, verts[1].y, ru,1); dst++;\n\n\t\t\tpath->nstroke = (int)(dst - verts);\n\t\t\tverts = dst;\n\t\t} else {\n\t\t\tpath->stroke = NULL;\n\t\t\tpath->nstroke = 0;\n\t\t}\n\t}\n\n\treturn 1;\n}\n\n\n// Draw\nvoid nvgBeginPath(NVGcontext* ctx)\n{\n\tctx->ncommands = 0;\n\tnvg__clearPathCache(ctx);\n}\n\nvoid nvgMoveTo(NVGcontext* ctx, float x, float y)\n{\n\tfloat vals[] = { NVG_MOVETO, x, y };\n\tnvg__appendCommands(ctx, vals, NVG_COUNTOF(vals));\n}\n\nvoid nvgLineTo(NVGcontext* ctx, float x, float y)\n{\n\tfloat vals[] = { NVG_LINETO, x, y };\n\tnvg__appendCommands(ctx, vals, NVG_COUNTOF(vals));\n}\n\nvoid nvgBezierTo(NVGcontext* ctx, float c1x, float c1y, float c2x, float c2y, float x, float y)\n{\n\tfloat vals[] = { NVG_BEZIERTO, c1x, c1y, c2x, c2y, x, y };\n\tnvg__appendCommands(ctx, vals, NVG_COUNTOF(vals));\n}\n\nvoid nvgQuadTo(NVGcontext* ctx, float cx, float cy, float x, float y)\n{\n    float x0 = ctx->commandx;\n    float y0 = ctx->commandy;\n    float vals[] = { NVG_BEZIERTO,\n        x0 + 2.0f/3.0f*(cx - x0), y0 + 2.0f/3.0f*(cy - y0),\n        x + 2.0f/3.0f*(cx - x), y + 2.0f/3.0f*(cy - y),\n        x, y };\n    nvg__appendCommands(ctx, vals, NVG_COUNTOF(vals));\n}\n\nvoid nvgArcTo(NVGcontext* ctx, float x1, float y1, float x2, float y2, float radius)\n{\n\tfloat x0 = ctx->commandx;\n\tfloat y0 = ctx->commandy;\n\tfloat dx0,dy0, dx1,dy1, a, d, cx,cy, a0,a1;\n\tint dir;\n\n\tif (ctx->ncommands == 0) {\n\t\treturn;\n\t}\n\n\t// Handle degenerate cases.\n\tif (nvg__ptEquals(x0,y0, x1,y1, ctx->distTol) ||\n\t\tnvg__ptEquals(x1,y1, x2,y2, ctx->distTol) ||\n\t\tnvg__distPtSeg(x1,y1, x0,y0, x2,y2) < ctx->distTol*ctx->distTol ||\n\t\tradius < ctx->distTol) {\n\t\tnvgLineTo(ctx, x1,y1);\n\t\treturn;\n\t}\n\n\t// Calculate tangential circle to lines (x0,y0)-(x1,y1) and (x1,y1)-(x2,y2).\n\tdx0 = x0-x1;\n\tdy0 = y0-y1;\n\tdx1 = x2-x1;\n\tdy1 = y2-y1;\n\tnvg__normalize(&dx0,&dy0);\n\tnvg__normalize(&dx1,&dy1);\n\ta = nvg__acosf(dx0*dx1 + dy0*dy1);\n\td = radius / nvg__tanf(a/2.0f);\n\n//\tprintf(\"a=%f° d=%f\\n\", a/NVG_PI*180.0f, d);\n\n\tif (d > 10000.0f) {\n\t\tnvgLineTo(ctx, x1,y1);\n\t\treturn;\n\t}\n\n\tif (nvg__cross(dx0,dy0, dx1,dy1) > 0.0f) {\n\t\tcx = x1 + dx0*d + dy0*radius;\n\t\tcy = y1 + dy0*d + -dx0*radius;\n\t\ta0 = nvg__atan2f(dx0, -dy0);\n\t\ta1 = nvg__atan2f(-dx1, dy1);\n\t\tdir = NVG_CW;\n//\t\tprintf(\"CW c=(%f, %f) a0=%f° a1=%f°\\n\", cx, cy, a0/NVG_PI*180.0f, a1/NVG_PI*180.0f);\n\t} else {\n\t\tcx = x1 + dx0*d + -dy0*radius;\n\t\tcy = y1 + dy0*d + dx0*radius;\n\t\ta0 = nvg__atan2f(-dx0, dy0);\n\t\ta1 = nvg__atan2f(dx1, -dy1);\n\t\tdir = NVG_CCW;\n//\t\tprintf(\"CCW c=(%f, %f) a0=%f° a1=%f°\\n\", cx, cy, a0/NVG_PI*180.0f, a1/NVG_PI*180.0f);\n\t}\n\n\tnvgArc(ctx, cx, cy, radius, a0, a1, dir);\n}\n\nvoid nvgClosePath(NVGcontext* ctx)\n{\n\tfloat vals[] = { NVG_CLOSE };\n\tnvg__appendCommands(ctx, vals, NVG_COUNTOF(vals));\n}\n\nvoid nvgPathWinding(NVGcontext* ctx, int dir)\n{\n\tfloat vals[] = { NVG_WINDING, (float)dir };\n\tnvg__appendCommands(ctx, vals, NVG_COUNTOF(vals));\n}\n\nvoid nvgArc(NVGcontext* ctx, float cx, float cy, float r, float a0, float a1, int dir)\n{\n\tfloat a = 0, da = 0, hda = 0, kappa = 0;\n\tfloat dx = 0, dy = 0, x = 0, y = 0, tanx = 0, tany = 0;\n\tfloat px = 0, py = 0, ptanx = 0, ptany = 0;\n\tfloat vals[3 + 5*7 + 100];\n\tint i, ndivs, nvals;\n\tint move = ctx->ncommands > 0 ? NVG_LINETO : NVG_MOVETO;\n\n\t// Clamp angles\n\tda = a1 - a0;\n\tif (dir == NVG_CW) {\n\t\tif (nvg__absf(da) >= NVG_PI*2) {\n\t\t\tda = NVG_PI*2;\n\t\t} else {\n\t\t\twhile (da < 0.0f) da += NVG_PI*2;\n\t\t}\n\t} else {\n\t\tif (nvg__absf(da) >= NVG_PI*2) {\n\t\t\tda = -NVG_PI*2;\n\t\t} else {\n\t\t\twhile (da > 0.0f) da -= NVG_PI*2;\n\t\t}\n\t}\n\n\t// Split arc into max 90 degree segments.\n\tndivs = nvg__maxi(1, nvg__mini((int)(nvg__absf(da) / (NVG_PI*0.5f) + 0.5f), 5));\n\thda = (da / (float)ndivs) / 2.0f;\n\tkappa = nvg__absf(4.0f / 3.0f * (1.0f - nvg__cosf(hda)) / nvg__sinf(hda));\n\n\tif (dir == NVG_CCW)\n\t\tkappa = -kappa;\n\n\tnvals = 0;\n\tfor (i = 0; i <= ndivs; i++) {\n\t\ta = a0 + da * (i/(float)ndivs);\n\t\tdx = nvg__cosf(a);\n\t\tdy = nvg__sinf(a);\n\t\tx = cx + dx*r;\n\t\ty = cy + dy*r;\n\t\ttanx = -dy*r*kappa;\n\t\ttany = dx*r*kappa;\n\n\t\tif (i == 0) {\n\t\t\tvals[nvals++] = (float)move;\n\t\t\tvals[nvals++] = x;\n\t\t\tvals[nvals++] = y;\n\t\t} else {\n\t\t\tvals[nvals++] = NVG_BEZIERTO;\n\t\t\tvals[nvals++] = px+ptanx;\n\t\t\tvals[nvals++] = py+ptany;\n\t\t\tvals[nvals++] = x-tanx;\n\t\t\tvals[nvals++] = y-tany;\n\t\t\tvals[nvals++] = x;\n\t\t\tvals[nvals++] = y;\n\t\t}\n\t\tpx = x;\n\t\tpy = y;\n\t\tptanx = tanx;\n\t\tptany = tany;\n\t}\n\n\tnvg__appendCommands(ctx, vals, nvals);\n}\n\nvoid nvgRect(NVGcontext* ctx, float x, float y, float w, float h)\n{\n\tfloat vals[] = {\n\t\tNVG_MOVETO, x,y,\n\t\tNVG_LINETO, x,y+h,\n\t\tNVG_LINETO, x+w,y+h,\n\t\tNVG_LINETO, x+w,y,\n\t\tNVG_CLOSE\n\t};\n\tnvg__appendCommands(ctx, vals, NVG_COUNTOF(vals));\n}\n\nvoid nvgRoundedRect(NVGcontext* ctx, float x, float y, float w, float h, float r)\n{\n\tnvgRoundedRectVarying(ctx, x, y, w, h, r, r, r, r);\n}\n\nvoid nvgRoundedRectVarying(NVGcontext* ctx, float x, float y, float w, float h, float radTopLeft, float radTopRight, float radBottomRight, float radBottomLeft)\n{\n\tif(radTopLeft < 0.1f && radTopRight < 0.1f && radBottomRight < 0.1f && radBottomLeft < 0.1f) {\n\t\tnvgRect(ctx, x, y, w, h);\n\t\treturn;\n\t} else {\n\t\tfloat halfw = nvg__absf(w)*0.5f;\n\t\tfloat halfh = nvg__absf(h)*0.5f;\n\t\tfloat rxBL = nvg__minf(radBottomLeft, halfw) * nvg__signf(w), ryBL = nvg__minf(radBottomLeft, halfh) * nvg__signf(h);\n\t\tfloat rxBR = nvg__minf(radBottomRight, halfw) * nvg__signf(w), ryBR = nvg__minf(radBottomRight, halfh) * nvg__signf(h);\n\t\tfloat rxTR = nvg__minf(radTopRight, halfw) * nvg__signf(w), ryTR = nvg__minf(radTopRight, halfh) * nvg__signf(h);\n\t\tfloat rxTL = nvg__minf(radTopLeft, halfw) * nvg__signf(w), ryTL = nvg__minf(radTopLeft, halfh) * nvg__signf(h);\n\t\tfloat vals[] = {\n\t\t\tNVG_MOVETO, x, y + ryTL,\n\t\t\tNVG_LINETO, x, y + h - ryBL,\n\t\t\tNVG_BEZIERTO, x, y + h - ryBL*(1 - NVG_KAPPA90), x + rxBL*(1 - NVG_KAPPA90), y + h, x + rxBL, y + h,\n\t\t\tNVG_LINETO, x + w - rxBR, y + h,\n\t\t\tNVG_BEZIERTO, x + w - rxBR*(1 - NVG_KAPPA90), y + h, x + w, y + h - ryBR*(1 - NVG_KAPPA90), x + w, y + h - ryBR,\n\t\t\tNVG_LINETO, x + w, y + ryTR,\n\t\t\tNVG_BEZIERTO, x + w, y + ryTR*(1 - NVG_KAPPA90), x + w - rxTR*(1 - NVG_KAPPA90), y, x + w - rxTR, y,\n\t\t\tNVG_LINETO, x + rxTL, y,\n\t\t\tNVG_BEZIERTO, x + rxTL*(1 - NVG_KAPPA90), y, x, y + ryTL*(1 - NVG_KAPPA90), x, y + ryTL,\n\t\t\tNVG_CLOSE\n\t\t};\n\t\tnvg__appendCommands(ctx, vals, NVG_COUNTOF(vals));\n\t}\n}\n\nvoid nvgEllipse(NVGcontext* ctx, float cx, float cy, float rx, float ry)\n{\n\tfloat vals[] = {\n\t\tNVG_MOVETO, cx-rx, cy,\n\t\tNVG_BEZIERTO, cx-rx, cy+ry*NVG_KAPPA90, cx-rx*NVG_KAPPA90, cy+ry, cx, cy+ry,\n\t\tNVG_BEZIERTO, cx+rx*NVG_KAPPA90, cy+ry, cx+rx, cy+ry*NVG_KAPPA90, cx+rx, cy,\n\t\tNVG_BEZIERTO, cx+rx, cy-ry*NVG_KAPPA90, cx+rx*NVG_KAPPA90, cy-ry, cx, cy-ry,\n\t\tNVG_BEZIERTO, cx-rx*NVG_KAPPA90, cy-ry, cx-rx, cy-ry*NVG_KAPPA90, cx-rx, cy,\n\t\tNVG_CLOSE\n\t};\n\tnvg__appendCommands(ctx, vals, NVG_COUNTOF(vals));\n}\n\nvoid nvgCircle(NVGcontext* ctx, float cx, float cy, float r)\n{\n\tnvgEllipse(ctx, cx,cy, r,r);\n}\n\nvoid nvgDebugDumpPathCache(NVGcontext* ctx)\n{\n\tconst NVGpath* path;\n\tint i, j;\n\n\tprintf(\"Dumping %d cached paths\\n\", ctx->cache->npaths);\n\tfor (i = 0; i < ctx->cache->npaths; i++) {\n\t\tpath = &ctx->cache->paths[i];\n\t\tprintf(\" - Path %d\\n\", i);\n\t\tif (path->nfill) {\n\t\t\tprintf(\"   - fill: %d\\n\", path->nfill);\n\t\t\tfor (j = 0; j < path->nfill; j++)\n\t\t\t\tprintf(\"%f\\t%f\\n\", path->fill[j].x, path->fill[j].y);\n\t\t}\n\t\tif (path->nstroke) {\n\t\t\tprintf(\"   - stroke: %d\\n\", path->nstroke);\n\t\t\tfor (j = 0; j < path->nstroke; j++)\n\t\t\t\tprintf(\"%f\\t%f\\n\", path->stroke[j].x, path->stroke[j].y);\n\t\t}\n\t}\n}\n\nvoid nvgFill(NVGcontext* ctx)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tconst NVGpath* path;\n\tNVGpaint fillPaint = state->fill;\n\tint i;\n\n\tnvg__flattenPaths(ctx);\n\tif (ctx->params.edgeAntiAlias && state->shapeAntiAlias)\n\t\tnvg__expandFill(ctx, ctx->fringeWidth, NVG_MITER, 2.4f);\n\telse\n\t\tnvg__expandFill(ctx, 0.0f, NVG_MITER, 2.4f);\n\n\t// Apply global alpha\n\tfillPaint.innerColor.a *= state->alpha;\n\tfillPaint.outerColor.a *= state->alpha;\n\n\tctx->params.renderFill(ctx->params.userPtr, &fillPaint, state->compositeOperation, &state->scissor, ctx->fringeWidth,\n\t\t\t\t\t\t   ctx->cache->bounds, ctx->cache->paths, ctx->cache->npaths);\n\n\t// Count triangles\n\tfor (i = 0; i < ctx->cache->npaths; i++) {\n\t\tpath = &ctx->cache->paths[i];\n\t\tctx->fillTriCount += path->nfill-2;\n\t\tctx->fillTriCount += path->nstroke-2;\n\t\tctx->drawCallCount += 2;\n\t}\n}\n\nvoid nvgStroke(NVGcontext* ctx)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tfloat scale = nvg__getAverageScale(state->xform);\n\tfloat strokeWidth = nvg__clampf(state->strokeWidth * scale, 0.0f, 200.0f);\n\tNVGpaint strokePaint = state->stroke;\n\tconst NVGpath* path;\n\tint i;\n\n\n\tif (strokeWidth < ctx->fringeWidth) {\n\t\t// If the stroke width is less than pixel size, use alpha to emulate coverage.\n\t\t// Since coverage is area, scale by alpha*alpha.\n\t\tfloat alpha = nvg__clampf(strokeWidth / ctx->fringeWidth, 0.0f, 1.0f);\n\t\tstrokePaint.innerColor.a *= alpha*alpha;\n\t\tstrokePaint.outerColor.a *= alpha*alpha;\n\t\tstrokeWidth = ctx->fringeWidth;\n\t}\n\n\t// Apply global alpha\n\tstrokePaint.innerColor.a *= state->alpha;\n\tstrokePaint.outerColor.a *= state->alpha;\n\n\tnvg__flattenPaths(ctx);\n\n\tif (ctx->params.edgeAntiAlias && state->shapeAntiAlias)\n\t\tnvg__expandStroke(ctx, strokeWidth*0.5f, ctx->fringeWidth, state->lineCap, state->lineJoin, state->miterLimit);\n\telse\n\t\tnvg__expandStroke(ctx, strokeWidth*0.5f, 0.0f, state->lineCap, state->lineJoin, state->miterLimit);\n\n\tctx->params.renderStroke(ctx->params.userPtr, &strokePaint, state->compositeOperation, &state->scissor, ctx->fringeWidth,\n\t\t\t\t\t\t\t strokeWidth, ctx->cache->paths, ctx->cache->npaths);\n\n\t// Count triangles\n\tfor (i = 0; i < ctx->cache->npaths; i++) {\n\t\tpath = &ctx->cache->paths[i];\n\t\tctx->strokeTriCount += path->nstroke-2;\n\t\tctx->drawCallCount++;\n\t}\n}\n\n// Add fonts\nint nvgCreateFont(NVGcontext* ctx, const char* name, const char* filename)\n{\n\treturn fonsAddFont(ctx->fs, name, filename, 0);\n}\n\nint nvgCreateFontAtIndex(NVGcontext* ctx, const char* name, const char* filename, const int fontIndex)\n{\n\treturn fonsAddFont(ctx->fs, name, filename, fontIndex);\n}\n\nint nvgCreateFontMem(NVGcontext* ctx, const char* name, unsigned char* data, int ndata, int freeData)\n{\n\treturn fonsAddFontMem(ctx->fs, name, data, ndata, freeData, 0);\n}\n\nint nvgCreateFontMemAtIndex(NVGcontext* ctx, const char* name, unsigned char* data, int ndata, int freeData, const int fontIndex)\n{\n\treturn fonsAddFontMem(ctx->fs, name, data, ndata, freeData, fontIndex);\n}\n\nint nvgFindFont(NVGcontext* ctx, const char* name)\n{\n\tif (name == NULL) return -1;\n\treturn fonsGetFontByName(ctx->fs, name);\n}\n\n\nint nvgAddFallbackFontId(NVGcontext* ctx, int baseFont, int fallbackFont)\n{\n\tif(baseFont == -1 || fallbackFont == -1) return 0;\n\treturn fonsAddFallbackFont(ctx->fs, baseFont, fallbackFont);\n}\n\nint nvgAddFallbackFont(NVGcontext* ctx, const char* baseFont, const char* fallbackFont)\n{\n\treturn nvgAddFallbackFontId(ctx, nvgFindFont(ctx, baseFont), nvgFindFont(ctx, fallbackFont));\n}\n\nvoid nvgResetFallbackFontsId(NVGcontext* ctx, int baseFont)\n{\n\tfonsResetFallbackFont(ctx->fs, baseFont);\n}\n\nvoid nvgResetFallbackFonts(NVGcontext* ctx, const char* baseFont)\n{\n\tnvgResetFallbackFontsId(ctx, nvgFindFont(ctx, baseFont));\n}\n\n// State setting\nvoid nvgFontSize(NVGcontext* ctx, float size)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->fontSize = size;\n}\n\nvoid nvgFontBlur(NVGcontext* ctx, float blur)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->fontBlur = blur;\n}\n\nvoid nvgTextLetterSpacing(NVGcontext* ctx, float spacing)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->letterSpacing = spacing;\n}\n\nvoid nvgTextLineHeight(NVGcontext* ctx, float lineHeight)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->lineHeight = lineHeight;\n}\n\nvoid nvgTextAlign(NVGcontext* ctx, int align)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->textAlign = align;\n}\n\nvoid nvgFontFaceId(NVGcontext* ctx, int font)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->fontId = font;\n}\n\nvoid nvgFontFace(NVGcontext* ctx, const char* font)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tstate->fontId = fonsGetFontByName(ctx->fs, font);\n}\n\nstatic float nvg__quantize(float a, float d)\n{\n\treturn ((int)(a / d + 0.5f)) * d;\n}\n\nstatic float nvg__getFontScale(NVGstate* state)\n{\n\treturn nvg__minf(nvg__quantize(nvg__getAverageScale(state->xform), 0.01f), 4.0f);\n}\n\nstatic void nvg__flushTextTexture(NVGcontext* ctx)\n{\n\tint dirty[4];\n\n\tif (fonsValidateTexture(ctx->fs, dirty)) {\n\t\tint fontImage = ctx->fontImages[ctx->fontImageIdx];\n\t\t// Update texture\n\t\tif (fontImage != 0) {\n\t\t\tint iw, ih;\n\t\t\tconst unsigned char* data = fonsGetTextureData(ctx->fs, &iw, &ih);\n\t\t\tint x = dirty[0];\n\t\t\tint y = dirty[1];\n\t\t\tint w = dirty[2] - dirty[0];\n\t\t\tint h = dirty[3] - dirty[1];\n\t\t\tctx->params.renderUpdateTexture(ctx->params.userPtr, fontImage, x,y, w,h, data);\n\t\t}\n\t}\n}\n\nstatic int nvg__allocTextAtlas(NVGcontext* ctx)\n{\n\tint iw, ih;\n\tnvg__flushTextTexture(ctx);\n\tif (ctx->fontImageIdx >= NVG_MAX_FONTIMAGES-1)\n\t\treturn 0;\n\t// if next fontImage already have a texture\n\tif (ctx->fontImages[ctx->fontImageIdx+1] != 0)\n\t\tnvgImageSize(ctx, ctx->fontImages[ctx->fontImageIdx+1], &iw, &ih);\n\telse { // calculate the new font image size and create it.\n\t\tnvgImageSize(ctx, ctx->fontImages[ctx->fontImageIdx], &iw, &ih);\n\t\tif (iw > ih)\n\t\t\tih *= 2;\n\t\telse\n\t\t\tiw *= 2;\n\t\tif (iw > NVG_MAX_FONTIMAGE_SIZE || ih > NVG_MAX_FONTIMAGE_SIZE)\n\t\t\tiw = ih = NVG_MAX_FONTIMAGE_SIZE;\n\t\tctx->fontImages[ctx->fontImageIdx+1] = ctx->params.renderCreateTexture(ctx->params.userPtr, NVG_TEXTURE_ALPHA, iw, ih, 0, NULL);\n\t}\n\t++ctx->fontImageIdx;\n\tfonsResetAtlas(ctx->fs, iw, ih);\n\treturn 1;\n}\n\nstatic void nvg__renderText(NVGcontext* ctx, NVGvertex* verts, int nverts)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tNVGpaint paint = state->fill;\n\n\t// Render triangles.\n\tpaint.image = ctx->fontImages[ctx->fontImageIdx];\n\n\t// Apply global alpha\n\tpaint.innerColor.a *= state->alpha;\n\tpaint.outerColor.a *= state->alpha;\n\n\tctx->params.renderTriangles(ctx->params.userPtr, &paint, state->compositeOperation, &state->scissor, verts, nverts, ctx->fringeWidth);\n\n\tctx->drawCallCount++;\n\tctx->textTriCount += nverts/3;\n}\n\nstatic int nvg__isTransformFlipped(const float *xform)\n{\n\tfloat det = xform[0] * xform[3] - xform[2] * xform[1];\n\treturn( det < 0);\n}\n\nfloat nvgText(NVGcontext* ctx, float x, float y, const char* string, const char* end)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tFONStextIter iter, prevIter;\n\tFONSquad q;\n\tNVGvertex* verts;\n\tfloat scale = nvg__getFontScale(state) * ctx->devicePxRatio;\n\tfloat invscale = 1.0f / scale;\n\tint cverts = 0;\n\tint nverts = 0;\n\tint isFlipped = nvg__isTransformFlipped(state->xform);\n\n\tif (end == NULL)\n\t\tend = string + strlen(string);\n\n\tif (state->fontId == FONS_INVALID) return x;\n\n\tfonsSetSize(ctx->fs, state->fontSize*scale);\n\tfonsSetSpacing(ctx->fs, state->letterSpacing*scale);\n\tfonsSetBlur(ctx->fs, state->fontBlur*scale);\n\tfonsSetAlign(ctx->fs, state->textAlign);\n\tfonsSetFont(ctx->fs, state->fontId);\n\n\tcverts = nvg__maxi(2, (int)(end - string)) * 6; // conservative estimate.\n\tverts = nvg__allocTempVerts(ctx, cverts);\n\tif (verts == NULL) return x;\n\n\tfonsTextIterInit(ctx->fs, &iter, x*scale, y*scale, string, end, FONS_GLYPH_BITMAP_REQUIRED);\n\tprevIter = iter;\n\twhile (fonsTextIterNext(ctx->fs, &iter, &q)) {\n\t\tfloat c[4*2];\n\t\tif (iter.prevGlyphIndex == -1) { // can not retrieve glyph?\n\t\t\tif (nverts != 0) {\n\t\t\t\tnvg__renderText(ctx, verts, nverts);\n\t\t\t\tnverts = 0;\n\t\t\t}\n\t\t\tif (!nvg__allocTextAtlas(ctx))\n\t\t\t\tbreak; // no memory :(\n\t\t\titer = prevIter;\n\t\t\tfonsTextIterNext(ctx->fs, &iter, &q); // try again\n\t\t\tif (iter.prevGlyphIndex == -1) // still can not find glyph?\n\t\t\t\tbreak;\n\t\t}\n\t\tprevIter = iter;\n\t\tif(isFlipped) {\n\t\t\tfloat tmp;\n\n\t\t\ttmp = q.y0; q.y0 = q.y1; q.y1 = tmp;\n\t\t\ttmp = q.t0; q.t0 = q.t1; q.t1 = tmp;\n\t\t}\n\t\t// Transform corners.\n\t\tnvgTransformPoint(&c[0],&c[1], state->xform, q.x0*invscale, q.y0*invscale);\n\t\tnvgTransformPoint(&c[2],&c[3], state->xform, q.x1*invscale, q.y0*invscale);\n\t\tnvgTransformPoint(&c[4],&c[5], state->xform, q.x1*invscale, q.y1*invscale);\n\t\tnvgTransformPoint(&c[6],&c[7], state->xform, q.x0*invscale, q.y1*invscale);\n\t\t// Create triangles\n\t\tif (nverts+6 <= cverts) {\n\t\t\tnvg__vset(&verts[nverts], c[0], c[1], q.s0, q.t0); nverts++;\n\t\t\tnvg__vset(&verts[nverts], c[4], c[5], q.s1, q.t1); nverts++;\n\t\t\tnvg__vset(&verts[nverts], c[2], c[3], q.s1, q.t0); nverts++;\n\t\t\tnvg__vset(&verts[nverts], c[0], c[1], q.s0, q.t0); nverts++;\n\t\t\tnvg__vset(&verts[nverts], c[6], c[7], q.s0, q.t1); nverts++;\n\t\t\tnvg__vset(&verts[nverts], c[4], c[5], q.s1, q.t1); nverts++;\n\t\t}\n\t}\n\n\t// TODO: add back-end bit to do this just once per frame.\n\tnvg__flushTextTexture(ctx);\n\n\tnvg__renderText(ctx, verts, nverts);\n\n\treturn iter.nextx / scale;\n}\n\nvoid nvgTextBox(NVGcontext* ctx, float x, float y, float breakRowWidth, const char* string, const char* end)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tNVGtextRow rows[2];\n\tint nrows = 0, i;\n\tint oldAlign = state->textAlign;\n\tint haling = state->textAlign & (NVG_ALIGN_LEFT | NVG_ALIGN_CENTER | NVG_ALIGN_RIGHT);\n\tint valign = state->textAlign & (NVG_ALIGN_TOP | NVG_ALIGN_MIDDLE | NVG_ALIGN_BOTTOM | NVG_ALIGN_BASELINE);\n\tfloat lineh = 0;\n\n\tif (state->fontId == FONS_INVALID) return;\n\n\tnvgTextMetrics(ctx, NULL, NULL, &lineh);\n\n\tstate->textAlign = NVG_ALIGN_LEFT | valign;\n\n\twhile ((nrows = nvgTextBreakLines(ctx, string, end, breakRowWidth, rows, 2))) {\n\t\tfor (i = 0; i < nrows; i++) {\n\t\t\tNVGtextRow* row = &rows[i];\n\t\t\tif (haling & NVG_ALIGN_LEFT)\n\t\t\t\tnvgText(ctx, x, y, row->start, row->end);\n\t\t\telse if (haling & NVG_ALIGN_CENTER)\n\t\t\t\tnvgText(ctx, x + breakRowWidth*0.5f - row->width*0.5f, y, row->start, row->end);\n\t\t\telse if (haling & NVG_ALIGN_RIGHT)\n\t\t\t\tnvgText(ctx, x + breakRowWidth - row->width, y, row->start, row->end);\n\t\t\ty += lineh * state->lineHeight;\n\t\t}\n\t\tstring = rows[nrows-1].next;\n\t}\n\n\tstate->textAlign = oldAlign;\n}\n\nint nvgTextGlyphPositions(NVGcontext* ctx, float x, float y, const char* string, const char* end, NVGglyphPosition* positions, int maxPositions)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tfloat scale = nvg__getFontScale(state) * ctx->devicePxRatio;\n\tfloat invscale = 1.0f / scale;\n\tFONStextIter iter, prevIter;\n\tFONSquad q;\n\tint npos = 0;\n\n\tif (state->fontId == FONS_INVALID) return 0;\n\n\tif (end == NULL)\n\t\tend = string + strlen(string);\n\n\tif (string == end)\n\t\treturn 0;\n\n\tfonsSetSize(ctx->fs, state->fontSize*scale);\n\tfonsSetSpacing(ctx->fs, state->letterSpacing*scale);\n\tfonsSetBlur(ctx->fs, state->fontBlur*scale);\n\tfonsSetAlign(ctx->fs, state->textAlign);\n\tfonsSetFont(ctx->fs, state->fontId);\n\n\tfonsTextIterInit(ctx->fs, &iter, x*scale, y*scale, string, end, FONS_GLYPH_BITMAP_OPTIONAL);\n\tprevIter = iter;\n\twhile (fonsTextIterNext(ctx->fs, &iter, &q)) {\n\t\tif (iter.prevGlyphIndex < 0 && nvg__allocTextAtlas(ctx)) { // can not retrieve glyph?\n\t\t\titer = prevIter;\n\t\t\tfonsTextIterNext(ctx->fs, &iter, &q); // try again\n\t\t}\n\t\tprevIter = iter;\n\t\tpositions[npos].str = iter.str;\n\t\tpositions[npos].x = iter.x * invscale;\n\t\tpositions[npos].minx = nvg__minf(iter.x, q.x0) * invscale;\n\t\tpositions[npos].maxx = nvg__maxf(iter.nextx, q.x1) * invscale;\n\t\tnpos++;\n\t\tif (npos >= maxPositions)\n\t\t\tbreak;\n\t}\n\n\treturn npos;\n}\n\nenum NVGcodepointType {\n\tNVG_SPACE,\n\tNVG_NEWLINE,\n\tNVG_CHAR,\n\tNVG_CJK_CHAR,\n};\n\nint nvgTextBreakLines(NVGcontext* ctx, const char* string, const char* end, float breakRowWidth, NVGtextRow* rows, int maxRows)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tfloat scale = nvg__getFontScale(state) * ctx->devicePxRatio;\n\tfloat invscale = 1.0f / scale;\n\tFONStextIter iter, prevIter;\n\tFONSquad q;\n\tint nrows = 0;\n\tfloat rowStartX = 0;\n\tfloat rowWidth = 0;\n\tfloat rowMinX = 0;\n\tfloat rowMaxX = 0;\n\tconst char* rowStart = NULL;\n\tconst char* rowEnd = NULL;\n\tconst char* wordStart = NULL;\n\tfloat wordStartX = 0;\n\tfloat wordMinX = 0;\n\tconst char* breakEnd = NULL;\n\tfloat breakWidth = 0;\n\tfloat breakMaxX = 0;\n\tint type = NVG_SPACE, ptype = NVG_SPACE;\n\tunsigned int pcodepoint = 0;\n\n\tif (maxRows == 0) return 0;\n\tif (state->fontId == FONS_INVALID) return 0;\n\n\tif (end == NULL)\n\t\tend = string + strlen(string);\n\n\tif (string == end) return 0;\n\n\tfonsSetSize(ctx->fs, state->fontSize*scale);\n\tfonsSetSpacing(ctx->fs, state->letterSpacing*scale);\n\tfonsSetBlur(ctx->fs, state->fontBlur*scale);\n\tfonsSetAlign(ctx->fs, state->textAlign);\n\tfonsSetFont(ctx->fs, state->fontId);\n\n\tbreakRowWidth *= scale;\n\n\tfonsTextIterInit(ctx->fs, &iter, 0, 0, string, end, FONS_GLYPH_BITMAP_OPTIONAL);\n\tprevIter = iter;\n\twhile (fonsTextIterNext(ctx->fs, &iter, &q)) {\n\t\tif (iter.prevGlyphIndex < 0 && nvg__allocTextAtlas(ctx)) { // can not retrieve glyph?\n\t\t\titer = prevIter;\n\t\t\tfonsTextIterNext(ctx->fs, &iter, &q); // try again\n\t\t}\n\t\tprevIter = iter;\n\t\tswitch (iter.codepoint) {\n\t\t\tcase 9:\t\t\t// \\t\n\t\t\tcase 11:\t\t// \\v\n\t\t\tcase 12:\t\t// \\f\n\t\t\tcase 32:\t\t// space\n\t\t\tcase 0x00a0:\t// NBSP\n\t\t\t\ttype = NVG_SPACE;\n\t\t\t\tbreak;\n\t\t\tcase 10:\t\t// \\n\n\t\t\t\ttype = pcodepoint == 13 ? NVG_SPACE : NVG_NEWLINE;\n\t\t\t\tbreak;\n\t\t\tcase 13:\t\t// \\r\n\t\t\t\ttype = pcodepoint == 10 ? NVG_SPACE : NVG_NEWLINE;\n\t\t\t\tbreak;\n\t\t\tcase 0x0085:\t// NEL\n\t\t\t\ttype = NVG_NEWLINE;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif ((iter.codepoint >= 0x4E00 && iter.codepoint <= 0x9FFF) ||\n\t\t\t\t\t(iter.codepoint >= 0x3000 && iter.codepoint <= 0x30FF) ||\n\t\t\t\t\t(iter.codepoint >= 0xFF00 && iter.codepoint <= 0xFFEF) ||\n\t\t\t\t\t(iter.codepoint >= 0x1100 && iter.codepoint <= 0x11FF) ||\n\t\t\t\t\t(iter.codepoint >= 0x3130 && iter.codepoint <= 0x318F) ||\n\t\t\t\t\t(iter.codepoint >= 0xAC00 && iter.codepoint <= 0xD7AF))\n\t\t\t\t\ttype = NVG_CJK_CHAR;\n\t\t\t\telse\n\t\t\t\t\ttype = NVG_CHAR;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (type == NVG_NEWLINE) {\n\t\t\t// Always handle new lines.\n\t\t\trows[nrows].start = rowStart != NULL ? rowStart : iter.str;\n\t\t\trows[nrows].end = rowEnd != NULL ? rowEnd : iter.str;\n\t\t\trows[nrows].width = rowWidth * invscale;\n\t\t\trows[nrows].minx = rowMinX * invscale;\n\t\t\trows[nrows].maxx = rowMaxX * invscale;\n\t\t\trows[nrows].next = iter.next;\n\t\t\tnrows++;\n\t\t\tif (nrows >= maxRows)\n\t\t\t\treturn nrows;\n\t\t\t// Set null break point\n\t\t\tbreakEnd = rowStart;\n\t\t\tbreakWidth = 0.0;\n\t\t\tbreakMaxX = 0.0;\n\t\t\t// Indicate to skip the white space at the beginning of the row.\n\t\t\trowStart = NULL;\n\t\t\trowEnd = NULL;\n\t\t\trowWidth = 0;\n\t\t\trowMinX = rowMaxX = 0;\n\t\t} else {\n\t\t\tif (rowStart == NULL) {\n\t\t\t\t// Skip white space until the beginning of the line\n\t\t\t\tif (type == NVG_CHAR || type == NVG_CJK_CHAR) {\n\t\t\t\t\t// The current char is the row so far\n\t\t\t\t\trowStartX = iter.x;\n\t\t\t\t\trowStart = iter.str;\n\t\t\t\t\trowEnd = iter.next;\n\t\t\t\t\trowWidth = iter.nextx - rowStartX;\n\t\t\t\t\trowMinX = q.x0 - rowStartX;\n\t\t\t\t\trowMaxX = q.x1 - rowStartX;\n\t\t\t\t\twordStart = iter.str;\n\t\t\t\t\twordStartX = iter.x;\n\t\t\t\t\twordMinX = q.x0 - rowStartX;\n\t\t\t\t\t// Set null break point\n\t\t\t\t\tbreakEnd = rowStart;\n\t\t\t\t\tbreakWidth = 0.0;\n\t\t\t\t\tbreakMaxX = 0.0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfloat nextWidth = iter.nextx - rowStartX;\n\n\t\t\t\t// track last non-white space character\n\t\t\t\tif (type == NVG_CHAR || type == NVG_CJK_CHAR) {\n\t\t\t\t\trowEnd = iter.next;\n\t\t\t\t\trowWidth = iter.nextx - rowStartX;\n\t\t\t\t\trowMaxX = q.x1 - rowStartX;\n\t\t\t\t}\n\t\t\t\t// track last end of a word\n\t\t\t\tif (((ptype == NVG_CHAR || ptype == NVG_CJK_CHAR) && type == NVG_SPACE) || type == NVG_CJK_CHAR) {\n\t\t\t\t\tbreakEnd = iter.str;\n\t\t\t\t\tbreakWidth = rowWidth;\n\t\t\t\t\tbreakMaxX = rowMaxX;\n\t\t\t\t}\n\t\t\t\t// track last beginning of a word\n\t\t\t\tif ((ptype == NVG_SPACE && (type == NVG_CHAR || type == NVG_CJK_CHAR)) || type == NVG_CJK_CHAR) {\n\t\t\t\t\twordStart = iter.str;\n\t\t\t\t\twordStartX = iter.x;\n\t\t\t\t\twordMinX = q.x0;\n\t\t\t\t}\n\n\t\t\t\t// Break to new line when a character is beyond break width.\n\t\t\t\tif ((type == NVG_CHAR || type == NVG_CJK_CHAR) && nextWidth > breakRowWidth) {\n\t\t\t\t\t// The run length is too long, need to break to new line.\n\t\t\t\t\tif (breakEnd == rowStart) {\n\t\t\t\t\t\t// The current word is longer than the row length, just break it from here.\n\t\t\t\t\t\trows[nrows].start = rowStart;\n\t\t\t\t\t\trows[nrows].end = iter.str;\n\t\t\t\t\t\trows[nrows].width = rowWidth * invscale;\n\t\t\t\t\t\trows[nrows].minx = rowMinX * invscale;\n\t\t\t\t\t\trows[nrows].maxx = rowMaxX * invscale;\n\t\t\t\t\t\trows[nrows].next = iter.str;\n\t\t\t\t\t\tnrows++;\n\t\t\t\t\t\tif (nrows >= maxRows)\n\t\t\t\t\t\t\treturn nrows;\n\t\t\t\t\t\trowStartX = iter.x;\n\t\t\t\t\t\trowStart = iter.str;\n\t\t\t\t\t\trowEnd = iter.next;\n\t\t\t\t\t\trowWidth = iter.nextx - rowStartX;\n\t\t\t\t\t\trowMinX = q.x0 - rowStartX;\n\t\t\t\t\t\trowMaxX = q.x1 - rowStartX;\n\t\t\t\t\t\twordStart = iter.str;\n\t\t\t\t\t\twordStartX = iter.x;\n\t\t\t\t\t\twordMinX = q.x0 - rowStartX;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Break the line from the end of the last word, and start new line from the beginning of the new.\n\t\t\t\t\t\trows[nrows].start = rowStart;\n\t\t\t\t\t\trows[nrows].end = breakEnd;\n\t\t\t\t\t\trows[nrows].width = breakWidth * invscale;\n\t\t\t\t\t\trows[nrows].minx = rowMinX * invscale;\n\t\t\t\t\t\trows[nrows].maxx = breakMaxX * invscale;\n\t\t\t\t\t\trows[nrows].next = wordStart;\n\t\t\t\t\t\tnrows++;\n\t\t\t\t\t\tif (nrows >= maxRows)\n\t\t\t\t\t\t\treturn nrows;\n\t\t\t\t\t\t// Update row\n\t\t\t\t\t\trowStartX = wordStartX;\n\t\t\t\t\t\trowStart = wordStart;\n\t\t\t\t\t\trowEnd = iter.next;\n\t\t\t\t\t\trowWidth = iter.nextx - rowStartX;\n\t\t\t\t\t\trowMinX = wordMinX - rowStartX;\n\t\t\t\t\t\trowMaxX = q.x1 - rowStartX;\n\t\t\t\t\t}\n\t\t\t\t\t// Set null break point\n\t\t\t\t\tbreakEnd = rowStart;\n\t\t\t\t\tbreakWidth = 0.0;\n\t\t\t\t\tbreakMaxX = 0.0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpcodepoint = iter.codepoint;\n\t\tptype = type;\n\t}\n\n\t// Break the line from the end of the last word, and start new line from the beginning of the new.\n\tif (rowStart != NULL) {\n\t\trows[nrows].start = rowStart;\n\t\trows[nrows].end = rowEnd;\n\t\trows[nrows].width = rowWidth * invscale;\n\t\trows[nrows].minx = rowMinX * invscale;\n\t\trows[nrows].maxx = rowMaxX * invscale;\n\t\trows[nrows].next = end;\n\t\tnrows++;\n\t}\n\n\treturn nrows;\n}\n\nfloat nvgTextBounds(NVGcontext* ctx, float x, float y, const char* string, const char* end, float* bounds)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tfloat scale = nvg__getFontScale(state) * ctx->devicePxRatio;\n\tfloat invscale = 1.0f / scale;\n\tfloat width;\n\n\tif (state->fontId == FONS_INVALID) return 0;\n\n\tfonsSetSize(ctx->fs, state->fontSize*scale);\n\tfonsSetSpacing(ctx->fs, state->letterSpacing*scale);\n\tfonsSetBlur(ctx->fs, state->fontBlur*scale);\n\tfonsSetAlign(ctx->fs, state->textAlign);\n\tfonsSetFont(ctx->fs, state->fontId);\n\n\twidth = fonsTextBounds(ctx->fs, x*scale, y*scale, string, end, bounds);\n\tif (bounds != NULL) {\n\t\t// Use line bounds for height.\n\t\tfonsLineBounds(ctx->fs, y*scale, &bounds[1], &bounds[3]);\n\t\tbounds[0] *= invscale;\n\t\tbounds[1] *= invscale;\n\t\tbounds[2] *= invscale;\n\t\tbounds[3] *= invscale;\n\t}\n\treturn width * invscale;\n}\n\nvoid nvgTextBoxBounds(NVGcontext* ctx, float x, float y, float breakRowWidth, const char* string, const char* end, float* bounds)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tNVGtextRow rows[2];\n\tfloat scale = nvg__getFontScale(state) * ctx->devicePxRatio;\n\tfloat invscale = 1.0f / scale;\n\tint nrows = 0, i;\n\tint oldAlign = state->textAlign;\n\tint haling = state->textAlign & (NVG_ALIGN_LEFT | NVG_ALIGN_CENTER | NVG_ALIGN_RIGHT);\n\tint valign = state->textAlign & (NVG_ALIGN_TOP | NVG_ALIGN_MIDDLE | NVG_ALIGN_BOTTOM | NVG_ALIGN_BASELINE);\n\tfloat lineh = 0, rminy = 0, rmaxy = 0;\n\tfloat minx, miny, maxx, maxy;\n\n\tif (state->fontId == FONS_INVALID) {\n\t\tif (bounds != NULL)\n\t\t\tbounds[0] = bounds[1] = bounds[2] = bounds[3] = 0.0f;\n\t\treturn;\n\t}\n\n\tnvgTextMetrics(ctx, NULL, NULL, &lineh);\n\n\tstate->textAlign = NVG_ALIGN_LEFT | valign;\n\n\tminx = maxx = x;\n\tminy = maxy = y;\n\n\tfonsSetSize(ctx->fs, state->fontSize*scale);\n\tfonsSetSpacing(ctx->fs, state->letterSpacing*scale);\n\tfonsSetBlur(ctx->fs, state->fontBlur*scale);\n\tfonsSetAlign(ctx->fs, state->textAlign);\n\tfonsSetFont(ctx->fs, state->fontId);\n\tfonsLineBounds(ctx->fs, 0, &rminy, &rmaxy);\n\trminy *= invscale;\n\trmaxy *= invscale;\n\n\twhile ((nrows = nvgTextBreakLines(ctx, string, end, breakRowWidth, rows, 2))) {\n\t\tfor (i = 0; i < nrows; i++) {\n\t\t\tNVGtextRow* row = &rows[i];\n\t\t\tfloat rminx, rmaxx, dx = 0;\n\t\t\t// Horizontal bounds\n\t\t\tif (haling & NVG_ALIGN_LEFT)\n\t\t\t\tdx = 0;\n\t\t\telse if (haling & NVG_ALIGN_CENTER)\n\t\t\t\tdx = breakRowWidth*0.5f - row->width*0.5f;\n\t\t\telse if (haling & NVG_ALIGN_RIGHT)\n\t\t\t\tdx = breakRowWidth - row->width;\n\t\t\trminx = x + row->minx + dx;\n\t\t\trmaxx = x + row->maxx + dx;\n\t\t\tminx = nvg__minf(minx, rminx);\n\t\t\tmaxx = nvg__maxf(maxx, rmaxx);\n\t\t\t// Vertical bounds.\n\t\t\tminy = nvg__minf(miny, y + rminy);\n\t\t\tmaxy = nvg__maxf(maxy, y + rmaxy);\n\n\t\t\ty += lineh * state->lineHeight;\n\t\t}\n\t\tstring = rows[nrows-1].next;\n\t}\n\n\tstate->textAlign = oldAlign;\n\n\tif (bounds != NULL) {\n\t\tbounds[0] = minx;\n\t\tbounds[1] = miny;\n\t\tbounds[2] = maxx;\n\t\tbounds[3] = maxy;\n\t}\n}\n\nvoid nvgTextMetrics(NVGcontext* ctx, float* ascender, float* descender, float* lineh)\n{\n\tNVGstate* state = nvg__getState(ctx);\n\tfloat scale = nvg__getFontScale(state) * ctx->devicePxRatio;\n\tfloat invscale = 1.0f / scale;\n\n\tif (state->fontId == FONS_INVALID) return;\n\n\tfonsSetSize(ctx->fs, state->fontSize*scale);\n\tfonsSetSpacing(ctx->fs, state->letterSpacing*scale);\n\tfonsSetBlur(ctx->fs, state->fontBlur*scale);\n\tfonsSetAlign(ctx->fs, state->textAlign);\n\tfonsSetFont(ctx->fs, state->fontId);\n\n\tfonsVertMetrics(ctx->fs, ascender, descender, lineh);\n\tif (ascender != NULL)\n\t\t*ascender *= invscale;\n\tif (descender != NULL)\n\t\t*descender *= invscale;\n\tif (lineh != NULL)\n\t\t*lineh *= invscale;\n}\n// vim: ft=c nu noet ts=4\n",
			"file": "nanovg/src/nanovg.c",
			"file_size": 77570,
			"file_write_time": 132769282031963772,
			"settings":
			{
				"buffer_size": 77565,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 171 files for \"renderStroke\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/obsolete/nanovg_gl2.h:\n  803  }\n  804  \n  805: static void glnvg__renderStroke(void* uptr, struct NVGpaint* paint, struct NVGscissor* scissor, float fringe,\n  806  \t\t\t\t\t\t\t\tfloat width, const struct NVGpath* paths, int npaths)\n  807  {\n  ...\n  920  \tparams.renderFlush = glnvg__renderFlush;\n  921  \tparams.renderFill = glnvg__renderFill;\n  922: \tparams.renderStroke = glnvg__renderStroke;\n  923  \tparams.renderTriangles = glnvg__renderTriangles;\n  924  \tparams.renderDelete = glnvg__renderDelete;\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/obsolete/nanovg_gl3.h:\n  806  }\n  807  \n  808: static void glnvg__renderStroke(void* uptr, struct NVGpaint* paint, struct NVGscissor* scissor, float fringe,\n  809  \t\t\t\t\t\t\t\tfloat width, const struct NVGpath* paths, int npaths)\n  810  {\n  ...\n  925  \tparams.renderFlush = glnvg__renderFlush;\n  926  \tparams.renderFill = glnvg__renderFill;\n  927: \tparams.renderStroke = glnvg__renderStroke;\n  928  \tparams.renderTriangles = glnvg__renderTriangles;\n  929  \tparams.renderDelete = glnvg__renderDelete;\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/nanovg.c:\n 2281  \t\tnvg__expandStroke(ctx, strokeWidth*0.5f, 0.0f, state->lineCap, state->lineJoin, state->miterLimit);\n 2282  \n 2283: \tctx->params.renderStroke(ctx->params.userPtr, &strokePaint, state->compositeOperation, &state->scissor, ctx->fringeWidth,\n 2284  \t\t\t\t\t\t\t strokeWidth, ctx->cache->paths, ctx->cache->npaths);\n 2285  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/nanovg.h:\n  670  \tvoid (*renderFlush)(void* uptr);\n  671  \tvoid (*renderFill)(void* uptr, NVGpaint* paint, NVGcompositeOperationState compositeOperation, NVGscissor* scissor, float fringe, const float* bounds, const NVGpath* paths, int npaths);\n  672: \tvoid (*renderStroke)(void* uptr, NVGpaint* paint, NVGcompositeOperationState compositeOperation, NVGscissor* scissor, float fringe, float strokeWidth, const NVGpath* paths, int npaths);\n  673  \tvoid (*renderTriangles)(void* uptr, NVGpaint* paint, NVGcompositeOperationState compositeOperation, NVGscissor* scissor, const NVGvertex* verts, int nverts, float fringe);\n  674  \tvoid (*renderDelete)(void* uptr);\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/nanovg_gl.h:\n 1436  }\n 1437  \n 1438: static void glnvg__renderStroke(void* uptr, NVGpaint* paint, NVGcompositeOperationState compositeOperation, NVGscissor* scissor, float fringe,\n 1439  \t\t\t\t\t\t\t\tfloat strokeWidth, const NVGpath* paths, int npaths)\n 1440  {\n ....\n 1587  \tparams.renderFlush = glnvg__renderFlush;\n 1588  \tparams.renderFill = glnvg__renderFill;\n 1589: \tparams.renderStroke = glnvg__renderStroke;\n 1590  \tparams.renderTriangles = glnvg__renderTriangles;\n 1591  \tparams.renderDelete = glnvg__renderDelete;\n\n11 matches across 5 files\n\n\nSearching 171 files for \"renderStroke\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/obsolete/nanovg_gl2.h:\n  803  }\n  804  \n  805: static void glnvg__renderStroke(void* uptr, struct NVGpaint* paint, struct NVGscissor* scissor, float fringe,\n  806  \t\t\t\t\t\t\t\tfloat width, const struct NVGpath* paths, int npaths)\n  807  {\n  ...\n  920  \tparams.renderFlush = glnvg__renderFlush;\n  921  \tparams.renderFill = glnvg__renderFill;\n  922: \tparams.renderStroke = glnvg__renderStroke;\n  923  \tparams.renderTriangles = glnvg__renderTriangles;\n  924  \tparams.renderDelete = glnvg__renderDelete;\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/obsolete/nanovg_gl3.h:\n  806  }\n  807  \n  808: static void glnvg__renderStroke(void* uptr, struct NVGpaint* paint, struct NVGscissor* scissor, float fringe,\n  809  \t\t\t\t\t\t\t\tfloat width, const struct NVGpath* paths, int npaths)\n  810  {\n  ...\n  925  \tparams.renderFlush = glnvg__renderFlush;\n  926  \tparams.renderFill = glnvg__renderFill;\n  927: \tparams.renderStroke = glnvg__renderStroke;\n  928  \tparams.renderTriangles = glnvg__renderTriangles;\n  929  \tparams.renderDelete = glnvg__renderDelete;\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/nanovg.c:\n 2281  \t\tnvg__expandStroke(ctx, strokeWidth*0.5f, 0.0f, state->lineCap, state->lineJoin, state->miterLimit);\n 2282  \n 2283: \tctx->params.renderStroke(ctx->params.userPtr, &strokePaint, state->compositeOperation, &state->scissor, ctx->fringeWidth,\n 2284  \t\t\t\t\t\t\t strokeWidth, ctx->cache->paths, ctx->cache->npaths);\n 2285  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/nanovg.h:\n  670  \tvoid (*renderFlush)(void* uptr);\n  671  \tvoid (*renderFill)(void* uptr, NVGpaint* paint, NVGcompositeOperationState compositeOperation, NVGscissor* scissor, float fringe, const float* bounds, const NVGpath* paths, int npaths);\n  672: \tvoid (*renderStroke)(void* uptr, NVGpaint* paint, NVGcompositeOperationState compositeOperation, NVGscissor* scissor, float fringe, float strokeWidth, const NVGpath* paths, int npaths);\n  673  \tvoid (*renderTriangles)(void* uptr, NVGpaint* paint, NVGcompositeOperationState compositeOperation, NVGscissor* scissor, const NVGvertex* verts, int nverts, float fringe);\n  674  \tvoid (*renderDelete)(void* uptr);\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/nanovg_gl.h:\n 1436  }\n 1437  \n 1438: static void glnvg__renderStroke(void* uptr, NVGpaint* paint, NVGcompositeOperationState compositeOperation, NVGscissor* scissor, float fringe,\n 1439  \t\t\t\t\t\t\t\tfloat strokeWidth, const NVGpath* paths, int npaths)\n 1440  {\n ....\n 1587  \tparams.renderFlush = glnvg__renderFlush;\n 1588  \tparams.renderFill = glnvg__renderFill;\n 1589: \tparams.renderStroke = glnvg__renderStroke;\n 1590  \tparams.renderTriangles = glnvg__renderTriangles;\n 1591  \tparams.renderDelete = glnvg__renderDelete;\n\n11 matches across 5 files\n\n\nSearching 171 files for \"renderStroke\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/obsolete/nanovg_gl2.h:\n  803  }\n  804  \n  805: static void glnvg__renderStroke(void* uptr, struct NVGpaint* paint, struct NVGscissor* scissor, float fringe,\n  806  \t\t\t\t\t\t\t\tfloat width, const struct NVGpath* paths, int npaths)\n  807  {\n  ...\n  920  \tparams.renderFlush = glnvg__renderFlush;\n  921  \tparams.renderFill = glnvg__renderFill;\n  922: \tparams.renderStroke = glnvg__renderStroke;\n  923  \tparams.renderTriangles = glnvg__renderTriangles;\n  924  \tparams.renderDelete = glnvg__renderDelete;\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/obsolete/nanovg_gl3.h:\n  806  }\n  807  \n  808: static void glnvg__renderStroke(void* uptr, struct NVGpaint* paint, struct NVGscissor* scissor, float fringe,\n  809  \t\t\t\t\t\t\t\tfloat width, const struct NVGpath* paths, int npaths)\n  810  {\n  ...\n  925  \tparams.renderFlush = glnvg__renderFlush;\n  926  \tparams.renderFill = glnvg__renderFill;\n  927: \tparams.renderStroke = glnvg__renderStroke;\n  928  \tparams.renderTriangles = glnvg__renderTriangles;\n  929  \tparams.renderDelete = glnvg__renderDelete;\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/nanovg.c:\n 2281  \t\tnvg__expandStroke(ctx, strokeWidth*0.5f, 0.0f, state->lineCap, state->lineJoin, state->miterLimit);\n 2282  \n 2283: \tctx->params.renderStroke(ctx->params.userPtr, &strokePaint, state->compositeOperation, &state->scissor, ctx->fringeWidth,\n 2284  \t\t\t\t\t\t\t strokeWidth, ctx->cache->paths, ctx->cache->npaths);\n 2285  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/nanovg.h:\n  670  \tvoid (*renderFlush)(void* uptr);\n  671  \tvoid (*renderFill)(void* uptr, NVGpaint* paint, NVGcompositeOperationState compositeOperation, NVGscissor* scissor, float fringe, const float* bounds, const NVGpath* paths, int npaths);\n  672: \tvoid (*renderStroke)(void* uptr, NVGpaint* paint, NVGcompositeOperationState compositeOperation, NVGscissor* scissor, float fringe, float strokeWidth, const NVGpath* paths, int npaths);\n  673  \tvoid (*renderTriangles)(void* uptr, NVGpaint* paint, NVGcompositeOperationState compositeOperation, NVGscissor* scissor, const NVGvertex* verts, int nverts, float fringe);\n  674  \tvoid (*renderDelete)(void* uptr);\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/nanovg_gl.h:\n 1436  }\n 1437  \n 1438: static void glnvg__renderStroke(void* uptr, NVGpaint* paint, NVGcompositeOperationState compositeOperation, NVGscissor* scissor, float fringe,\n 1439  \t\t\t\t\t\t\t\tfloat strokeWidth, const NVGpath* paths, int npaths)\n 1440  {\n ....\n 1587  \tparams.renderFlush = glnvg__renderFlush;\n 1588  \tparams.renderFill = glnvg__renderFill;\n 1589: \tparams.renderStroke = glnvg__renderStroke;\n 1590  \tparams.renderTriangles = glnvg__renderTriangles;\n 1591  \tparams.renderDelete = glnvg__renderDelete;\n\n11 matches across 5 files\n\n\nSearching 171 files for \"#include\" (regex, case sensitive)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg-qjs.c:\n    1  \n    2  #ifdef NANOVG_GLEW\n    3: #include <GL/glew.h>\n    4  #endif\n    5  #define GLFW_INCLUDE_GLEXT\n    6: #include <GLFW/glfw3.h>\n    7  \n    8: #include \"nanovg.h\"\n    9  //#define NANOVG_GL3_IMPLEMENTATION\n   10: #include \"nanovg_gl.h\"\n   11  \n   12: #include \"nanovg-qjs.h\"\n   13  \n   14: #include <assert.h>\n   15: #include <cutils.h>\n   16: #include <quickjs.h>\n   17: #include <quickjs-libc.h>\n   18: #include <stdlib.h>\n   19: #include <string.h>\n   20  \n   21  static int\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg-qjs.h:\n    2  #define NANOVG_QJS_H\n    3  \n    4: #include <quickjs.h>\n    5  \n    6  #if defined(_WIN32) || defined(__MINGW32__)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/build/rpi4/CMakeFiles/CMakeOutput.log:\n   36  GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072\n   37  ignoring nonexistent directory \"/usr/lib/gcc/x86_64-linux-gnu/11/include-fixed\"\n   38: #include \"...\" search starts here:\n   39: #include <...> search starts here:\n   40   /usr/lib/gcc/x86_64-linux-gnu/11/include\n   41   /usr/local/include/x86_64-linux-gnu\n   ..\n  121    ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]\n  122    ignore line: [ignoring nonexistent directory \"/usr/lib/gcc/x86_64-linux-gnu/11/include-fixed\"]\n  123:   ignore line: [#include \"...\" search starts here:]\n  124:   ignore line: [#include <...> search starts here:]\n  125    ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/11/include]\n  126    ignore line: [ /usr/local/include/x86_64-linux-gnu]\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/build/x86_64-linux-debug/CMakeFiles/CMakeOutput.log:\n   38  ignoring nonexistent directory \"/usr/lib/gcc/x86_64-linux-gnu/11/include-fixed\"\n   39  ignoring nonexistent directory \"/usr/lib/gcc/x86_64-linux-gnu/11/../../../../x86_64-linux-gnu/include\"\n   40: #include \"...\" search starts here:\n   41: #include <...> search starts here:\n   42   /usr/local/include\n   43   /home/roman/.wasmedge/include\n   ..\n  128    ignore line: [ignoring nonexistent directory \"/usr/lib/gcc/x86_64-linux-gnu/11/include-fixed\"]\n  129    ignore line: [ignoring nonexistent directory \"/usr/lib/gcc/x86_64-linux-gnu/11/../../../../x86_64-linux-gnu/include\"]\n  130:   ignore line: [#include \"...\" search starts here:]\n  131:   ignore line: [#include <...> search starts here:]\n  132    ignore line: [ /usr/local/include]\n  133    ignore line: [ /home/roman/.wasmedge/include]\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/build/x86_64-w64-mingw32/CMakeFiles/CMakeOutput.log:\n   35  GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072\n   36  ignoring nonexistent directory \"/usr/lib/gcc/x86_64-w64-mingw32/10-win32/../../../../x86_64-w64-mingw32/sys-include\"\n   37: #include \"...\" search starts here:\n   38: #include <...> search starts here:\n   39   /usr/local/include\n   40   /home/roman/.wasmedge/include\n   ..\n  118    ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]\n  119    ignore line: [ignoring nonexistent directory \"/usr/lib/gcc/x86_64-w64-mingw32/10-win32/../../../../x86_64-w64-mingw32/sys-include\"]\n  120:   ignore line: [#include \"...\" search starts here:]\n  121:   ignore line: [#include <...> search starts here:]\n  122    ignore line: [ /usr/local/include]\n  123    ignore line: [ /home/roman/.wasmedge/include]\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/README.md:\n   20  ```C\n   21  #define NANOVG_GL2_IMPLEMENTATION\t// Use GL2 implementation.\n   22: #include \"nanovg_gl.h\"\n   23  ...\n   24  struct NVGcontext* vg = nvgCreateGL2(NVG_ANTIALIAS | NVG_STENCIL_STROKES);\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/example/demo.c:\n    1: #include \"demo.h\"\n    2: #include <stdio.h>\n    3: #include <string.h>\n    4: #include <math.h>\n    5  #ifdef NANOVG_GLEW\n    6  #  include <GL/glew.h>\n    7  #endif\n    8: #include <GLFW/glfw3.h>\n    9: #include \"nanovg.h\"\n   10  #define STB_IMAGE_WRITE_IMPLEMENTATION\n   11: #include \"stb_image_write.h\"\n   12  \n   13  \n   ..\n   15  #define snprintf _snprintf\n   16  #elif !defined(__MINGW32__)\n   17: #include <iconv.h>\n   18  #endif\n   19  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/example/demo.h:\n    2  #define DEMO_H\n    3  \n    4: #include \"nanovg.h\"\n    5  \n    6  #ifdef __cplusplus\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/example/example_fbo.c:\n   17  //\n   18  \n   19: #include <stdio.h>\n   20  #ifdef NANOVG_GLEW\n   21  #\tinclude <GL/glew.h>\n   ..\n   24  #\tdefine GLFW_INCLUDE_GLCOREARB\n   25  #endif\n   26: #include <GLFW/glfw3.h>\n   27: #include \"nanovg.h\"\n   28  #define NANOVG_GL3_IMPLEMENTATION\n   29: #include \"nanovg_gl.h\"\n   30: #include \"nanovg_gl_utils.h\"\n   31: #include \"perf.h\"\n   32  \n   33  void renderPattern(NVGcontext* vg, NVGLUframebuffer* fb, float t, float pxRatio)\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/example/example_gl2.c:\n   17  //\n   18  \n   19: #include <stdio.h>\n   20  #ifdef NANOVG_GLEW\n   21  #  include <GL/glew.h>\n   22  #endif\n   23  #define GLFW_INCLUDE_GLEXT\n   24: #include <GLFW/glfw3.h>\n   25: #include \"nanovg.h\"\n   26  #define NANOVG_GL2_IMPLEMENTATION\n   27: #include \"nanovg_gl.h\"\n   28: #include \"demo.h\"\n   29: #include \"perf.h\"\n   30  \n   31  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/example/example_gl3.c:\n   17  //\n   18  \n   19: #include <stdio.h>\n   20  #ifdef NANOVG_GLEW\n   21  #\tinclude <GL/glew.h>\n   ..\n   25  #endif\n   26  #define GLFW_INCLUDE_GLEXT\n   27: #include <GLFW/glfw3.h>\n   28: #include \"nanovg.h\"\n   29  #define NANOVG_GL3_IMPLEMENTATION\n   30: #include \"nanovg_gl.h\"\n   31: #include \"demo.h\"\n   32: #include \"perf.h\"\n   33  \n   34  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/example/example_gles2.c:\n   17  //\n   18  \n   19: #include <stdio.h>\n   20  #define GLFW_INCLUDE_ES2\n   21  #define GLFW_INCLUDE_GLEXT\n   22: #include <GLFW/glfw3.h>\n   23: #include \"nanovg.h\"\n   24  #define NANOVG_GLES2_IMPLEMENTATION\n   25: #include \"nanovg_gl.h\"\n   26: #include \"nanovg_gl_utils.h\"\n   27: #include \"demo.h\"\n   28: #include \"perf.h\"\n   29  \n   30  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/example/example_gles3.c:\n   17  //\n   18  \n   19: #include <stdio.h>\n   20  #define GLFW_INCLUDE_ES3\n   21  #define GLFW_INCLUDE_GLEXT\n   22: #include <GLFW/glfw3.h>\n   23: #include \"nanovg.h\"\n   24  #define NANOVG_GLES3_IMPLEMENTATION\n   25: #include \"nanovg_gl.h\"\n   26: #include \"nanovg_gl_utils.h\"\n   27: #include \"demo.h\"\n   28: #include \"perf.h\"\n   29  \n   30  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/example/perf.c:\n    1: #include \"perf.h\"\n    2: #include <stdio.h>\n    3: #include <string.h>\n    4: #include <math.h>\n    5  #ifdef NANOVG_GLEW\n    6  #  include <GL/glew.h>\n    7  #endif\n    8: #include <GLFW/glfw3.h>\n    9: #include \"nanovg.h\"\n   10  \n   11  #ifdef _MSC_VER\n   12  #define snprintf _snprintf\n   13  #elif !defined(__MINGW32__)\n   14: #include <iconv.h>\n   15  #endif\n   16  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/example/perf.h:\n    2  #define PERF_H\n    3  \n    4: #include \"nanovg.h\"\n    5  \n    6  #ifdef __cplusplus\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/example/stb_image_write.h:\n   71  #ifdef STB_IMAGE_WRITE_IMPLEMENTATION\n   72  \n   73: #include <stdarg.h>\n   74: #include <stdlib.h>\n   75: #include <stdio.h>\n   76: #include <string.h>\n   77: #include <assert.h>\n   78  \n   79  typedef unsigned int stbiw_uint32;\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/obsolete/nanovg_gl2.h:\n   55  #ifdef NANOVG_GL2_IMPLEMENTATION\n   56  \n   57: #include <stdlib.h>\n   58: #include <stdio.h>\n   59: #include <string.h>\n   60: #include <math.h>\n   61: #include \"nanovg.h\"\n   62  \n   63  enum GLNVGuniformLoc {\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/obsolete/nanovg_gl3.h:\n   54  #ifdef NANOVG_GL3_IMPLEMENTATION\n   55  \n   56: #include <stdlib.h>\n   57: #include <stdio.h>\n   58: #include <string.h>\n   59: #include <math.h>\n   60: #include \"nanovg.h\"\n   61  \n   62  enum GLNVGuniformLoc {\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/fontstash.h:\n  148  #ifdef FONS_USE_FREETYPE\n  149  \n  150: #include <ft2build.h>\n  151: #include FT_FREETYPE_H\n  152: #include FT_ADVANCES_H\n  153: #include <math.h>\n  154  \n  155  struct FONSttFontImpl {\n  ...\n  260  #define STBTT_malloc(x,u)    fons__tmpalloc(x,u)\n  261  #define STBTT_free(x,u)      fons__tmpfree(x,u)\n  262: #include \"stb_truetype.h\"\n  263  \n  264  struct FONSttFontImpl {\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/nanovg.c:\n   17  //\n   18  \n   19: #include <stdlib.h>\n   20: #include <stdio.h>\n   21: #include <math.h>\n   22: #include <memory.h>\n   23  \n   24: #include \"nanovg.h\"\n   25  #define FONTSTASH_IMPLEMENTATION\n   26: #include \"fontstash.h\"\n   27  \n   28  #ifndef NVG_NO_STB\n   29  #define STB_IMAGE_IMPLEMENTATION\n   30: #include \"stb_image.h\"\n   31  #endif \n   32  \n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/nanovg_gl.h:\n  108  #ifdef NANOVG_GL_IMPLEMENTATION\n  109  \n  110: #include <stdlib.h>\n  111: #include <stdio.h>\n  112: #include <string.h>\n  113: #include <math.h>\n  114: #include \"nanovg.h\"\n  115  \n  116  enum GLNVGuniformLoc {\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/stb_image.h:\n    7  \n    8     // i.e. it should look like this:\n    9:    #include ...\n   10:    #include ...\n   11:    #include ...\n   12     #define STB_IMAGE_IMPLEMENTATION\n   13:    #include \"stb_image.h\"\n   14  \n   15:    You can #define STBI_ASSERT(x) before the #include to avoid using assert.h.\n   16     And #define STBI_MALLOC, STBI_REALLOC, and STBI_FREE to avoid using malloc,realloc,free\n   17  \n   ..\n  390  \n  391  #ifndef STBI_NO_STDIO\n  392: #include <stdio.h>\n  393  #endif // STBI_NO_STDIO\n  394  \n  ...\n  562  \n  563  \n  564: #include <stdarg.h>\n  565: #include <stddef.h> // ptrdiff_t on osx\n  566: #include <stdlib.h>\n  567: #include <string.h>\n  568  \n  569  #if !defined(STBI_NO_LINEAR) || !defined(STBI_NO_HDR)\n  570: #include <math.h>  // ldexp\n  571  #endif\n  572  \n  573  #ifndef STBI_NO_STDIO\n  574: #include <stdio.h>\n  575  #endif\n  576  \n  577  #ifndef STBI_ASSERT\n  578: #include <assert.h>\n  579  #define STBI_ASSERT(x) assert(x)\n  580  #endif\n  ...\n  598  typedef   signed int   stbi__int32;\n  599  #else\n  600: #include <stdint.h>\n  601  typedef uint16_t stbi__uint16;\n  602  typedef int16_t  stbi__int16;\n  ...\n  675  #if !defined(STBI_NO_SIMD) && defined(STBI__X86_TARGET)\n  676  #define STBI_SSE2\n  677: #include <emmintrin.h>\n  678  \n  679  #ifdef _MSC_VER\n  680  \n  681  #if _MSC_VER >= 1400  // not VC6\n  682: #include <intrin.h> // __cpuid\n  683  static int stbi__cpuid3(void)\n  684  {\n  ...\n  730  \n  731  #ifdef STBI_NEON\n  732: #include <arm_neon.h>\n  733  // assume GCC or Clang on ARM targets\n  734  #define STBI_SIMD_ALIGN(type, name) type name __attribute__((aligned(16)))\n\n/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/src/stb_truetype.h:\n   93  //   file, write:\n   94  //      #define STB_TRUETYPE_IMPLEMENTATION\n   95: //   before the #include of this file. This expands out the actual\n   96  //   implementation into that C/C++ file.\n   97  //\n   ..\n  104  //\n  105  //   Improved 3D API (more shippable):\n  106: //           #include \"stb_rect_pack.h\"           -- optional, but you really want it\n  107  //           stbtt_PackBegin()\n  108  //           stbtt_PackSetOversampling()          -- for improved quality on small fonts\n  ...\n  275  #if 0\n  276  #define STB_TRUETYPE_IMPLEMENTATION  // force following include to generate implementation\n  277: #include \"stb_truetype.h\"\n  278  \n  279  unsigned char ttf_buffer[1<<20];\n  ...\n  322  //\n  323  #if 0\n  324: #include <stdio.h>\n  325  #define STB_TRUETYPE_IMPLEMENTATION  // force following include to generate implementation\n  326: #include \"stb_truetype.h\"\n  327  \n  328  char ttf_buffer[1<<25];\n  ...\n  435     // e.g. #define your own STBTT_ifloor/STBTT_iceil() to avoid math.h\n  436     #ifndef STBTT_ifloor\n  437:    #include <math.h>\n  438     #define STBTT_ifloor(x)   ((int) floor(x))\n  439     #define STBTT_iceil(x)    ((int) ceil(x))\n  ...\n  441  \n  442     #ifndef STBTT_sqrt\n  443:    #include <math.h>\n  444     #define STBTT_sqrt(x)      sqrt(x)\n  445     #define STBTT_pow(x,y)     pow(x,y)\n  ...\n  447  \n  448     #ifndef STBTT_fmod\n  449:    #include <math.h>\n  450     #define STBTT_fmod(x,y)    fmod(x,y)\n  451     #endif\n  452  \n  453     #ifndef STBTT_cos\n  454:    #include <math.h>\n  455     #define STBTT_cos(x)       cos(x)\n  456     #define STBTT_acos(x)      acos(x)\n  ...\n  458  \n  459     #ifndef STBTT_fabs\n  460:    #include <math.h>\n  461     #define STBTT_fabs(x)      fabs(x)\n  462     #endif\n  ...\n  464     // #define your own functions \"STBTT_malloc\" / \"STBTT_free\" to avoid malloc.h\n  465     #ifndef STBTT_malloc\n  466:    #include <stdlib.h>\n  467     #define STBTT_malloc(x,u)  ((void)(u),malloc(x))\n  468     #define STBTT_free(x,u)    ((void)(u),free(x))\n  ...\n  470  \n  471     #ifndef STBTT_assert\n  472:    #include <assert.h>\n  473     #define STBTT_assert(x)    assert(x)\n  474     #endif\n  475  \n  476     #ifndef STBTT_strlen\n  477:    #include <string.h>\n  478     #define STBTT_strlen(x)    strlen(x)\n  479     #endif\n  480  \n  481     #ifndef STBTT_memcpy\n  482:    #include <string.h>\n  483     #define STBTT_memcpy       memcpy\n  484     #define STBTT_memset       memset\n  ...\n 3837  //                                                                                //\n 3838  // if you get a compile warning due to these symbols being defined more than      //\n 3839: // once, move #include \"stb_rect_pack.h\" before #include \"stb_truetype.h\"         //\n 3840  //                                                                                //\n 3841  ////////////////////////////////////////////////////////////////////////////////////\n\n139 matches across 23 files\n",
			"settings":
			{
				"buffer_size": 22755,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "nanovg/src/nanovg.h",
			"settings":
			{
				"buffer_size": 28610,
				"line_ending": "Unix"
			}
		},
		{
			"file": "cmake/UseMultiArch.cmake",
			"settings":
			{
				"buffer_size": 1048,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYBAAAaWYoVU5JWCBBTkQgTk9UIEFQUExFKQogIGluY2x1ZGUoR05VSW5zdGFsbERpcnMpCgplbHNlaWYoTk9UIERFRklORUQgQ01BS0VfSU5TVEFMTF9MSUJESVIpCiAgc2V0KENNQUtFX0lOU1RBTExfTElCRElSICIiIENBQ0hFIFBBVEggIlNwZWNpZnkgdGhlIG91dHB1dCBkaXJlY3RvcnkgZm9yIGxpYnJhcmllcyAoZGVmYXVsdCBpcyBsaWIpIikKZW5kaWYoKQoKaWYoTk9UIENNQUtFX0lOU1RBTExfTElCRElSIE9SICIke0NNQUtFX0lOU1RBTExfTElCRElSfSIgU1RSRVFVQUwgImxpYiIpCiAgZXhlY3V0ZV9wcm9jZXNzKENPTU1BTkQgY2MgLWR1bXBtYWNoaW5lIE9VVFBVVF9WQVJJQUJMRSBIT1NUX1NZU1RFTV9OQU1FIE9VVFBVVF9TVFJJUF9UUkFJTElOR19XSElURVNQQUNFKQogIGV4ZWN1dGVfcHJvY2VzcyhDT01NQU5EICR7Q01BS0VfQ19DT01QSUxFUn0gLWR1bXBtYWNoaW5lIE9VVFBVVF9WQVJJQUJMRSBTWVNURU1fTkFNRSBPVVRQVVRfU1RSSVBfVFJBSUxJTkdfV0hJVEVTUEFDRSkKCiAgaWYoTk9UICIke0hPU1RfU1lTVEVNX05BTUV9IiBTVFJFUVVBTCAiJHtTWVNURU1fTkFNRX0iKQogICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgaTY4NiBpMzg2IENNQUtFX0NST1NTX0FSQ0ggIiR7U1lTVEVNX05BTUV9IikKICBlbmRpZigpCgogIHNldChDTUFLRV9DUk9TU19BUkNIICIke0NNQUtFX0NST1NTX0FSQ0h9IiBDQUNIRSBTVFJJTkcgIkNyb3NzIGNvbXBpbGluZyB0YXJnZXQiKQoKICBpZihTWVNURU1fTkFNRSBBTkQgRVhJU1RTICIke0NNQUtFX0lOU1RBTExfUFJFRklYfS8ke0NNQUtFX0lOU1RBTExfTElCRElSfS8ke1NZU1RFTV9OQU1FfSIpCiAgICBzZXQoQ01BS0VfSU5TVEFMTF9MSUJESVIgbGliLyR7U1lTVEVNX05BTUV9KQogIGVuZGlmKFNZU1RFTV9OQU1FIEFORCBFWElTVFMgIiR7Q01BS0VfSU5TVEFMTF9QUkVGSVh9LyR7Q01BS0VfSU5TVEFMTF9MSUJESVJ9LyR7U1lTVEVNX05BTUV9IikKZW5kaWYoTk9UIENNQUtFX0lOU1RBTExfTElCRElSIE9SICIke0NNQUtFX0lOU1RBTExfTElCRElSfSIgU1RSRVFVQUwgImxpYiIpCgAAAAAAAAAAGAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "cmake/FindGLFW.cmake",
			"settings":
			{
				"buffer_size": 2578,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n\nif"
					},
					"CgAAACwCAAAAAAAALQIAAAAAAAAAAAAALQIAAAAAAAAvAgAAAAAAAAAAAAAvAgAAAAAAADACAAAAAAAAAAAAADACAAAAAAAAMgIAAAAAAAAAAAAALQIAAAAAAAAtAgAAAAAAAAIAAAAgIDACAAAAAAAAMQIAAAAAAAAAAAAAMQIAAAAAAAAzAgAAAAAAAAAAAAAuAgAAAAAAAC4CAAAAAAAAAgAAACAgMQIAAAAAAAAyAgAAAAAAAAAAAAAyAgAAAAAAADMCAAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwCAAAAAAAALAIAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADMCAAAAAAAANQIAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMCAAAAAAAAMwIAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAADQCAAAAAAAANQIAAAAAAAAAAAAANQIAAAAAAAA2AgAAAAAAAAAAAAA2AgAAAAAAADcCAAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQCAAAAAAAANAIAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " GLFW_LIBRARY"
					},
					"DQAAADcCAAAAAAAAOAIAAAAAAAAAAAAAOAIAAAAAAAA5AgAAAAAAAAAAAAA5AgAAAAAAADoCAAAAAAAAAAAAADoCAAAAAAAAOwIAAAAAAAAAAAAAOwIAAAAAAAA8AgAAAAAAAAAAAAA8AgAAAAAAAD0CAAAAAAAAAAAAAD0CAAAAAAAAPgIAAAAAAAAAAAAAPgIAAAAAAAA/AgAAAAAAAAAAAAA/AgAAAAAAAEACAAAAAAAAAAAAAEACAAAAAAAAQQIAAAAAAAAAAAAAQQIAAAAAAABCAgAAAAAAAAAAAABCAgAAAAAAAEMCAAAAAAAAAAAAAEMCAAAAAAAARAIAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcCAAAAAAAANwIAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEUCAAAAAAAARgIAAAAAAAAAAAAARgIAAAAAAABIAgAAAAAAAAAAAABIAgAAAAAAAEoCAAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUCAAAAAAAARQIAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"paste",
					null,
					"AQAAAEoCAAAAAAAAaAIAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoCAAAAAAAASgIAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGcCAAAAAAAAaAIAAAAAAAAAAAAAaAIAAAAAAABsAgAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcCAAAAAAAAZwIAAAAAAAD////////vfw"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAGoCAAAAAAAAagIAAAAAAAACAAAAICA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwCAAAAAAAAbAIAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "endif"
					},
					"BQAAAGoCAAAAAAAAawIAAAAAAAAAAAAAawIAAAAAAABsAgAAAAAAAAAAAABsAgAAAAAAAG0CAAAAAAAAAAAAAG0CAAAAAAAAbgIAAAAAAAAAAAAAbgIAAAAAAABvAgAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoCAAAAAAAAagIAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAG8CAAAAAAAAcQIAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8CAAAAAAAAbwIAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "NOT"
					},
					"AwAAAHACAAAAAAAAcQIAAAAAAAAAAAAAcQIAAAAAAAByAgAAAAAAAAAAAAByAgAAAAAAAHMCAAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHACAAAAAAAAcAIAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " FL"
					},
					"AwAAAHMCAAAAAAAAdAIAAAAAAAAAAAAAdAIAAAAAAAB1AgAAAAAAAAAAAAB1AgAAAAAAAHYCAAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMCAAAAAAAAcwIAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					2,
					"left_delete",
					null,
					"AgAAAHUCAAAAAAAAdQIAAAAAAAABAAAATHQCAAAAAAAAdAIAAAAAAAABAAAARg",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYCAAAAAAAAdgIAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "GLFW_LIBRARY"
					},
					"DAAAAHQCAAAAAAAAdQIAAAAAAAAAAAAAdQIAAAAAAAB2AgAAAAAAAAAAAAB2AgAAAAAAAHcCAAAAAAAAAAAAAHcCAAAAAAAAeAIAAAAAAAAAAAAAeAIAAAAAAAB5AgAAAAAAAAAAAAB5AgAAAAAAAHoCAAAAAAAAAAAAAHoCAAAAAAAAewIAAAAAAAAAAAAAewIAAAAAAAB8AgAAAAAAAAAAAAB8AgAAAAAAAH0CAAAAAAAAAAAAAH0CAAAAAAAAfgIAAAAAAAAAAAAAfgIAAAAAAAB/AgAAAAAAAAAAAAB/AgAAAAAAAIACAAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQCAAAAAAAAdAIAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEUCAAAAAAAARgIAAAAAAAAAAAAARgIAAAAAAABIAgAAAAAAAAAAAABIAgAAAAAAAEoCAAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUCAAAAAAAARQIAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"paste",
					null,
					"AQAAAEoCAAAAAAAAYQIAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoCAAAAAAAASgIAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"left_delete",
					null,
					"AQAAAGACAAAAAAAAYAIAAAAAAAABAAAACg",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGECAAAAAAAAYQIAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGACAAAAAAAAYQIAAAAAAAAAAAAAYQIAAAAAAABlAgAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGACAAAAAAAAYAIAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"revert",
					null,
					"BwAAAAAAAAAAAAAAAAAAAAAAAAANBwAAIyBGaW5kIEdMRlcgbGlicmFyeSBhbmQgaW5jbHVkZSBwYXRocyBmb3IgQ01VNDYyCiMgVGhpcyBkZWZpbmVzIHRoZSBmb2xsb3dpbmc6CiMKIyBHTEZXX0ZPVU5EICAgICAgICAgICAgIElmIEdMRlcgaXMgZm91bmQKIyBHTEZXX0xJQlJBUlkgICAgICAgICAgIEdMRlcgbGlicmFyaWVzCiMgR0xGV19JTkNMVURFX0RJUiAgICAgICBHTEZXIGluY2x1ZGUgZGlyZWN0b3JpZXMKIyBHTEZXX0xJQlJBUllfRElSICAgICAgIEdMRlcgbGlicmFyeSBkaXJlY3RvcmllcwptYWNybyhmaW5kX2dsZncpCiAgaWYoVU5JWCkKICAgIHNldChHTEZXX0lOQ19OQU1FUyBnbGZ3My5oIGdsZncuaCkKICAgIHNldChHTEZXX0xJQl9OQU1FUyBsaWJnbGZ3LnNvIGxpYmdsZncuYSkKICAgIGlmKEFQUExFKQogICAgICBzZXQoR0xGV19MSUJfTkFNRVMgbGliZ2xmd19vc3guYSkKICAgIGVuZGlmKEFQUExFKQogIGVuZGlmKFVOSVgpCgogICMgR0xGVyBzdGF0aWMgbGlicmFyeQogIGZpbmRfbGlicmFyeShHTEZXX0xJQlJBUlkgTkFNRVMgJHtHTEZXX0xJQl9OQU1FU30gRE9DICJHTEZXIGxpYnJhcnkiKQoKCiAgaWYoTk9UIEdMRldfTElCUkFSWSkKICAgIGluY2x1ZGUoRmluZFBrZ0NvbmZpZykKICAgIAogICAgcGtnX3NlYXJjaF9tb2R1bGUoR0xGVyBnbGZ3MykKICBlbmRpZihOT1QgR0xGV19MSUJSQVJZKQoKCiAgIyBHTEZXIGxpYnJhcnkgZGlyCiAgaWYoTk9UIEdMRldfTElCUkFSWV9ESVIpCiAgICBpZihHTEZXX0xJQlJBUlkpCiAgICAgIGdldF9maWxlbmFtZV9jb21wb25lbnQoR0xGV19MSUJSQVJZX0RJUiAiJHtHTEZXX0xJQlJBUll9IiBESVJFQ1RPUlkpCiAgICBlbHNlKEdMRldfTElCUkFSWSkKICAgICAgZmluZF9wYXRoKEdMRldfTElCUkFSWV9ESVIgTkFNRVMgJHtHTEZXX0xJQl9OQU1FU30gRE9DICJHTEZXIGxpYnJhcnkgZGlyZWN0b3J5IikKICAgIGVuZGlmKEdMRldfTElCUkFSWSkKICBlbmRpZihOT1QgR0xGV19MSUJSQVJZX0RJUikKCiAgIyBHTEZXIGluY2x1ZGUgZGlyCiAgaWYoTk9UIEdMRldfSU5DTFVERV9ESVIpCiAgICBpZihHTEZXX0xJQlJBUllfRElSKQogICAgICBzdHJpbmcoUkVHRVggUkVQTEFDRSAiL2xpYi8uKiIgIi9pbmNsdWRlIiBHTEZXX0lOQ0xVREVfRElSICIke0dMRldfTElCUkFSWV9ESVJ9IikKICAgIGVsc2UoR0xGV19MSUJSQVJZX0RJUikKICAgICAgZmluZF9wYXRoKEdMRldfSU5DTFVERV9ESVIgTkFNRVMgJHtHTEZXX0lOQ19OQU1FU30gRE9DICJHTEZXIGluY2x1ZGUgZGlyZWN0b3J5IikKICAgIGVuZGlmKEdMRldfTElCUkFSWV9ESVIpCiAgZW5kaWYoTk9UIEdMRldfSU5DTFVERV9ESVIpCgogICMgVmVyc2lvbgogIHNldChHTEZXX1ZFUlNJT04gMy4xLjEpCgogIGlmKEdMRldfTElCUkFSWSkKICAgIG1lc3NhZ2UoU1RBVFVTICJHTEZXIGxpYnJhcnk6ICR7R0xGV19MSUJSQVJZfSIpCiAgICBtZXNzYWdlKFNUQVRVUyAiR0xGVyBsaWJyYXJ5IGRpcmVjdG9yeTogJHtHTEZXX0xJQlJBUllfRElSfSIpCiAgICBtZXNzYWdlKFNUQVRVUyAiR0xGVyBpbmNsdWRlIGRpcmVjdG9yeTogJHtHTEZXX0lOQ0xVREVfRElSfSIpCiAgZW5kaWYoR0xGV19MSUJSQVJZKQoKICAjIFNldCBwYWNrYWdlIHN0YW5kYXJkIGFyZ3MKICAjaW5jbHVkZShGaW5kUGFja2FnZUhhbmRsZVN0YW5kYXJkQXJncykKICAjRklORF9QQUNLQUdFX0hBTkRMRV9TVEFOREFSRF9BUkdTKEdMRlcgUkVRVUlSRURfVkFSUyBHTEZXX0xJQlJBUlkgR0xGV19JTkNMVURFX0RJUiBHTEZXX0xJQlJBUllfRElSIFZFUlNJT05fVkFSIEdMRldfVkVSU0lPTikKZW5kbWFjcm8oZmluZF9nbGZ3KQoAAAAAAAAAAAcHAAAAAAAAAAAAAAAAAAAAAAAABwcAAAAAAAAAAAAAAAAAAAAAAAAHBwAAAAAAAAAAAAAAAAAAAAAAAAcHAAAAAAAAAAAAAAAAAAAAAAAABwcAAAAAAAAAAAAAAAAAAAAAAABCBwAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUCAAAAAAAAZQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABCBwAAIyBGaW5kIEdMRlcgbGlicmFyeSBhbmQgaW5jbHVkZSBwYXRocyBmb3IgQ01VNDYyCiMgVGhpcyBkZWZpbmVzIHRoZSBmb2xsb3dpbmc6CiMKIyBHTEZXX0ZPVU5EICAgICAgICAgICAgIElmIEdMRlcgaXMgZm91bmQKIyBHTEZXX0xJQlJBUlkgICAgICAgICAgIEdMRlcgbGlicmFyaWVzCiMgR0xGV19JTkNMVURFX0RJUiAgICAgICBHTEZXIGluY2x1ZGUgZGlyZWN0b3JpZXMKIyBHTEZXX0xJQlJBUllfRElSICAgICAgIEdMRlcgbGlicmFyeSBkaXJlY3RvcmllcwptYWNybyhmaW5kX2dsZncpCiAgaWYoVU5JWCkKICAgIHNldChHTEZXX0lOQ19OQU1FUyBnbGZ3My5oIGdsZncuaCkKICAgIHNldChHTEZXX0xJQl9OQU1FUyBsaWJnbGZ3LnNvIGxpYmdsZncuYSkKICAgIGlmKEFQUExFKQogICAgICBzZXQoR0xGV19MSUJfTkFNRVMgbGliZ2xmd19vc3guYSkKICAgIGVuZGlmKEFQUExFKQogIGVuZGlmKFVOSVgpCgogICMgR0xGVyBzdGF0aWMgbGlicmFyeQogIGZpbmRfbGlicmFyeShHTEZXX0xJQlJBUlkgTkFNRVMgJHtHTEZXX0xJQl9OQU1FU30gRE9DICJHTEZXIGxpYnJhcnkiKQoKICBpZihOT1QgR0xGV19MSUJSQVJZKQogICAgaW5jbHVkZShGaW5kUGtnQ29uZmlnKQoKICAgIHBrZ19zZWFyY2hfbW9kdWxlKEdMRlcgZ2xmdzMpCiAgZW5kaWYoTk9UIEdMRldfTElCUkFSWSkKCiAgIyBHTEZXIGxpYnJhcnkgZGlyCiAgaWYoTk9UIEdMRldfTElCUkFSWV9ESVIpCiAgICBpZihHTEZXX0xJQlJBUlkpCiAgICAgIGdldF9maWxlbmFtZV9jb21wb25lbnQoR0xGV19MSUJSQVJZX0RJUiAiJHtHTEZXX0xJQlJBUll9IiBESVJFQ1RPUlkpCiAgICBlbHNlKEdMRldfTElCUkFSWSkKICAgICAgZmluZF9wYXRoKEdMRldfTElCUkFSWV9ESVIgTkFNRVMgJHtHTEZXX0xJQl9OQU1FU30KICAgICAgICAgICAgICAgIERPQyAiR0xGVyBsaWJyYXJ5IGRpcmVjdG9yeSIpCiAgICBlbmRpZihHTEZXX0xJQlJBUlkpCiAgZW5kaWYoTk9UIEdMRldfTElCUkFSWV9ESVIpCgogICMgR0xGVyBpbmNsdWRlIGRpcgogIGlmKE5PVCBHTEZXX0lOQ0xVREVfRElSKQogICAgaWYoR0xGV19MSUJSQVJZX0RJUikKICAgICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi9saWIvLioiICIvaW5jbHVkZSIgR0xGV19JTkNMVURFX0RJUgogICAgICAgICAgICAgICAgICAgICAgICAgICAiJHtHTEZXX0xJQlJBUllfRElSfSIpCiAgICBlbHNlKEdMRldfTElCUkFSWV9ESVIpCiAgICAgIGZpbmRfcGF0aChHTEZXX0lOQ0xVREVfRElSIE5BTUVTICR7R0xGV19JTkNfTkFNRVN9CiAgICAgICAgICAgICAgICBET0MgIkdMRlcgaW5jbHVkZSBkaXJlY3RvcnkiKQogICAgZW5kaWYoR0xGV19MSUJSQVJZX0RJUikKICBlbmRpZihOT1QgR0xGV19JTkNMVURFX0RJUikKCiAgIyBWZXJzaW9uCiAgc2V0KEdMRldfVkVSU0lPTiAzLjEuMSkKCiAgaWYoR0xGV19MSUJSQVJZKQogICAgbWVzc2FnZShTVEFUVVMgIkdMRlcgbGlicmFyeTogJHtHTEZXX0xJQlJBUll9IikKICAgIG1lc3NhZ2UoU1RBVFVTICJHTEZXIGxpYnJhcnkgZGlyZWN0b3J5OiAke0dMRldfTElCUkFSWV9ESVJ9IikKICAgIG1lc3NhZ2UoU1RBVFVTICJHTEZXIGluY2x1ZGUgZGlyZWN0b3J5OiAke0dMRldfSU5DTFVERV9ESVJ9IikKICBlbmRpZihHTEZXX0xJQlJBUlkpCgogICMgU2V0IHBhY2thZ2Ugc3RhbmRhcmQgYXJncwogICNpbmNsdWRlKEZpbmRQYWNrYWdlSGFuZGxlU3RhbmRhcmRBcmdzKQogICNGSU5EX1BBQ0tBR0VfSEFORExFX1NUQU5EQVJEX0FSR1MoR0xGVyBSRVFVSVJFRF9WQVJTIEdMRldfTElCUkFSWSBHTEZXX0lOQ0xVREVfRElSIEdMRldfTElCUkFSWV9ESVIgVkVSU0lPTl9WQVIgR0xGV19WRVJTSU9OKQplbmRtYWNybyhmaW5kX2dsZncpCgAAAAAAAAAAVAcAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"CAAAAAAAAAAAAAAAAAAAAAAAAABUBwAAIyBGaW5kIEdMRlcgbGlicmFyeSBhbmQgaW5jbHVkZSBwYXRocyBmb3IgQ01VNDYyIFRoaXMgZGVmaW5lcyB0aGUgZm9sbG93aW5nOgojCiMgR0xGV19GT1VORCAgICAgICAgICAgICBJZiBHTEZXIGlzIGZvdW5kIEdMRldfTElCUkFSWSAgICAgICAgICAgR0xGVyBsaWJyYXJpZXMKIyBHTEZXX0lOQ0xVREVfRElSIEdMRlcgaW5jbHVkZSBkaXJlY3RvcmllcyBHTEZXX0xJQlJBUllfRElSICAgICAgIEdMRlcgbGlicmFyeQojIGRpcmVjdG9yaWVzCm1hY3JvKGZpbmRfZ2xmdykKICBpZihVTklYKQogICAgc2V0KEdMRldfSU5DX05BTUVTIGdsZnczLmggZ2xmdy5oKQogICAgc2V0KEdMRldfTElCX05BTUVTIGxpYmdsZncuc28gbGliZ2xmdy5hKQogICAgaWYoQVBQTEUpCiAgICAgIHNldChHTEZXX0xJQl9OQU1FUyBsaWJnbGZ3X29zeC5hKQogICAgZW5kaWYoQVBQTEUpCiAgZW5kaWYoVU5JWCkKCiAgIyBHTEZXIHN0YXRpYyBsaWJyYXJ5CiAgZmluZF9saWJyYXJ5KEdMRldfTElCUkFSWSBOQU1FUyAke0dMRldfTElCX05BTUVTfSBET0MgIkdMRlcgbGlicmFyeSIgQ01BS0VfRklORF9ST09UX1BBVEhfQk9USCkKCiAgaWYoTk9UIEdMRldfTElCUkFSWSkKICAgIGluY2x1ZGUoRmluZFBrZ0NvbmZpZykKCiAgICBwa2dfc2VhcmNoX21vZHVsZShHTEZXIGdsZnczKQogIGVuZGlmKE5PVCBHTEZXX0xJQlJBUlkpCgogICMgR0xGVyBsaWJyYXJ5IGRpcgogIGlmKE5PVCBHTEZXX0xJQlJBUllfRElSKQogICAgaWYoR0xGV19MSUJSQVJZKQogICAgICBnZXRfZmlsZW5hbWVfY29tcG9uZW50KEdMRldfTElCUkFSWV9ESVIgIiR7R0xGV19MSUJSQVJZfSIgRElSRUNUT1JZKQogICAgZWxzZShHTEZXX0xJQlJBUlkpCiAgICAgIGZpbmRfcGF0aChHTEZXX0xJQlJBUllfRElSIE5BTUVTICR7R0xGV19MSUJfTkFNRVN9CiAgICAgICAgICAgICAgICBET0MgIkdMRlcgbGlicmFyeSBkaXJlY3RvcnkiKQogICAgZW5kaWYoR0xGV19MSUJSQVJZKQogIGVuZGlmKE5PVCBHTEZXX0xJQlJBUllfRElSKQoKICAjIEdMRlcgaW5jbHVkZSBkaXIKICBpZihOT1QgR0xGV19JTkNMVURFX0RJUikKICAgIGlmKEdMRldfTElCUkFSWV9ESVIpCiAgICAgIHN0cmluZyhSRUdFWCBSRVBMQUNFICIvbGliLy4qIiAiL2luY2x1ZGUiIEdMRldfSU5DTFVERV9ESVIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIiR7R0xGV19MSUJSQVJZX0RJUn0iKQogICAgZWxzZShHTEZXX0xJQlJBUllfRElSKQogICAgICBmaW5kX3BhdGgoR0xGV19JTkNMVURFX0RJUiBOQU1FUyAke0dMRldfSU5DX05BTUVTfQogICAgICAgICAgICAgICAgRE9DICJHTEZXIGluY2x1ZGUgZGlyZWN0b3J5IikKICAgIGVuZGlmKEdMRldfTElCUkFSWV9ESVIpCiAgZW5kaWYoTk9UIEdMRldfSU5DTFVERV9ESVIpCgogICMgVmVyc2lvbgogIHNldChHTEZXX1ZFUlNJT04gMy4xLjEpCgogIGlmKEdMRldfTElCUkFSWSkKICAgIG1lc3NhZ2UoU1RBVFVTICJHTEZXIGxpYnJhcnk6ICR7R0xGV19MSUJSQVJZfSIpCiAgICBtZXNzYWdlKFNUQVRVUyAiR0xGVyBsaWJyYXJ5IGRpcmVjdG9yeTogJHtHTEZXX0xJQlJBUllfRElSfSIpCiAgICBtZXNzYWdlKFNUQVRVUyAiR0xGVyBpbmNsdWRlIGRpcmVjdG9yeTogJHtHTEZXX0lOQ0xVREVfRElSfSIpCiAgZW5kaWYoR0xGV19MSUJSQVJZKQoKICAjIFNldCBwYWNrYWdlIHN0YW5kYXJkIGFyZ3MgaW5jbHVkZShGaW5kUGFja2FnZUhhbmRsZVN0YW5kYXJkQXJncykKICAjIEZJTkRfUEFDS0FHRV9IQU5ETEVfU1RBTkRBUkRfQVJHUyhHTEZXIFJFUVVJUkVEX1ZBUlMgR0xGV19MSUJSQVJZCiAgIyBHTEZXX0lOQ0xVREVfRElSIEdMRldfTElCUkFSWV9ESVIgVkVSU0lPTl9WQVIgR0xGV19WRVJTSU9OKQplbmRtYWNybyhmaW5kX2dsZncpCgAAAAAAAAAARggAAAAAAAAAAAAAAAAAAAAAAABGCAAAAAAAAAAAAAAAAAAAAAAAAI0IAAAAAAAAAAAAAAAAAAAAAAAAjQgAAAAAAAAAAAAAAAAAAAAAAABSCAAAAAAAAAAAAAAAAAAAAAAAAFIIAAAAAAAAAAAAAAAAAAAAAAAAEgoAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAASCgAAIyBGaW5kIEdMRlcgbGlicmFyeSBhbmQgaW5jbHVkZSBwYXRocyBmb3IgQ01VNDYyIFRoaXMgZGVmaW5lcyB0aGUgZm9sbG93aW5nOgojCiMgR0xGV19GT1VORCAgICAgICAgICAgICBJZiBHTEZXIGlzIGZvdW5kIEdMRldfTElCUkFSWSAgICAgICAgICAgR0xGVyBsaWJyYXJpZXMgR0xGV19JTkNMVURFX0RJUiBHTEZXIGluY2x1ZGUgZGlyZWN0b3JpZXMgR0xGV19MSUJSQVJZX0RJUiAgICAgICBHTEZXIGxpYnJhcnkgZGlyZWN0b3JpZXMKbWFjcm8oZmluZF9nbGZ3KQogIGlmKFVOSVgpCiAgICBzZXQoR0xGV19JTkNfTkFNRVMgZ2xmdzMuaCBnbGZ3LmgpCiAgICBzZXQoR0xGV19MSUJfTkFNRVMgbGliZ2xmdy5zbyBsaWJnbGZ3LmEpCiAgICBpZihBUFBMRSkKICAgICAgc2V0KEdMRldfTElCX05BTUVTIGxpYmdsZndfb3N4LmEpCiAgICBlbmRpZihBUFBMRSkKICBlbmRpZihVTklYKQoKICAjIEdMRlcgc3RhdGljIGxpYnJhcnkKICBmaW5kX2xpYnJhcnkoR0xGV19MSUJSQVJZIE5BTUVTICR7R0xGV19MSUJfTkFNRVN9IERPQyAiR0xGVyBsaWJyYXJ5IiBDTUFLRV9GSU5EX1JPT1RfUEFUSF9CT1RIKQoKICBpZihOT1QgR0xGV19MSUJSQVJZKQogICAgaWYoTk9UIFBLR19DT05GSUdfRk9VTkQpCiAgICAgIGluY2x1ZGUoRmluZFBrZ0NvbmZpZykKICAgIGVuZGlmKE5PVCBQS0dfQ09ORklHX0ZPVU5EKQoKICAgIHBrZ19zZWFyY2hfbW9kdWxlKEdMRlcgZ2xmdzMpCgogICAgIyBtZXNzYWdlKCJHTEZXX01PRFVMRV9OQU1FOiAke0dMRldfTU9EVUxFX05BTUV9IikgZHVtcChHTEZXX0ZPVU5EIEdMRldfTElCUkFSSUVTIEdMRldfTElOS19MSUJSQVJJRVMgR0xGV19MSUJSQVJZX0RJUlMgR0xGV19MREZMQUdTIEdMRldfTERGTEFHU19PVEhFUiBHTEZXX0lOQ0xVREVfRElSUyBHTEZXX0NGTEFHUwogICAgIyBHTEZXX0NGTEFHU19PVEhFUikKCiAgICAjIGlmKEVYSVNUUyAiJHtHTEZXX0xJTktfTElCUkFSSUVTfSIpCiAgICBzZXQoR0xGV19MSUJSQVJZICIke0dMRldfTElOS19MSUJSQVJJRVN9IikKICAgIHNldChHTEZXX0lOQ0xVREVfRElSICIke0dMRldfSU5DTFVERV9ESVJTfSIpCiAgICAjIGVuZGlmKEVYSVNUUyAiJHtHTEZXX0xJTktfTElCUkFSSUVTfSIpCgogIGVuZGlmKE5PVCBHTEZXX0xJQlJBUlkpCgogICMgR0xGVyBsaWJyYXJ5IGRpcgogIGlmKE5PVCBHTEZXX0xJQlJBUllfRElSKQogICAgaWYoR0xGV19MSUJSQVJZKQogICAgICBnZXRfZmlsZW5hbWVfY29tcG9uZW50KEdMRldfTElCUkFSWV9ESVIgIiR7R0xGV19MSUJSQVJZfSIgRElSRUNUT1JZKQogICAgZWxzZShHTEZXX0xJQlJBUlkpCiAgICAgIGZpbmRfcGF0aChHTEZXX0xJQlJBUllfRElSIE5BTUVTICR7R0xGV19MSUJfTkFNRVN9IERPQyAiR0xGVyBsaWJyYXJ5IGRpcmVjdG9yeSIpCiAgICBlbmRpZihHTEZXX0xJQlJBUlkpCiAgZW5kaWYoTk9UIEdMRldfTElCUkFSWV9ESVIpCgogICMgR0xGVyBpbmNsdWRlIGRpcgogIGlmKE5PVCBHTEZXX0lOQ0xVREVfRElSKQogICAgaWYoR0xGV19MSUJSQVJZX0RJUikKICAgICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi9saWIvPy4qIiAiL2luY2x1ZGUiIEdMRldfSU5DTFVERV9ESVIgIiR7R0xGV19MSUJSQVJZX0RJUn0iKQogICAgZWxzZShHTEZXX0xJQlJBUllfRElSKQogICAgICBmaW5kX3BhdGgoR0xGV19JTkNMVURFX0RJUiBOQU1FUyAke0dMRldfSU5DX05BTUVTfSBET0MgIkdMRlcgaW5jbHVkZSBkaXJlY3RvcnkiKQogICAgZW5kaWYoR0xGV19MSUJSQVJZX0RJUikKICBlbmRpZihOT1QgR0xGV19JTkNMVURFX0RJUikKCiAgIyBWZXJzaW9uCiAgc2V0KEdMRldfVkVSU0lPTiAzLjEuMSkKCiAgc2V0KEdMRldfTElCUkFSWSAiJHtHTEZXX0xJQlJBUll9IiBDQUNIRSBGSUxFUEFUSCAiR0xGVyBsaWJyYXJ5IikKICBzZXQoR0xGV19MSUJSQVJZX0RJUiAiJHtHTEZXX0xJQlJBUllfRElSfSIgQ0FDSEUgRklMRVBBVEggIkdMRlcgbGlicmFyeSBkaXJlY3RvcnkiKQogIHNldChHTEZXX0lOQ0xVREVfRElSICIke0dMRldfSU5DTFVERV9ESVJ9IiBDQUNIRSBGSUxFUEFUSCAiR0xGVyBpbmNsdWRlIGRpcmVjdG9yeSIpCgogIGlmKE5PVCBHTEZXX0NPTkZJR1VSQVRJT05fU0hPV04pCiAgICBtZXNzYWdlKFNUQVRVUyAiR0xGVyBsaWJyYXJ5OiAke0dMRldfTElCUkFSWX0iKQogICAgbWVzc2FnZShTVEFUVVMgIkdMRlcgbGlicmFyeSBkaXJlY3Rvcnk6ICR7R0xGV19MSUJSQVJZX0RJUn0iKQogICAgbWVzc2FnZShTVEFUVVMgIkdMRlcgaW5jbHVkZSBkaXJlY3Rvcnk6ICR7R0xGV19JTkNMVURFX0RJUn0iKQogICAgc2V0KEdMRldfQ09ORklHVVJBVElPTl9TSE9XTiBUUlVFKQogIGVuZGlmKE5PVCBHTEZXX0NPTkZJR1VSQVRJT05fU0hPV04pCgogICMgU2V0IHBhY2thZ2Ugc3RhbmRhcmQgYXJncyBpbmNsdWRlKEZpbmRQYWNrYWdlSGFuZGxlU3RhbmRhcmRBcmdzKSBGSU5EX1BBQ0tBR0VfSEFORExFX1NUQU5EQVJEX0FSR1MoR0xGVyBSRVFVSVJFRF9WQVJTIEdMRldfTElCUkFSWSBHTEZXX0lOQ0xVREVfRElSIEdMRldfTElCUkFSWV9ESVIgVkVSU0lPTl9WQVIgR0xGV19WRVJTSU9OKQplbmRtYWNybyhmaW5kX2dsZncpCgAAAAAAAAAAEgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "cmake/FindGLEW.cmake",
			"settings":
			{
				"buffer_size": 2270,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AQAAACUCAAAAAAAAeAIAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUCAAAAAAAAJQIAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHgCAAAAAAAAeQIAAAAAAAAAAAAAeQIAAAAAAAB7AgAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgCAAAAAAAAeAIAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"left_delete",
					null,
					"AgAAAG0CAAAAAAAAbQIAAAAAAAABAAAARngCAAAAAAAAeAIAAAAAAAACAAAAICA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4CAAAAAAAAbgIAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAAG0CAAAAAAAAbgIAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0CAAAAAAAAbQIAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAFUCAAAAAAAAVQIAAAAAAAABAAAARg",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYCAAAAAAAAVgIAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAAFUCAAAAAAAAVgIAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUCAAAAAAAAVQIAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					3,
					"left_delete",
					null,
					"AwAAAFwCAAAAAAAAXAIAAAAAAAABAAAAM1sCAAAAAAAAWwIAAAAAAAABAAAAd1oCAAAAAAAAWgIAAAAAAAABAAAAZg",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0CAAAAAAAAXQIAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "ew"
					},
					"AgAAAFoCAAAAAAAAWwIAAAAAAAAAAAAAWwIAAAAAAABcAgAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoCAAAAAAAAWgIAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAADECAAAAAAAAMQIAAAAAAAABAAAARg",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADICAAAAAAAAMgIAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAADECAAAAAAAAMgIAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADECAAAAAAAAMQIAAAAAAAAAAAAAAADwvw"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAADwCAAAAAAAAPQIAAAAAAAAAAAAAPQIAAAAAAAA/AgAAAAAAAAAAAAA/AgAAAAAAAEECAAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwCAAAAAAAAPAIAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"paste",
					null,
					"AQAAAEECAAAAAAAAWAIAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEECAAAAAAAAQQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA6BwAAIyBGaW5kIEdMRVcgbGlicmFyeSBhbmQgaW5jbHVkZSBwYXRocyBmb3IgQ01VNDYyCiMgVGhpcyBkZWZpbmVzIHRoZSBmb2xsb3dpbmc6CiMKIyBHTEVXX0ZPVU5EICAgICAgICAgICAgIElmIEdMRVcgaXMgZm91bmQKIyBHTEVXX0xJQlJBUlkgICAgICAgICAgIEdMRVcgbGlicmFyaWVzCiMgR0xFV19JTkNMVURFX0RJUiAgICAgICBHTEVXIGluY2x1ZGUgZGlyZWN0b3JpZXMKIyBHTEVXX0xJQlJBUllfRElSICAgICAgIEdMRVcgbGlicmFyeSBkaXJlY3RvcmllcwptYWNybyhmaW5kX2dsZXcpCiAgaWYoVU5JWCkKICAgIHNldChHTEVXX0lOQ19OQU1FUyBnbGV3LmgpCiAgICBzZXQoR0xFV19MSUJfTkFNRVMgbGliR0xFVy5zbyBsaWJHTEVXLmEpCiAgICBpZihBUFBMRSkKICAgICAgc2V0KEdMRVdfTElCX05BTUVTIGxpYmdsZXdfb3N4LmEpCiAgICBlbmRpZihBUFBMRSkKICBlbmRpZihVTklYKQoKICAjIEdMRVcgc3RhdGljIGxpYnJhcnkKICBmaW5kX2xpYnJhcnkoR0xFV19MSUJSQVJZIE5BTUVTICR7R0xFV19MSUJfTkFNRVN9IERPQyAiR0xFVyBsaWJyYXJ5IikKCiAgaWYoTk9UIEdMRVdfTElCUkFSWSkKICAgIGluY2x1ZGUoRmluZFBrZ0NvbmZpZykKCiAgICBwa2dfc2VhcmNoX21vZHVsZShHTEVXIGdsZXcpCiAgZW5kaWYoTk9UIEdMRVdfTElCUkFSWSkKCiAgIyBHTEVXIGxpYnJhcnkgZGlyCiAgaWYoTk9UIEdMRVdfTElCUkFSWV9ESVIpCiAgICBpZihHTEVXX0xJQlJBUlkpCiAgICAgIGdldF9maWxlbmFtZV9jb21wb25lbnQoR0xFV19MSUJSQVJZX0RJUiAiJHtHTEVXX0xJQlJBUll9IiBESVJFQ1RPUlkpCiAgICBlbHNlKEdMRVdfTElCUkFSWSkKICAgICAgZmluZF9wYXRoKEdMRVdfTElCUkFSWV9ESVIgTkFNRVMgJHtHTEVXX0xJQl9OQU1FU30KICAgICAgICAgICAgICAgIERPQyAiR0xFVyBsaWJyYXJ5IGRpcmVjdG9yeSIpCiAgICBlbmRpZihHTEVXX0xJQlJBUlkpCiAgZW5kaWYoTk9UIEdMRVdfTElCUkFSWV9ESVIpCgogICMgR0xFVyBpbmNsdWRlIGRpcgogIGlmKE5PVCBHTEVXX0lOQ0xVREVfRElSKQogICAgaWYoR0xFV19MSUJSQVJZX0RJUikKICAgICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi9saWIvLioiICIvaW5jbHVkZSIgR0xFV19JTkNMVURFX0RJUgogICAgICAgICAgICAgICAgICAgICAgICAgICAiJHtHTEVXX0xJQlJBUllfRElSfSIpCiAgICBlbHNlKEdMRVdfTElCUkFSWV9ESVIpCiAgICAgIGZpbmRfcGF0aChHTEVXX0lOQ0xVREVfRElSIE5BTUVTICR7R0xFV19JTkNfTkFNRVN9CiAgICAgICAgICAgICAgICBET0MgIkdMRVcgaW5jbHVkZSBkaXJlY3RvcnkiKQogICAgZW5kaWYoR0xFV19MSUJSQVJZX0RJUikKICBlbmRpZihOT1QgR0xFV19JTkNMVURFX0RJUikKCiAgIyBWZXJzaW9uCiAgc2V0KEdMRVdfVkVSU0lPTiAxLjEzLjApCgogIGlmKEdMRVdfTElCUkFSWSkKICAgIG1lc3NhZ2UoU1RBVFVTICJHTEVXIGxpYnJhcnk6ICR7R0xFV19MSUJSQVJZfSIpCiAgICBtZXNzYWdlKFNUQVRVUyAiR0xFVyBsaWJyYXJ5IGRpcmVjdG9yeTogJHtHTEVXX0xJQlJBUllfRElSfSIpCiAgICBtZXNzYWdlKFNUQVRVUyAiR0xFVyBpbmNsdWRlIGRpcmVjdG9yeTogJHtHTEVXX0lOQ0xVREVfRElSfSIpCiAgZW5kaWYoR0xFV19MSUJSQVJZKQoKICAjIFNldCBwYWNrYWdlIHN0YW5kYXJkIGFyZ3MKICAjaW5jbHVkZShGaW5kUGFja2FnZUhhbmRsZVN0YW5kYXJkQXJncykKICAjRklORF9QQUNLQUdFX0hBTkRMRV9TVEFOREFSRF9BUkdTKEdMRVcgUkVRVUlSRURfVkFSUyBHTEVXX0xJQlJBUlkgR0xFV19JTkNMVURFX0RJUiBHTEVXX0xJQlJBUllfRElSIFZFUlNJT05fVkFSIEdMRVdfVkVSU0lPTikKZW5kbWFjcm8oZmluZF9nbGV3KQoAAAAAAAAAAEwHAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"revert",
					null,
					"CAAAAAAAAAAAAAAAAAAAAAAAAABMBwAAIyBGaW5kIEdMRVcgbGlicmFyeSBhbmQgaW5jbHVkZSBwYXRocyBmb3IgQ01VNDYyIFRoaXMgZGVmaW5lcyB0aGUgZm9sbG93aW5nOgojCiMgR0xFV19GT1VORCAgICAgICAgICAgICBJZiBHTEVXIGlzIGZvdW5kIEdMRVdfTElCUkFSWSAgICAgICAgICAgR0xFVyBsaWJyYXJpZXMKIyBHTEVXX0lOQ0xVREVfRElSIEdMRVcgaW5jbHVkZSBkaXJlY3RvcmllcyBHTEVXX0xJQlJBUllfRElSICAgICAgIEdMRVcgbGlicmFyeQojIGRpcmVjdG9yaWVzCm1hY3JvKGZpbmRfZ2xldykKICBpZihVTklYKQogICAgc2V0KEdMRVdfSU5DX05BTUVTIGdsZXcuaCkKICAgIHNldChHTEVXX0xJQl9OQU1FUyBsaWJHTEVXLnNvIGxpYkdMRVcuYSkKICAgIGlmKEFQUExFKQogICAgICBzZXQoR0xFV19MSUJfTkFNRVMgbGliZ2xld19vc3guYSkKICAgIGVuZGlmKEFQUExFKQogIGVuZGlmKFVOSVgpCgogICMgR0xFVyBzdGF0aWMgbGlicmFyeQogIGZpbmRfbGlicmFyeShHTEVXX0xJQlJBUlkgTkFNRVMgJHtHTEVXX0xJQl9OQU1FU30gRE9DICJHTEVXIGxpYnJhcnkiIENNQUtFX0ZJTkRfUk9PVF9QQVRIX0JPVEgpCgogIGlmKE5PVCBHTEVXX0xJQlJBUlkpCiAgICBpbmNsdWRlKEZpbmRQa2dDb25maWcpCgogICAgcGtnX3NlYXJjaF9tb2R1bGUoR0xFVyBnbGV3KQogIGVuZGlmKE5PVCBHTEVXX0xJQlJBUlkpCgogICMgR0xFVyBsaWJyYXJ5IGRpcgogIGlmKE5PVCBHTEVXX0xJQlJBUllfRElSKQogICAgaWYoR0xFV19MSUJSQVJZKQogICAgICBnZXRfZmlsZW5hbWVfY29tcG9uZW50KEdMRVdfTElCUkFSWV9ESVIgIiR7R0xFV19MSUJSQVJZfSIgRElSRUNUT1JZKQogICAgZWxzZShHTEVXX0xJQlJBUlkpCiAgICAgIGZpbmRfcGF0aChHTEVXX0xJQlJBUllfRElSIE5BTUVTICR7R0xFV19MSUJfTkFNRVN9CiAgICAgICAgICAgICAgICBET0MgIkdMRVcgbGlicmFyeSBkaXJlY3RvcnkiKQogICAgZW5kaWYoR0xFV19MSUJSQVJZKQogIGVuZGlmKE5PVCBHTEVXX0xJQlJBUllfRElSKQoKICAjIEdMRVcgaW5jbHVkZSBkaXIKICBpZihOT1QgR0xFV19JTkNMVURFX0RJUikKICAgIGlmKEdMRVdfTElCUkFSWV9ESVIpCiAgICAgIHN0cmluZyhSRUdFWCBSRVBMQUNFICIvbGliLy4qIiAiL2luY2x1ZGUiIEdMRVdfSU5DTFVERV9ESVIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIiR7R0xFV19MSUJSQVJZX0RJUn0iKQogICAgZWxzZShHTEVXX0xJQlJBUllfRElSKQogICAgICBmaW5kX3BhdGgoR0xFV19JTkNMVURFX0RJUiBOQU1FUyAke0dMRVdfSU5DX05BTUVTfQogICAgICAgICAgICAgICAgRE9DICJHTEVXIGluY2x1ZGUgZGlyZWN0b3J5IikKICAgIGVuZGlmKEdMRVdfTElCUkFSWV9ESVIpCiAgZW5kaWYoTk9UIEdMRVdfSU5DTFVERV9ESVIpCgogICMgVmVyc2lvbgogIHNldChHTEVXX1ZFUlNJT04gMS4xMy4wKQoKICBpZihHTEVXX0xJQlJBUlkpCiAgICBtZXNzYWdlKFNUQVRVUyAiR0xFVyBsaWJyYXJ5OiAke0dMRVdfTElCUkFSWX0iKQogICAgbWVzc2FnZShTVEFUVVMgIkdMRVcgbGlicmFyeSBkaXJlY3Rvcnk6ICR7R0xFV19MSUJSQVJZX0RJUn0iKQogICAgbWVzc2FnZShTVEFUVVMgIkdMRVcgaW5jbHVkZSBkaXJlY3Rvcnk6ICR7R0xFV19JTkNMVURFX0RJUn0iKQogIGVuZGlmKEdMRVdfTElCUkFSWSkKCiAgIyBTZXQgcGFja2FnZSBzdGFuZGFyZCBhcmdzIGluY2x1ZGUoRmluZFBhY2thZ2VIYW5kbGVTdGFuZGFyZEFyZ3MpCiAgIyBGSU5EX1BBQ0tBR0VfSEFORExFX1NUQU5EQVJEX0FSR1MoR0xFVyBSRVFVSVJFRF9WQVJTIEdMRVdfTElCUkFSWQogICMgR0xFV19JTkNMVURFX0RJUiBHTEVXX0xJQlJBUllfRElSIFZFUlNJT05fVkFSIEdMRVdfVkVSU0lPTikKZW5kbWFjcm8oZmluZF9nbGV3KQoAAAAAAAAAAD4IAAAAAAAAAAAAAAAAAAAAAAAAPwgAAAAAAAAAAAAAAAAAAAAAAACFCAAAAAAAAAAAAAAAAAAAAAAAAIUIAAAAAAAAAAAAAAAAAAAAAAAASggAAAAAAAAAAAAAAAAAAAAAAABKCAAAAAAAAAAAAAAAAAAAAAAAAN4IAAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADeCAAAIyBGaW5kIEdMRVcgbGlicmFyeSBhbmQgaW5jbHVkZSBwYXRocyBmb3IgQ01VNDYyIFRoaXMgZGVmaW5lcyB0aGUgZm9sbG93aW5nOgojCiMgR0xFV19GT1VORCAgICAgICAgICAgICBJZiBHTEVXIGlzIGZvdW5kIEdMRVdfTElCUkFSWSAgICAgICAgICAgR0xFVyBsaWJyYXJpZXMgR0xFV19JTkNMVURFX0RJUiBHTEVXIGluY2x1ZGUgZGlyZWN0b3JpZXMgR0xFV19MSUJSQVJZX0RJUiAgICAgICBHTEVXIGxpYnJhcnkgZGlyZWN0b3JpZXMKbWFjcm8oZmluZF9nbGV3KQogIGlmKFVOSVgpCiAgICBzZXQoR0xFV19JTkNfTkFNRVMgZ2xldy5oKQogICAgc2V0KEdMRVdfTElCX05BTUVTIGxpYkdMRVcuc28gbGliR0xFVy5hKQogICAgaWYoQVBQTEUpCiAgICAgIHNldChHTEVXX0xJQl9OQU1FUyBsaWJnbGV3X29zeC5hKQogICAgZW5kaWYoQVBQTEUpCiAgZW5kaWYoVU5JWCkKCiAgIyBHTEVXIHN0YXRpYyBsaWJyYXJ5CiAgZmluZF9saWJyYXJ5KEdMRVdfTElCUkFSWSBOQU1FUyAke0dMRVdfTElCX05BTUVTfSBET0MgIkdMRVcgbGlicmFyeSIgQ01BS0VfRklORF9ST09UX1BBVEhfQk9USCkKCiAgaWYoTk9UIEdMRVdfTElCUkFSWSkKICAgIGlmKE5PVCBQS0dfQ09ORklHX0ZPVU5EKQogICAgICBpbmNsdWRlKEZpbmRQa2dDb25maWcpCiAgICBlbmRpZihOT1QgUEtHX0NPTkZJR19GT1VORCkKCiAgICBwa2dfc2VhcmNoX21vZHVsZShHTEVXIGdsZXcpCgogICAgc2V0KEdMRVdfTElCUkFSWSAiJHtHTEVXX0xJTktfTElCUkFSSUVTfSIpCiAgICBzZXQoR0xFV19JTkNMVURFX0RJUiAiJHtHTEVXX0lOQ0xVREVfRElSU30iKQogIGVuZGlmKE5PVCBHTEVXX0xJQlJBUlkpCgogICMgR0xFVyBsaWJyYXJ5IGRpcgogIGlmKE5PVCBHTEVXX0xJQlJBUllfRElSKQogICAgaWYoR0xFV19MSUJSQVJZKQogICAgICBnZXRfZmlsZW5hbWVfY29tcG9uZW50KEdMRVdfTElCUkFSWV9ESVIgIiR7R0xFV19MSUJSQVJZfSIgRElSRUNUT1JZKQogICAgZWxzZShHTEVXX0xJQlJBUlkpCiAgICAgIGZpbmRfcGF0aChHTEVXX0xJQlJBUllfRElSIE5BTUVTICR7R0xFV19MSUJfTkFNRVN9IERPQyAiR0xFVyBsaWJyYXJ5IGRpcmVjdG9yeSIpCiAgICBlbmRpZihHTEVXX0xJQlJBUlkpCiAgZW5kaWYoTk9UIEdMRVdfTElCUkFSWV9ESVIpCgogICMgR0xFVyBpbmNsdWRlIGRpcgogIGlmKE5PVCBHTEVXX0lOQ0xVREVfRElSKQogICAgaWYoR0xFV19MSUJSQVJZX0RJUikKICAgICAgc3RyaW5nKFJFR0VYIFJFUExBQ0UgIi9saWIvPy4qIiAiL2luY2x1ZGUiIEdMRVdfSU5DTFVERV9ESVIgIiR7R0xFV19MSUJSQVJZX0RJUn0iKQogICAgZWxzZShHTEVXX0xJQlJBUllfRElSKQogICAgICBmaW5kX3BhdGgoR0xFV19JTkNMVURFX0RJUiBOQU1FUyAke0dMRVdfSU5DX05BTUVTfSBET0MgIkdMRVcgaW5jbHVkZSBkaXJlY3RvcnkiKQogICAgZW5kaWYoR0xFV19MSUJSQVJZX0RJUikKICBlbmRpZihOT1QgR0xFV19JTkNMVURFX0RJUikKCiAgIyBWZXJzaW9uCiAgc2V0KEdMRVdfVkVSU0lPTiAxLjEzLjApCgogIHNldChHTEVXX0xJQlJBUlkgIiR7R0xFV19MSUJSQVJZfSIgQ0FDSEUgRklMRVBBVEggIkdMRVcgbGlicmFyeSIpCiAgc2V0KEdMRVdfTElCUkFSWV9ESVIgIiR7R0xFV19MSUJSQVJZX0RJUn0iIENBQ0hFIEZJTEVQQVRIICJHTEVXIGxpYnJhcnkgZGlyZWN0b3J5IikKICBzZXQoR0xFV19JTkNMVURFX0RJUiAiJHtHTEVXX0lOQ0xVREVfRElSfSIgQ0FDSEUgRklMRVBBVEggIkdMRVcgaW5jbHVkZSBkaXJlY3RvcnkiKQoKICBpZihOT1QgR0xFV19DT05GSUdVUkFUSU9OX1NIT1dOKQogICAgbWVzc2FnZShTVEFUVVMgIkdMRVcgbGlicmFyeTogJHtHTEVXX0xJQlJBUll9IikKICAgIG1lc3NhZ2UoU1RBVFVTICJHTEVXIGxpYnJhcnkgZGlyZWN0b3J5OiAke0dMRVdfTElCUkFSWV9ESVJ9IikKICAgIG1lc3NhZ2UoU1RBVFVTICJHTEVXIGluY2x1ZGUgZGlyZWN0b3J5OiAke0dMRVdfSU5DTFVERV9ESVJ9IikKICAgIHNldChHTEVXX0NPTkZJR1VSQVRJT05fU0hPV04gVFJVRSkKICBlbmRpZihOT1QgR0xFV19DT05GSUdVUkFUSU9OX1NIT1dOKQoKICAjIFNldCBwYWNrYWdlIHN0YW5kYXJkIGFyZ3MgaW5jbHVkZShGaW5kUGFja2FnZUhhbmRsZVN0YW5kYXJkQXJncykgRklORF9QQUNLQUdFX0hBTkRMRV9TVEFOREFSRF9BUkdTKEdMRVcgUkVRVUlSRURfVkFSUyBHTEVXX0xJQlJBUlkgR0xFV19JTkNMVURFX0RJUiBHTEVXX0xJQlJBUllfRElSIFZFUlNJT05fVkFSIEdMRVdfVkVSU0lPTikKZW5kbWFjcm8oZmluZF9nbGV3KQoAAAAAAAAAAN4IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Build all",
					""
				],
				[
					"Build tests",
					""
				],
				[
					"List",
					""
				],
				[
					"Rebuild CTags",
					""
				],
				[
					"clang-format",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-nanovg",
		"/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg",
		"/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/nanovg/example"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-nanovg/CMakeFiles/qjs-nanovg.dir/build.make",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/iteration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lexer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_parser.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/location.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_watch.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_sockets.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_childprocess.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_mmap.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_xml.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-lexer.c",
		"/home/roman/.config/sublime-text/Packages/User/Themes/Aurora.tmTheme",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeCache.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/list-exports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_lexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qsort_r.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/FindQuickJS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/inet_ntop.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/child-process.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/clexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-repeater.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/predicate.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_location.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/debugger.xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tmp.xml",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/functions.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/check-flags.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/TODO",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/jslexer.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/path.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/clock_gettime.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/require.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/char-utils.c",
		"/home/roman/Dokumente/bookmarks_10_26_21.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tmp.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/buffer-utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/virtual-properties.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/base64.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/base64.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/Doxyfile",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-stringdecoder.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/pointer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-syscallerror.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/ringbuffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-bjson.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-archive.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-gpio.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/.clang-format",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/fs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/parser.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/util.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-debug/modules/repl.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-gnu/modules/qjscalc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/build/x86_64-linux-gnu/modules/repl.c",
		"/home/roman/.config/sublime-text/Packages/User/ExtendedSwitcher.sublime-settings",
		"/home/roman/.config/sublime-text/Packages/ExtendedSwitcher/ExtendedSwitcher.sublime-settings",
		"/home/roman/Projects/plot-cv/lib/jslexer.js",
		"/home/roman/.config/sublime-text/Packages/User/LiveReload.sublime-settings",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/socketpair_win32.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/extendArray.js",
		"/home/roman/.config/sublime-text/Packages/LiveReload/LiveReload.sublime-settings",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/coreutils/gnulib/lib/execute.c",
		"/home/roman/Projects/coreutils/gnulib/lib/windows-spawn.h",
		"/home/roman/Projects/coreutils/gnulib/lib/spawn-pipe.c",
		"/tmp/spawn/pcs_exec.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/modules.project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/mmap-win32.h"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 130.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"OpenGL",
			"RotatePoint",
			"Rotate",
			"imgSz_2",
			"nvg[^ ]*Size",
			"NVGcolor",
			"BeginFrame",
			"context\\.",
			"HSLA",
			"glewInit",
			"#include",
			"renderStroke",
			"drawWindow",
			"EndFrame",
			" gl[A-Z]",
			"CreateImage",
			"_JS_NANOVG_FLAG"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\nconst runMain = () => {\n  try {\n    main(scriptArgs.slice(1));\n    std.exit(0);\n  } catch(error) {\n    console.log('ERROR:', error);\n  }\n};\nimport('console') .catch(runMain) .then(({ Console }) => ((globalThis.console = new Console({ inspectOptions: {} })), runMain()));\n",
			"),\n"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": null,
							"function_name_status_row": 26,
							"outline_rename_mode": false,
							"symkeys":
							[
							],
							"symlist":
							[
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1647669782.29,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "qjs-nanovg.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647434192.97,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "nanovg-qjs.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25525,
						"regions":
						{
						},
						"selection":
						[
							[
								22003,
								22020
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 869,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647434317.98,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14232.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "test-nanovg.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6045,
						"regions":
						{
						},
						"selection":
						[
							[
								5911,
								5639
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 212,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647669778.49,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3315.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "CMakeLists.txt",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2517,
						"regions":
						{
							"col_DD0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										49,
										56
									]
								],
								"scope": "col_DD0000FF"
							},
							"col_DD0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DD0000FF_circle.png",
								"regions":
								[
									[
										23,
										23
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								2439,
								2439
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 53,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647670558.08,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 414.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "nanovg-qjs.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 595,
						"regions":
						{
						},
						"selection":
						[
							[
								314,
								315
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 14,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tabs_extra_last_activated": 1647434167.85,
							"tabs_extra_last_activated_sheet_index": 3
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "nanovg/example/example_gl3.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5283,
						"regions":
						{
						},
						"selection":
						[
							[
								2801,
								2801
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 91,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647429239.99,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1687.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "nanovg/example/demo.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 546,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647429241.65,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "nanovg/example/demo.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32500,
						"regions":
						{
						},
						"selection":
						[
							[
								2659,
								2668
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 98,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647429258.25,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1637.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "nanovg/src/nanovg_gl.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 46912,
						"regions":
						{
						},
						"selection":
						[
							[
								3410,
								3418
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 111,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647429341.82,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1656.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "nanovg/src/nanovg_gl_utils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4807,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1647429349.92,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "nanovg/src/nanovg.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 77565,
						"regions":
						{
						},
						"selection":
						[
							[
								57861,
								57873
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2282,
							"rulers":
							[
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1647429288.04,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": false,
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 42772.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22755,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions": "rAAAALkAAAAAAAAAxQAAAAAAAAAAAAAAAADwv9cBAAAAAAAA4wEAAAAAAAAAAAAAAADwv+0BAAAAAAAA+QEAAAAAAAAAAAAAAADwv+ECAAAAAAAA7QIAAAAAAAAAAAAAAADwv/8DAAAAAAAACwQAAAAAAAAAAAAAAADwvxUEAAAAAAAAIQQAAAAAAAAAAAAAAADwv14FAAAAAAAAagUAAAAAAAAAAAAAAADwv1gHAAAAAAAAZAcAAAAAAAAAAAAAAADwv10JAAAAAAAAaQkAAAAAAAAAAAAAAADwv5sKAAAAAAAApwoAAAAAAAAAAAAAAADwv7EKAAAAAAAAvQoAAAAAAAAAAAAAAADwvwEMAAAAAAAADQwAAAAAAAAAAAAAAADwvx8NAAAAAAAAKw0AAAAAAAAAAAAAAADwvzUNAAAAAAAAQQ0AAAAAAAAAAAAAAADwvykOAAAAAAAANQ4AAAAAAAAAAAAAAADwv0cPAAAAAAAAUw8AAAAAAAAAAAAAAADwv10PAAAAAAAAaQ8AAAAAAAAAAAAAAADwv6YQAAAAAAAAshAAAAAAAAAAAAAAAADwv6ASAAAAAAAArBIAAAAAAAAAAAAAAADwv6UUAAAAAAAAsRQAAAAAAAAAAAAAAADwv+MVAAAAAAAA7xUAAAAAAAAAAAAAAADwv/kVAAAAAAAABRYAAAAAAAAAAAAAAADwv0kXAAAAAAAAVRcAAAAAAAAAAAAAAADwv2cYAAAAAAAAcxgAAAAAAAAAAAAAAADwv30YAAAAAAAAiRgAAAAAAAAAAAAAAADwv3EZAAAAAAAAfRkAAAAAAAAAAAAAAADwv48aAAAAAAAAmxoAAAAAAAAAAAAAAADwv6UaAAAAAAAAsRoAAAAAAAAAAAAAAADwv+4bAAAAAAAA+hsAAAAAAAAAAAAAAADwv+gdAAAAAAAA9B0AAAAAAAAAAAAAAADwv+0fAAAAAAAA+R8AAAAAAAAAAAAAAADwvyshAAAAAAAANyEAAAAAAAAAAAAAAADwv0EhAAAAAAAATSEAAAAAAAAAAAAAAADwv3siAAAAAAAAgyIAAAAAAAAAAAAAAADwv8ciAAAAAAAAzyIAAAAAAAAAAAAAAADwv+4iAAAAAAAA9iIAAAAAAAAAAAAAAADwvzQjAAAAAAAAPCMAAAAAAAAAAAAAAADwv1ojAAAAAAAAYiMAAAAAAAAAAAAAAADwv4EjAAAAAAAAiSMAAAAAAAAAAAAAAADwv5wjAAAAAAAApCMAAAAAAAAAAAAAAADwv7cjAAAAAAAAvyMAAAAAAAAAAAAAAADwv9MjAAAAAAAA2yMAAAAAAAAAAAAAAADwv/QjAAAAAAAA/CMAAAAAAAAAAAAAAADwvw8kAAAAAAAAFyQAAAAAAAAAAAAAAADwv6ckAAAAAAAAryQAAAAAAAAAAAAAAADwv/8lAAAAAAAAByYAAAAAAAAAAAAAAADwvykmAAAAAAAAMSYAAAAAAAAAAAAAAADwv5EnAAAAAAAAmScAAAAAAAAAAAAAAADwv8wnAAAAAAAA1CcAAAAAAAAAAAAAAADwv6EpAAAAAAAAqSkAAAAAAAAAAAAAAADwv8spAAAAAAAA0ykAAAAAAAAAAAAAAADwvzMrAAAAAAAAOysAAAAAAAAAAAAAAADwv24rAAAAAAAAdisAAAAAAAAAAAAAAADwvzAtAAAAAAAAOC0AAAAAAAAAAAAAAADwv1otAAAAAAAAYi0AAAAAAAAAAAAAAADwv8suAAAAAAAA0y4AAAAAAAAAAAAAAADwvwYvAAAAAAAADi8AAAAAAAAAAAAAAADwvycwAAAAAAAALzAAAAAAAAAAAAAAAADwv+owAAAAAAAA8jAAAAAAAAAAAAAAAADwvwMxAAAAAAAACzEAAAAAAAAAAAAAAADwvx0xAAAAAAAAJTEAAAAAAAAAAAAAAADwvzgxAAAAAAAAQDEAAAAAAAAAAAAAAADwv5cxAAAAAAAAnzEAAAAAAAAAAAAAAADwv7YxAAAAAAAAvjEAAAAAAAAAAAAAAADwv/8xAAAAAAAABzIAAAAAAAAAAAAAAADwv34yAAAAAAAAhjIAAAAAAAAAAAAAAADwvxQzAAAAAAAAHDMAAAAAAAAAAAAAAADwv7IzAAAAAAAAujMAAAAAAAAAAAAAAADwvz40AAAAAAAARjQAAAAAAAAAAAAAAADwv100AAAAAAAAZTQAAAAAAAAAAAAAAADwv6E0AAAAAAAAqTQAAAAAAAAAAAAAAADwv780AAAAAAAAxzQAAAAAAAAAAAAAAADwv+M0AAAAAAAA6zQAAAAAAAAAAAAAAADwv701AAAAAAAAxTUAAAAAAAAAAAAAAADwvz82AAAAAAAARzYAAAAAAAAAAAAAAADwv142AAAAAAAAZjYAAAAAAAAAAAAAAADwv6I2AAAAAAAAqjYAAAAAAAAAAAAAAADwv8A2AAAAAAAAyDYAAAAAAAAAAAAAAADwv9k2AAAAAAAA4TYAAAAAAAAAAAAAAADwv2M3AAAAAAAAazcAAAAAAAAAAAAAAADwv+o3AAAAAAAA8jcAAAAAAAAAAAAAAADwvwk4AAAAAAAAETgAAAAAAAAAAAAAAADwv004AAAAAAAAVTgAAAAAAAAAAAAAAADwv2s4AAAAAAAAczgAAAAAAAAAAAAAAADwv4Q4AAAAAAAAjDgAAAAAAAAAAAAAAADwvxA5AAAAAAAAGDkAAAAAAAAAAAAAAADwv2w5AAAAAAAAdDkAAAAAAAAAAAAAAADwv4s5AAAAAAAAkzkAAAAAAAAAAAAAAADwv9E5AAAAAAAA2TkAAAAAAAAAAAAAAADwv+85AAAAAAAA9zkAAAAAAAAAAAAAAADwvxM6AAAAAAAAGzoAAAAAAAAAAAAAAADwvyw6AAAAAAAANDoAAAAAAAAAAAAAAADwv7g6AAAAAAAAwDoAAAAAAAAAAAAAAADwvxQ7AAAAAAAAHDsAAAAAAAAAAAAAAADwvzM7AAAAAAAAOzsAAAAAAAAAAAAAAADwv3k7AAAAAAAAgTsAAAAAAAAAAAAAAADwv5c7AAAAAAAAnzsAAAAAAAAAAAAAAADwv7s7AAAAAAAAwzsAAAAAAAAAAAAAAADwv9Q7AAAAAAAA3DsAAAAAAAAAAAAAAADwv0U8AAAAAAAATTwAAAAAAAAAAAAAAADwv148AAAAAAAAZjwAAAAAAAAAAAAAAADwv3g8AAAAAAAAgDwAAAAAAAAAAAAAAADwv5M8AAAAAAAAmzwAAAAAAAAAAAAAAADwv/I8AAAAAAAA+jwAAAAAAAAAAAAAAADwvxE9AAAAAAAAGT0AAAAAAAAAAAAAAADwv5A9AAAAAAAAmD0AAAAAAAAAAAAAAADwvyY+AAAAAAAALj4AAAAAAAAAAAAAAADwv+s+AAAAAAAA8z4AAAAAAAAAAAAAAADwvwY/AAAAAAAADj8AAAAAAAAAAAAAAADwvyE/AAAAAAAAKT8AAAAAAAAAAAAAAADwvzs/AAAAAAAAQz8AAAAAAAAAAAAAAADwv1Y/AAAAAAAAXj8AAAAAAAAAAAAAAADwvyJAAAAAAAAAKkAAAAAAAAAAAAAAAADwvz1AAAAAAAAARUAAAAAAAAAAAAAAAADwv1dAAAAAAAAAX0AAAAAAAAAAAAAAAADwv3JAAAAAAAAAekAAAAAAAAAAAAAAAADwv4tAAAAAAAAAk0AAAAAAAAAAAAAAAADwv0tBAAAAAAAAU0EAAAAAAAAAAAAAAADwv2ZBAAAAAAAAbkEAAAAAAAAAAAAAAADwv4BBAAAAAAAAiEEAAAAAAAAAAAAAAADwv5tBAAAAAAAAo0EAAAAAAAAAAAAAAADwv7RBAAAAAAAAvEEAAAAAAAAAAAAAAADwv2ZCAAAAAAAAbkIAAAAAAAAAAAAAAADwv4NCAAAAAAAAi0IAAAAAAAAAAAAAAADwv6FCAAAAAAAAqUIAAAAAAAAAAAAAAADwv79CAAAAAAAAx0IAAAAAAAAAAAAAAADwv3RDAAAAAAAAfEMAAAAAAAAAAAAAAADwvxREAAAAAAAAHEQAAAAAAAAAAAAAAADwvy9EAAAAAAAAN0QAAAAAAAAAAAAAAADwv0lEAAAAAAAAUUQAAAAAAAAAAAAAAADwv2JEAAAAAAAAakQAAAAAAAAAAAAAAADwv4VEAAAAAAAAjUQAAAAAAAAAAAAAAADwv8hEAAAAAAAA0EQAAAAAAAAAAAAAAADwvzBFAAAAAAAAOEUAAAAAAAAAAAAAAADwv91FAAAAAAAA5UUAAAAAAAAAAAAAAADwv/hFAAAAAAAAAEYAAAAAAAAAAAAAAADwvxJGAAAAAAAAGkYAAAAAAAAAAAAAAADwvy1GAAAAAAAANUYAAAAAAAAAAAAAAADwv0ZGAAAAAAAATkYAAAAAAAAAAAAAAADwvwdHAAAAAAAAD0cAAAAAAAAAAAAAAADwvx5HAAAAAAAAJkcAAAAAAAAAAAAAAADwvzVHAAAAAAAAPUcAAAAAAAAAAAAAAADwv3dHAAAAAAAAf0cAAAAAAAAAAAAAAADwv8pHAAAAAAAA0kcAAAAAAAAAAAAAAADwv4hIAAAAAAAAkEgAAAAAAAAAAAAAAADwv99IAAAAAAAA50gAAAAAAAAAAAAAAADwv/pIAAAAAAAAAkkAAAAAAAAAAAAAAADwvylJAAAAAAAAMUkAAAAAAAAAAAAAAADwv0RJAAAAAAAATEkAAAAAAAAAAAAAAADwv6RJAAAAAAAArEkAAAAAAAAAAAAAAADwv/pJAAAAAAAAAkoAAAAAAAAAAAAAAADwv0VKAAAAAAAATUoAAAAAAAAAAAAAAADwv9RKAAAAAAAA3EoAAAAAAAAAAAAAAADwv5hLAAAAAAAAoEsAAAAAAAAAAAAAAADwvwVMAAAAAAAADUwAAAAAAAAAAAAAAADwv39MAAAAAAAAh0wAAAAAAAAAAAAAAADwv8NNAAAAAAAAy00AAAAAAAAAAAAAAADwv4NOAAAAAAAAi04AAAAAAAAAAAAAAADwv85PAAAAAAAA1k8AAAAAAAAAAAAAAADwvzxQAAAAAAAARFAAAAAAAAAAAAAAAADwv7hQAAAAAAAAwFAAAAAAAAAAAAAAAADwv3ZRAAAAAAAAflEAAAAAAAAAAAAAAADwvyZSAAAAAAAALlIAAAAAAAAAAAAAAADwv8hSAAAAAAAA0FIAAAAAAAAAAAAAAADwv0hTAAAAAAAAUFMAAAAAAAAAAAAAAADwv+hTAAAAAAAA8FMAAAAAAAAAAAAAAADwv79UAAAAAAAAx1QAAAAAAAAAAAAAAADwv35VAAAAAAAAhlUAAAAAAAAAAAAAAADwvwNWAAAAAAAAC1YAAAAAAAAAAAAAAADwv4hWAAAAAAAAkFYAAAAAAAAAAAAAAADwv8dXAAAAAAAAz1cAAAAAAAAAAAAAAADwv+lXAAAAAAAA8VcAAAAAAAAAAAAAAADwvw",
								"scope": ""
							}
						},
						"selection":
						[
							[
								8834,
								8834
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": 179,
							"line_numbers": false,
							"output_tag": 4,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1647429350.85,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3686.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "nanovg/src/nanovg.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28610,
						"regions":
						{
						},
						"selection":
						[
							[
								13864,
								13876
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 385,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1647431160.39,
							"tabs_extra_last_activated_sheet_index": 11,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6900.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "cmake/UseMultiArch.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1048,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641049633.58,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "cmake/FindGLFW.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2578,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1641049633.51,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 180.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "cmake/FindGLEW.cmake",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2270,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/User/Themes/CMake.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1645828535.28,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "qjs-nanovg.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"nanovg.h",
				"nanovg/src/nanovg.h"
			],
			[
				"test_wa",
				"tests/test_watch.js"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"test_sock",
				"tests/test_sockets.js"
			],
			[
				"fs.js",
				"lib/fs.js"
			],
			[
				"test_lexer",
				"tests/test_lexer.js"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"utils.h",
				"utils.h"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"utils.c",
				"utils.c"
			],
			[
				"test_lex",
				"tests/test_lexer.js"
			],
			[
				"test_misc",
				"tests/test_misc.js"
			],
			[
				"test_so",
				"tests/test_sockets.js"
			],
			[
				"tree-wa",
				"quickjs-tree-walker.c"
			],
			[
				"path.c",
				"path.c"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"quick",
				"quickjs-xml.c"
			],
			[
				"misc.c",
				"quickjs-misc.c"
			],
			[
				"qjsm.c",
				"qjsm.c"
			],
			[
				"predi",
				"predicate.c"
			],
			[
				"cmakelis",
				"CMakeLists.txt"
			],
			[
				"qjsm",
				"qjsm.c"
			],
			[
				"char-u",
				"char-utils.h"
			],
			[
				"quickjs-xml",
				"quickjs-xml.c"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"",
				"tests/test_xml.js"
			],
			[
				"quickjs-in",
				"quickjs-internal.h"
			],
			[
				"clang-fo",
				".clang-format"
			],
			[
				"doxy",
				"Doxyfile"
			],
			[
				"Doxyfile",
				"Doxyfile"
			],
			[
				"interna",
				"quickjs-internal.h"
			],
			[
				"vector.h",
				"vector.h"
			],
			[
				"console.js",
				"lib/console.js"
			],
			[
				"quickjs-lex",
				"quickjs-lexer.c"
			],
			[
				"exten",
				"lib/extendArray.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"child",
				"child-process.c"
			],
			[
				"qsort_r",
				"qsort_r.c"
			],
			[
				"quickjs-misc",
				"quickjs-misc.c"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"quicksj-misc",
				"quickjs-misc.c"
			],
			[
				"process.js",
				"lib/process.js"
			],
			[
				"quickjs-mm",
				"quickjs-mmap.c"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"quickjs-m",
				"quickjs-misc.c"
			],
			[
				"redicate.c",
				"predicate.c"
			],
			[
				"sockets.h",
				"quickjs-sockets.h"
			],
			[
				"quickjs-pat",
				"quickjs-path.c"
			],
			[
				"buffer-u",
				"buffer-utils.c"
			],
			[
				"buffer-",
				"buffer-utils.h"
			],
			[
				"parser.js",
				"lib/parser.js"
			],
			[
				"char-",
				"char-utils.h"
			],
			[
				"test_par",
				"tests/test_parser.js"
			],
			[
				"conso",
				"lib/console.js"
			],
			[
				"clang-f",
				".clang-format"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"test_mi",
				"tests/test_misc.js"
			],
			[
				"ockets.",
				"quickjs-sockets.h"
			],
			[
				"quickjs-ar",
				"quickjs-archive.c"
			],
			[
				"fd_set",
				"lib/fd_set.js"
			],
			[
				"buffer-ut",
				"buffer-utils.c"
			],
			[
				"misc.",
				"quickjs-misc.h"
			],
			[
				"qjsm.",
				"qjsm.c"
			],
			[
				"quickjs-mi",
				"quickjs-misc.c"
			],
			[
				"socklen_t.js",
				"lib/socklen_t.js"
			],
			[
				"str.h",
				"quickjs-stringdecoder.h"
			],
			[
				"quickjs-libc",
				"~/Sources/plot-cv/quickjs/quickjs-libc.h"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.c"
			],
			[
				"sockets",
				"quickjs-sockets.c"
			],
			[
				"test_loca",
				"tests/test_location.js"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				".clang-fo",
				".clang-format"
			],
			[
				"buff",
				"buffer-utils.c"
			],
			[
				"buffer-util",
				"buffer-utils.c"
			],
			[
				"buffer-utils.c",
				"buffer-utils.c"
			],
			[
				"quickjs-so",
				"quickjs-sockets.c"
			],
			[
				"quickjs-insp",
				"quickjs-inspect.c"
			],
			[
				"test_soc",
				"tests/test_sockets.js"
			],
			[
				"test_qjsm",
				"tests/test_qjsm.js"
			],
			[
				"buffer-tu",
				"buffer-utils.c"
			],
			[
				"repl.",
				"lib/repl.js"
			],
			[
				"quickjs-blo",
				"quickjs-blob.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"test_mis",
				"tests/test_misc.js"
			],
			[
				"test_blob",
				"tests/test_blob.js"
			],
			[
				"test_string",
				"tests/test_stringdecoder.js"
			],
			[
				"test_str",
				"tests/test_stringdecoder.js"
			],
			[
				"quickjs-blb",
				"quickjs-blob.h"
			],
			[
				"ringbuffer.h",
				"ringbuffer.h"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"quickjsmo",
				"cmake/QuickJSModule.cmake"
			],
			[
				"inspe",
				"quickjs-inspect.c"
			],
			[
				"misc",
				"quickjs-misc.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"terminal.",
				"lib/terminal.js"
			],
			[
				"tty.js",
				"lib/tty.js"
			],
			[
				"intern",
				"quickjs-internal.h"
			],
			[
				"test_chil",
				"tests/test_childprocess.js"
			],
			[
				"pointer.h",
				"pointer.h"
			],
			[
				"stack",
				"lib/stack.js"
			],
			[
				"quickjs.c",
				"~/Projects/plot-cv/quickjs/quickjs.c"
			],
			[
				"pointer.c",
				"pointer.c"
			],
			[
				"-insp",
				"quickjs-inspect.c"
			],
			[
				"test_op",
				"tests/test_op_overloading.js"
			],
			[
				"lexer.c",
				"lexer.c"
			],
			[
				"quickjs-lexer",
				"quickjs-lexer.c"
			],
			[
				"test_qjs",
				"tests/test_qjsm.js"
			],
			[
				"quickjs-pre",
				"quickjs-predicate.c"
			],
			[
				"pred",
				"predicate.c"
			],
			[
				"dee",
				"quickjs-deep.c"
			],
			[
				"test_qj",
				"tests/test_qjsm.js"
			],
			[
				"quicksj-in",
				"quickjs-internal.h"
			],
			[
				"property",
				"property-enumeration.c"
			],
			[
				"pointer.",
				"pointer.c"
			],
			[
				"quickjs",
				"quickjs-inspect.c"
			],
			[
				"util.j",
				"lib/util.js"
			],
			[
				"jsm.c",
				"qjsm.c"
			],
			[
				"test_point",
				"tests/test_pointer.js"
			],
			[
				"bnflex",
				"lib/bnflexer.js"
			],
			[
				"bnf.y",
				"~/Projects/plot-cv/lib/grammars/bnf.y"
			],
			[
				"grammar.ki",
				"grammar.kison"
			],
			[
				"test_pat",
				"tests/test_path.js"
			],
			[
				"test_parse",
				"tests/test_parser.js"
			],
			[
				"test_path",
				"tests/test_path.js"
			],
			[
				"lexer.h",
				"lexer.h"
			],
			[
				"test_tree",
				"tests/test_treewalker.js"
			],
			[
				"tree.h",
				"src/tree.h"
			],
			[
				"scan_ulongn",
				"lib/scan/scan_ulongn.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 282.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
